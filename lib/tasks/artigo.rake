require 'digest/sha1'

SECRET = ActiveSupport::SecureRandom.hex(40)

def secure_digest(*args)
    Digest::SHA1.hexdigest(args.flatten.join('--'))
end
def make_token
    secure_digest(Time.now, (1..10).map{ rand.to_s })
end
def password_digest(password, salt)
    digest = SECRET
    10.times do
      digest = secure_digest(digest, salt, password, SECRET)
    end
    digest
end

def make_fake_token
    @fake_token_counter ||= 0
    @fake_token_counter +=  1
    Digest::SHA1.hexdigest(@fake_token_counter.to_s)
end

def write_file(path, contents)
  print "    Writing #{path}..."
  File.new(path, "w") unless File.exist?(path)
  File.open(path, "w") do |f|
    f.write contents
  end
  puts 'done!'
end

namespace :artigo do
    desc 'Generate restauth keys'
    task :generate_keys => :environment do
        puts 'Generating keys...'
        session_path = File.join(::Rails.root.to_s, 'config', 'initializers', 'session_store.rb')
        keys_path = File.join(::Rails.root.to_s, 'config', 'initializers', 'site_keys.rb')

        session_info = <<"EOF"
# Be sure to restart your server when you modify this file.

Artigo::Application.config.session_store :cookie_store, :key => '_artigo_session'
Artigo::Application.config.secret_token = '#{SECRET}'
# Use the database for sessions instead of the cookie-based default,
# which shouldn't be used to store highly confidential information
# (create the session table with "rake db:sessions:create")
# Artigo::Application.config.session_store :active_record_store
EOF
        keys_info = <<"EOF"
# This file should not be made visible to public.
REST_AUTH_SITE_KEY         = '#{SECRET}'
REST_AUTH_DIGEST_STRETCHES = 10
EOF

        write_file session_path, session_info
        write_file keys_path, keys_info
    end

    desc 'Creates a base user fixture for the Restful Auth plugin'
    task :make_auth_fixture => :generate_keys do
        puts 'Generating test fixtures...'
        path    = File.join(::Rails.root.to_s, 'test', 'fixtures', 'users.yml')
        salts   = (1..2).map{ make_fake_token }
        passwds = salts.map{ |salt| password_digest('monkey', salt) }

        user_fixture = <<"EOF"
# This file was generated by the artigo rake task "make_auth_fixture"
# Don't change this unless you know what you're doing
# Changing this file will probably brake your tests
quentin:
  id:                        1
  login:                     quentin
  email:                     quentin@example.com
  salt:                      #{ salts[0] } # SHA1('0')
  crypted_password:          #{ passwds[0] } # 'monkey'
  created_at:                <%= 5.days.ago.to_s :db  %>
  remember_token_expires_at: <%= 1.days.from_now.to_s %>
  remember_token:            #{ make_fake_token }
aaron:
  id:                        2
  login:                     aaron
  email:                     aaron@example.com
  salt:                      #{ salts[1] } # SHA1('1')
  crypted_password:          #{ passwds[1] } # 'monkey'
  created_at:                <%= 1.days.ago.to_s :db %>
  remember_token_expires_at:
  remember_token:
old_password_holder:
  id:                        3
  login:                     old_password_holder
  email:                     salty_dog@example.com
  salt:                      7e3041ebc2fc05a40c60028e2c4901a81035d3cd
  crypted_password:          00742970dc9e6319f8019fd54864d3ea740f04b1 # test
  created_at:                <%= 1.days.ago.to_s :db %>
EOF

        write_file path, user_fixture
    end

    desc 'Creates a base artigo.yml file'
    task :make_config do
        puts 'Generating default artigo configuration...'
        config = <<"EOF"
---
app_theme: metro
google_analytics: analyticscode_here
head_title: My Artigo Blog
site_title: My Artigo Blog
disqus_account: artigo
site_description: Just another awesome Artigo Blog
posts_per_page: "3"
blog_url: http://myartigoblog.com
EOF

        write_file File.join(::Rails.root.to_s, 'config', 'artigo.yml'), config
        write_file File.join(::Rails.root.to_s, 'test', 'artigo_config.yml'), config
    end

    desc 'Creates a base database.yml file'
    task :make_db_config do
        puts 'Generating default database configuration...'
        path = File.join(::Rails.root.to_s, 'config', 'database.yml')

        config = <<"EOF"
development:
  adapter: sqlite3
  database: db/development.sqlite3
  pool: 5
  timeout: 5000

  #only used for local tests, CI uses configs at the bottom
test:
  adapter: sqlite3
  database: ":memory:"
  pool: 5
  timeout: 500

  #change this before going live
production:
  adapter: sqlite3
  database: db/production.sqlite3
  pool: 5
  timeout: 5000
EOF
        write_file path, config
    end

    desc 'Initializes and fills the database with default data'
    task :seed => ['environment'] do

        puts "Resetting and Migrating..."

        Rake::Task['db:reset'].invoke
        Rake::Task['db:migrate'].invoke

        puts "Removing existing posts..."
        Post.find(:all).each{|p| p.destroy }

        puts "Inserting 'Sample Post'"

        @post = Post.new({
            :published => true,
            :title => "Sample Post",
            :summary => "This is just a sample blog post. Take a look and use it to test any themes you install.",
            :body_md => <<eos
## Header 2
This is an example of a artigo blog post, you could edit this to put information about yourself or your site so readers know where you are coming from. You can create as many blog posts like this one as you like.
>> This is an example of an artigo blog post, you could edit this to put information about yourself or your site so readers know where you are coming from.
### Header 3
This is an example of an artigo blog post, you could edit this to put information about yourself or your site so readers know where you are coming from.

Here are some of my favorite movies

 * Hi Fidelity
 * American President
 * Americas Sweethearts
 * Die Hard
 * L.A. Confidential

#### Header 4
Here are my favorite movies in an ordered list

 1. Hi Fidelity
 2. American President
 3. Americas Sweethearts
 4. Die Hard
 5. L.A. Confidential
eos
        })
        @post.tag_list = "Artigo, Die-Hard, Post Example"
        @post.save

        puts "Inserting 'Welcome to Artigo, release 1: Die Hard'"

        @post = Post.new({
            :published => true,
            :title => "Welcome to Artigo, release 1: Die Hard",
            :summary => "This is your first blog post. You can delete this or edit it and start blogging!",
            :body_md => <<eos
![Die Hard](/images/admin/die-hard.jpg)
Welcome to Artigo release 1, "Die Hard". Artigo, Portuguese for Article, is a blog platform written in Ruby. Artigo is painstakingly developed by me, Jared Barboza of [Codeimpossible.com](http://codeimpossible.com).

I&#39;ve tried to build a very reliable, fast and easy way to blog but if you encounter any issues, use the "I found a bug" feature in the [Admin Area](/admin).

For more updates on Artigo or to let me know about issues, [follow me on twitter](http://twitter.com/codeimpossible)!
eos
        })
        @post.tag_list = "Artigo, Die-Hard, Post Example, First Post, Bruce Willis"
        @post.save

        puts "All Set! Database Seeded!"
    end

    desc 'Initializes and fills the database with default data'
    task :test => ['environment'] do
        puts "Migrating Test Environment..."
        system("rake db:drop RAILS_ENV=test")
        system("rake db:create RAILS_ENV=test")
        system("rake db:migrate RAILS_ENV=test")

        puts "Running Tests..."
        system("rake test")
    end

    task :travis => [
      :make_db_config,
      :make_config,
      :generate_keys,
      :make_auth_fixture,
      :seed
    ]

    desc 'Artigo First Time Setup'
    task :first_time => [
        :make_db_config,
        :make_config,
        :generate_keys,
        :make_auth_fixture,
        :seed,
        :test
    ]
end
