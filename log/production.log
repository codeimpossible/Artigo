  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 21:09:41) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 't') ORDER BY created_at DESC LIMIT 0, 5[0m
Rendering template within layouts/main
Rendering posts/index
Completed in 7ms (View: 3, DB: 0) | 200 OK [http://blog.codeimpossible.com/]
  [4;35;1mSQL (0.1ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 21:10:18) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (published = 't') ORDER BY created_at DESC LIMIT 0, 5[0m
Rendering template within layouts/main
Rendering posts/index
Completed in 2ms (View: 1, DB: 0) | 200 OK [http://blog.codeimpossible.com/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 174.120.23.34 at 2011-04-30 21:13:44) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 't') ORDER BY created_at DESC LIMIT 0, 5[0m
Rendering template within layouts/main
Rendering posts/index
Completed in 2ms (View: 1, DB: 0) | 200 OK [http://blog.codeimpossible.com/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 21:21:05) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 't') ORDER BY created_at DESC LIMIT 0, 5[0m
Rendering template within layouts/main
Rendering posts/index
Completed in 5ms (View: 3, DB: 0) | 200 OK [http://blog.codeimpossible.com/]
  [4;35;1mSQL (0.1ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 21:23:09) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (published = 't') ORDER BY created_at DESC LIMIT 0, 5[0m
Rendering template within layouts/main
Rendering posts/index
Completed in 2ms (View: 1, DB: 0) | 200 OK [http://blog.codeimpossible.com/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 21:24:21) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 't') ORDER BY created_at DESC LIMIT 0, 5[0m
Rendering template within layouts/main
Rendering posts/index
Completed in 2ms (View: 1, DB: 0) | 200 OK [http://blog.codeimpossible.com/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 21:25:10) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 't') ORDER BY created_at DESC LIMIT 0, 5[0m
Rendering template within layouts/main
Rendering posts/index
Completed in 5ms (View: 3, DB: 0) | 200 OK [http://blog.codeimpossible.com/]
  [4;35;1mSQL (0.1ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 21:27:01) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (published = 't') ORDER BY created_at DESC LIMIT 0, 5[0m
Rendering template within layouts/main
Rendering posts/index
Completed in 2ms (View: 1, DB: 0) | 200 OK [http://blog.codeimpossible.com/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 21:30:26) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 't') ORDER BY created_at DESC LIMIT 0, 5[0m
Rendering template within layouts/main
Rendering posts/index
Completed in 6ms (View: 3, DB: 0) | 200 OK [http://blog.codeimpossible.com/]
  [4;35;1mSQL (0.1ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 21:33:40) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (published = 't') ORDER BY created_at DESC LIMIT 0, 5[0m
Rendering template within layouts/main
Rendering posts/index
Completed in 2ms (View: 1, DB: 0) | 200 OK [http://blog.codeimpossible.com/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 21:33:53) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 't') ORDER BY created_at DESC LIMIT 0, 5[0m
Rendering template within layouts/main
Rendering posts/index
Completed in 5ms (View: 3, DB: 0) | 200 OK [http://blog.codeimpossible.com/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 21:36:03) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 't') ORDER BY created_at DESC LIMIT 0, 5[0m
Rendering template within layouts/main
Rendering posts/index
Completed in 6ms (View: 3, DB: 0) | 200 OK [http://blog.codeimpossible.com/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 21:36:22) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 't') ORDER BY created_at DESC LIMIT 0, 5[0m
Rendering template within layouts/main
Rendering posts/index
Completed in 7ms (View: 3, DB: 0) | 200 OK [http://blog.codeimpossible.com/]
  [4;35;1mSQL (0.1ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 21:37:45) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (published = 't') ORDER BY created_at DESC LIMIT 0, 5[0m
Rendering template within layouts/main
Rendering posts/index
Completed in 2ms (View: 1, DB: 0) | 200 OK [http://blog.codeimpossible.com/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 21:45:36) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 't') ORDER BY created_at DESC LIMIT 0, 5[0m
Rendering template within layouts/main
Rendering posts/index
Completed in 5ms (View: 3, DB: 0) | 200 OK [http://blog.codeimpossible.com/]


Processing Admin::DashboardController#index (for 68.187.213.182 at 2011-04-30 21:45:40) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/dashboard"}
Redirected to http://blog.codeimpossible.com/session/new
Filter chain halted as [:login_required] rendered_or_redirected.
Completed in 1ms (DB: 0) | 302 Found [http://blog.codeimpossible.com/admin]


Processing SessionsController#new (for 68.187.213.182 at 2011-04-30 21:45:40) [GET]
  Parameters: {"action"=>"new", "controller"=>"sessions"}
  [4;35;1mUser Load (0.6ms)[0m   [0mSELECT * FROM `users` [0m
Redirected to http://blog.codeimpossible.com/users/new
Completed in 3ms (DB: 1) | 302 Found [http://blog.codeimpossible.com/session/new]


Processing UsersController#new (for 68.187.213.182 at 2011-04-30 21:45:40) [GET]
  Parameters: {"action"=>"new", "controller"=>"users"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` [0m
  [4;35;1mUser Columns (1.7ms)[0m   [0mSHOW FIELDS FROM `users`[0m
Rendering template within layouts/main
Rendering users/new
Completed in 16ms (View: 12, DB: 2) | 200 OK [http://blog.codeimpossible.com/users/new]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing UsersController#create (for 68.187.213.182 at 2011-04-30 21:46:41) [POST]
  Parameters: {"commit"=>"Sign up", "action"=>"create", "authenticity_token"=>"p4+nv6KZ1SRHcn0r4o38+weKIw0soHiIwhVzRfcMvGg=", "controller"=>"users", "user"=>{"password_confirmation"=>"[FILTERED]", "password"=>"[FILTERED]", "login"=>"codeimpossible", "email"=>"jared.m.barboza@gmail.com"}}
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mUser Load (0.4ms)[0m   [0mSELECT `users`.id FROM `users` WHERE (`users`.`login` = BINARY 'codeimpossible') LIMIT 1[0m
  [4;36;1mUser Load (0.5ms)[0m   [0;1mSELECT `users`.id FROM `users` WHERE (`users`.`email` = BINARY 'jared.m.barboza@gmail.com') LIMIT 1[0m
  [4;35;1mUser Create (0.2ms)[0m   [0mINSERT INTO `users` (`name`, `salt`, `created_at`, `crypted_password`, `remember_token_expires_at`, `updated_at`, `remember_token`, `login`, `email`) VALUES('', '16f871a749078c3de1af94df3698c0e2165aad47', '2011-05-01 02:46:41', '4549f9c4b09ad388129321310bc53516d3735ac6', NULL, '2011-05-01 02:46:41', NULL, 'codeimpossible', 'jared.m.barboza@gmail.com')[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCOMMIT[0m
Redirected to http://blog.codeimpossible.com/admin
Completed in 5ms (DB: 2) | 302 Found [http://blog.codeimpossible.com/users]


Processing Admin::DashboardController#index (for 68.187.213.182 at 2011-04-30 21:46:41) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/dashboard"}
  [4;35;1mUser Load (0.3ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Columns (1.5ms)[0m   [0;1mSHOW FIELDS FROM `posts`[0m
  [4;35;1mSQL (0.4ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` WHERE (published = 'f') [0m
  [4;36;1mSQL (0.6ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 't') [0m
Rendering template within layouts/main
Rendering admin/dashboard/index
Rendered admin/shared/_userbar (0.3ms)
Completed in 8ms (View: 2, DB: 3) | 200 OK [http://blog.codeimpossible.com/admin]


Processing Admin::ImportController#index (for 68.187.213.182 at 2011-04-30 21:46:47) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/import"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering admin/import/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 4ms (View: 2, DB: 0) | 200 OK [http://blog.codeimpossible.com/admin/import]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing Admin::ImportController#import (for 68.187.213.182 at 2011-04-30 21:48:27) [POST]
  Parameters: {"import_type"=>"wp", "action"=>"import", "authenticity_token"=>"p4+nv6KZ1SRHcn0r4o38+weKIw0soHiIwhVzRfcMvGg=", "post_date"=>"original", "export_file"=>#<File:/tmp/RackMultipart20110430-8052-1ylxvxz-0>, "post_type"=>"Published", "controller"=>"admin/import"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.5ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('VB-NET-used-to-write-compilers-', '2007-05-29 05:00:00', 'VB.NET used to write compilers?', 'It\'s apparently <a href=\"http://www.panopticoncentral.net/archive/2007/05/24/20730.aspx\" target=\"_blank\">true</a>. Silverlight\'s JavaScript compiler will be written entirely in Visual Basic .NET. Also of note: the Visual Basic 10 (ORCAS release) compiler is being written in Visual Basic .NET as well.\n\nAll I have to say is:\n\nWhy is this such a big deal?<!--more-->\n\nWith the advent of the .NET CLR developing an application in C++, VB, or C# is simply a syntax preference. The code still gets sent to the CLR and converted into a common machine language. That is the beauty of .NET. One team can code a piece of an enterprise system in VB and another team working soley in C# can use it without any change to the application.\n\nSo when people start screaming \"Oh my god they used VB??!?!\" just look at them and say:\n\nNo, they just liked it\'s syntax.', '2011-05-01 02:48:33', 0, '')[0m
  [4;35;1mSQL (1.9ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('-8220-That-8221-Keyword', '2007-06-18 05:00:00', '&#8220;That&#8221; Keyword', 'Brian Keller <a href=\"http://blogs.msdn.com/briankel/archive/2004/09/23/233212.aspx\" target=\"_blank\">posed a question</a> to the readers of his blog asking what we thought, if there were such a thing, the \"that\" keyword should do in C#. What a fantastic idea! My suggestion - the that keyword would be used to allow access to inherited classes from the base class. <!--more-->IE:\n<pre>\npublic class MyBase\n{\n public MyBase()\n {\n 	//only call CallToMethod() in a specific class\n 	if( typeof(that).ToString().Equals(\"MyChild\") )\n 		that.CallToMethod();\n }\n}\n\npublic class MyChild : MyBase\n{\n public void CallToMethod()\n {\n // more code goes here...\n }\n}</pre>\nYeah I know it\'s really dangerous and would definitely have some overhead associated with it but the functionality would be awesome!', '2011-05-01 02:48:33', 0, '')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('The-Next-Chapter', '2007-06-22 05:00:00', 'The Next Chapter', 'I will be leaving my current position as a Software Engineer for Cyphermint Inc (<a href=\"http://www.cyphermint.com\" target=\"_blank\">http://www.cyphermint.com</a>) on July 6th after working there for 3 years. I\'ll be moving on to a company named ScerIS (<a href=\"http://www.sceris.com\" target=\"_blank\">http://www.sceris.com</a>) to work on some of their very interesting projects.\n\nMy years at Cyphermint were wonderful. Full of fun, learning and great people. Sure there were some killjoys along the way (and some in the end too) but those types of people are everywhere and shouldn\'t compose the whole view of a company.\n\nI wish all the best to everyone at Cyphermint. They are on the verge of becoming the next \"big thing\" in more ways than one. They wouldn\'t be in the position they are now (several big releases right around the corner) without the talent and dedication of the employees they have. The time simply came for me to move out on my own and discover what I could truly do on my own. I hope you all understand.\n\nIt was a privilege to work with such a talented staff.', '2011-05-01 02:48:33', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Hide-system-tray-in-C-', '2007-06-26 05:00:00', 'Hide system tray in C#', 'In most of our customer-oriented kiosk applications it is necessary to hide the system task bar so that in case of a crash the end user won\'t be able to muck around with the computer. Yes, we restrict the user\'s account via registry edits but the task is still available to them if the application exits.<!--more-->\n\nOr is it?\n\nEnter our nifty little code solution:\n<pre>using System;\nusing System.Runtime.InteropServices;\nclass TaskBarController\n{\n [DllImport(\"user32.dll\")]\n private static extern int FindWindow(string className,\n string windowText);\n\n [DllImport(\"user32.dll\")]\n private static extern int ShowWindow(int hwnd, int command);\n\n public static void HideTaskbar()\n {\n int hwnd = FindWindow(\"Shell_TrayWnd\",\"\");\n ShowWindow( hwnd, 0 );\n }\n public static void ShowTaskbar()\n {\n int hwnd = FindWindow(\"Shell_TrayWnd\",\"\");\n ShowWindow( hwnd, 5 );\n }\n}</pre>\nAnd there you have it. Enjoy!', '2011-05-01 02:48:33', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Tempting', '2007-07-29 05:00:00', 'Tempting', 'If it wasn\'t for the possibility of getting shot, I would accept <a href=\"http://www.careerbuilder.com/JobSeeker/Jobs/JobDetails.aspx?IPath=JRGCM&amp;ff=21&amp;APath=2.21.0.0.0&amp;job_did=J8E27R758MWRHR3QTG9&amp;cbRecursionCnt=1&amp;cbsid=70d72a1c8c2242adaf72875295723fb8-239073695-X3-2\" target=\"_blank\">this job</a>. It\'s hilarious that they are expecting programmers to enter a dangerous war-zone to develop an AJAX application. Mostly because programmers are not known for their \"elf-like\" agility. (most of us rolled a -10 in the AGI column but saved up for INT or CHR).<!--more-->\n\nI wonder if <a href=\"http://blog.megazone.org\" target=\"_blank\">Megazone</a> has seen this? I should forward this off to my old co-workers. At least over in Iraq the possibility of you dying by unfriendly fire is greater. Yeah, I\'m in a bit of a mood tonight, probably just punchy from being tired. Well I know a good way to fix that!\n\n----------------\nListening to: <a href=\"http://www.foxytunes.com/artist/nirvana/track/you+know+you%27re+right\" title=\"\'Nirvana - You Know You\'re Right\' - open on FoxyTunes Planet\">Nirvana - You Know You\'re Right</a>\n<span style=\"font-style:italic;font-size:10px;color:#999999;\">via <a href=\"http://www.foxytunes.com/signatunes/\" title=\"FoxyTunes - Web of music at your fingertips\">FoxyTunes</a></span>', '2011-05-01 02:48:34', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Weekend-reading', '2007-09-01 05:00:00', 'Weekend reading', 'On the way out the door on friday my boss handed me two copies of \"CoDe Magazine\" for me to look at because they had sent him too many copies. I briefly glanced at the covers and saw some interesting things. The very first thing I noticed was that one issue had, on the cover, an image of the Master Chief from Halo3 with \"XNA: Ready for Prime Time?\" in a huge, bold font. The other front page bullets for that issue indicated that the issue focused intensely on XNA and game development. The second thing I noticed was that the other issue included a \"13-step Crash Course for Using LINQ\".\n\nI tried desperately to hide the drool that had started to form at the corners of my mouth as I said \"Sure, I think these might be alright\". So I stuffed them into my backpack like a theif with a fist full of unmarked bills and headed home. I just got done reading both issues and enjoyed their content, albeit one more than the other, so much that I felt compelled to note it here.\n\nI figure I would go over them in order of their publication (one covers July/August, the other September/October).\n\nJuly / August (vol. 8, issue 4)\nSadly this is the issue that I was least impressed with. Not because it was a \"horrible\" publication. it just didn\'t cover as many topics that interested me as the other issue. In fact it only covered one. Linq. Linq is Microsofts\' latest \"wow\" feature for .NET 3.5 (codename: \"Orcas\") and is quite possibly the coolest god damned thing I have ever seen but since this is just a review of a magazine I\'ll save my fanfare for LINQ for another day. The article, for those interested can be found <a href=\"http://www.code-magazine.com/Article.aspx?quickid=0707051\" target=\"_blank\">here</a>.\n\nSeptember / October (vol. 8, issue 5)\nThis issue had a lot to offer that interested me. There was a great write-up featuring <a href=\"http://www.code-magazine.com/Article.aspx?quickid=0709031\" target=\"_blank\">productivity tips SQL 2005</a> which I think every developer should read. Items of note: Pivot, Output Into, CTEs and Recursive Queries. Really, really cool stuff.\n\nThe next part was all about Microsofts\' XNA game development framework. There were two great articles covering XNA \"<a href=\"http://www.code-magazine.com/Article.aspx?quickid=0709041\" target=\"_blank\">XNA: Ready for Prime Time?</a>\" and \"<a href=\"http://www.code-magazine.com/Article.aspx?quickid=0709051\" target=\"_blank\">Introducing XNA Game Studio Express</a>\" both worth reading if you have any interest in game design and programming or if you just want to get a really good grasp on why there is so much resistance to managed code frameworks.\n\nThere was also a great article covering <a href=\"http://www.code-magazine.com/Article.aspx?quickid=0709101\" target=\"_blank\">Lambda Expressions</a> which are another great upcoming feature in .NET 3.5.', '2011-05-01 02:48:34', 0, '')[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Borked-Projects-8220-The-Robotic-Arm-POS-8221-', '2007-10-18 05:00:00', 'Borked Projects - &#8220;The Robotic Arm POS&#8221;', 'At one of my previous jobs we (the engineering team) recieved a project order to create a new POS system for a gaming and entertainment complex in Rhode Island. The catch for this particular project was that the client did not want to replace or update their POS system, they instead wanted us to provide a new \"front end\" for it to allow customers to purchase game-time via credit cards.<!--more-->\n\nSo it was proposed by the client that there would be a dummy terminal in a back room somewhere on the grounds and our front-end would control a robotic arm (I imagined it would be something like the arm from Terminator 2) to manually enter the payment information into the clients\' POS system.\n\nNo. I am not kidding you. To this very day (about 3 years later) this story still brings uproarious laughter from myself and my fellow co-workers and is deemed one of the most \"Borked Projects\" I have ever been a part of.', '2011-05-01 02:48:34', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Don-8217-t-get-ground-up-in-the-rumor-mill', '2007-10-22 05:00:00', 'Don&#8217;t get ground up in the rumor mill', 'Every office has a rumor mill. It\'s part and parcel of the whole office gig. It\'s easy to get caught up in the all the drama that is going on at work \"Did you hear that Josh and Tina are an item now?\", \"I heard we are all going to be working for Herbert next week!\", etc. We are all gossipers. Even those that seem impervious to the gossip will eventually find themselves caught up in it if they are not careful.<!--more-->\n\n<img src=\"http://www.ksl.com/emedia/slc/133/13352/1335293.jpg\" height=\"250\" width=\"250\" /> Basic tips for surviving the rumor mill are pretty simple and follow common sense pretty strictly. First off, just because rumors and gossip are generally more closely associated with women don\'t let this fool you. Men are just as guilty of gossip and in my own experiences just as bad or worse at getting caught up in the rumors flying around. Some people are more easily caught up when they hear something from Jon than if they had heard the same thing from Samantha. Don\'t let this fool you. When it comes to rumors trust no one.\n\nThe rumor mill has no age limit. People of any age can get wrapped up in the rumor mill. Don\'t trust the more experienced ad executive simply because he is older. That doesn\'t mean he has more experience than anyone else with the rumor mill.\n\nWhen you hear a rumor take it with a grain of salt. Remember that game you played in kindergarten where all the kids sat in a circle and one child whispered a phrase to their neighbor and that child whispered what they heard to their neighbor and so on and so on? Remember how the result was completely different than the phrase at the beginning? Well the rumor mill is simply this principle put into practice on a larger (or smaller) scale.\n\nDon\'t react. When someone presents you with a rumor that is particularly inflammatory resist the urge to react in the moment. Take a breath, dismiss yourself from the conversation, go for a walk, get some water or coffee do anything but react. If your team is going to be transferred to Herberts\' reign then it is going to happen. There is nothing you can do about it now the best thing that can be done is to try to establish a working relationship with Herbert or polish your resume.\n\nIt\'s easy to get caught up in the rumor mill but it is not impossible to avoid. Remember to take all rumors with a grain of salt, and to never react to a rumor in the moment and you will discover you have what it takes to survive the office rumor mill.', '2011-05-01 02:48:34', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Gaming-Bioware-KOTOR-MMO-To-Use-Streambase', '2007-10-22 05:00:00', 'Gaming: Bioware KOTOR-MMO To Use Streambase', '<p style=\"text-align:center;\"><img src=\"http://www.uwcsa.com/uwcsa/channels/video_game/page/kotor/kotor_bastila.jpg\" height=\"140\" hspace=\"4\" vspace=\"4\" width=\"240\" /></p>\nOkay, every gamer is right now is saying \"What the $*^% is Streambase, and why do I care???\". Well I\'ll tell you. Streambase is a provider of Complex Event Processing solutions for high-end, high-speed, real-time business needs. Hmmm still not getting through eh? Okay try this on for size.<!--more-->\n\nStreambase provides data monitoring systems that are designed to monitor, track and respond to large amounts of data in real-time. Why is this important to BioWare and their new MMO? BioWare will be using Streambase to accomplish what I can only call the most ambitious undertaking in MMO history. BioWare states that they will be able to monitor server performance and issue fixes in real-time during game-play without the need for server down-time.\n\nLet me say that again. A Star Wars MMO; that won\'t suck rancor nards like galaxies; that will allegedly be online 24/7 (unlike galaxies); did I mention it won\'t suck?\n\nFor more information read the story over at <a href=\"http://www.joystiq.com/2007/04/02/bioware-picks-up-streambase-engine-for-mmo/\" target=\"_blank\">Joystiq</a>, the press release from <a href=\"http://www.streambase.com/Collateral/Documents/English-US/BioWare_Customer_FINAL.pdf\" target=\"_blank\">Streambase</a> and <a href=\"http://www.streambase.com/index.htm\" target=\"_blank\">Streambase</a> website.', '2011-05-01 02:48:34', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('-32-to-be-exact-8230-', '2007-11-01 05:00:00', '#32 to be exact&#8230;', 'Look who made the <a href=\"http://stumblerank.com/index.php?sort=3.1\" target=\"_blank\">top 100 stumblers</a> over at <a href=\"http://www.stumblerank.com\" target=\"_blank\">StumbleRank</a>.\n\n<b>update (09/16/2009): </b> I went through this post and removed the links to stumblerank because it no longer exists and I don\'t want to give links back to the spammy parked domain.', '2011-05-01 02:48:34', 0, '')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.6ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('RIP-My-WoW-Subscription-01-06-2006-11-03-2007', '2007-11-03 05:00:00', 'RIP: My WoW Subscription 01/06/2006 - 11/03/2007', '<p style=\"text-align:center;\"><img src=\"http://image.guim.co.uk/sys-images/Technology/Pix/pictures/2007/07/25/world_of_warcraft460X276.jpg\" height=\"276\" hspace=\"4\" vspace=\"4\" width=\"460\" /></p>\n\"Last login: June 13, 2007 5:30 PM PDT\". \"Account created on: January 6, 2006 8:04 PM PST\". I haven\'t used my WoW account in such a long time I had forgotten how much I used to love it. But sadly all things come to an end (and with the release of Tabula Rasa and the purchase of a better gaming rig on the way...). Who am I kidding? I\'ll get the new rig and TR for sure. But I\'ll only play it 1/4 as much as I used to play WoW. If that.<!--more--><span></span>\n\nI\'m canceling my WoW account as I type this and I can\'t help but feel a twinge of nostalgia and maybe a little guilt. I missed all the days of running raids until 4am, bitching about guild-mates on ventrillo, trying to make 300 gold in a day on the auction houses. This life just isn\'t for me (and hasn\'t been for about 4 months now). I have to move on. To expand myself as an adult gamer and as a professional (showing up for work is a plus you know).\n\nSo it is with great pain that I announce the passing of Phaelanx, Phaetank, Phaesneak and Phaelock of Maiev and Phaelanx of Arathor (formerly Moonrunner).', '2011-05-01 02:48:34', 0, '')[0m
  [4;35;1mSQL (0.3ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.3ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Arizona', '2007-11-20 06:00:00', 'Arizona', '<p style=\"text-align:center;\"><img src=\"http://lh3.google.com/pistalwhipped/RykmT5vujDI/AAAAAAAAAjA/yFZYvMho43o/s400/DSC02110.JPG\" height=\"275\" hspace=\"4\" vspace=\"4\" width=\"450\" /></p>\nT and I took a trip out to Arizona a little while ago and in one word (or less??) it was: \"Paradisiacal\". I started pretty innocently enough. Both of us had a 4 day weekend coming up and we knew we wanted to get away from the area (family stress, house stress, apartment stress, work stress etc) and go someplace where we\'d never been and wouldn\'t know anyone.<!--more-->\n\nEarly rising (good morning at 4am!!), rush to the airport (hello Logan.), plane flight (horrible movie, \"waitress\" or some other nonsense. Ugh.)\n\nWhen we arrived at Phoenix airport we were absolutely starving. We were ready for a burger, some fries, onion rings, a side order of pizza anything we could get our hands on really. However, we completely forgot about the timezone change. Our bodies were saying that it was lunch time but everyone was still serving breakfast. Hungry, we left the terminal and vowed to get lunch ASAP on the way to our hotel.\n\n<img src=\"http://lh5.google.com/pistalwhipped/RykmfZvujMI/AAAAAAAAAkI/dn-wd9NzS3g/s288/DSC02155.JPG\" align=\"left\" height=\"216\" hspace=\"6\" vspace=\"4\" width=\"288\" />The commute was uneventful. We were completely awestruck by the landscape and I couldn\'t believe we seemed so far away from home. We were already starting to relax and forget all the crap we left at home. Except for the cats of course. I set up a web-cam before we left to upload pictures of the cats at intervals to the ftp server we have. The cats must have known about the camera because we were only able to spot <a href=\"http://wiki.pistalwhipped.net/pmwiki.php?n=Bios.Shiva\" target=\"_blank\">Shiva</a> on the next to last day of our trip.\n\nBack to the trip. We arrived at the Carefree Resort around noon-time and our first impression was that the name fit this place very well. We checked in, went to our villa and spent the rest of the day getting familiar with the surrounding area (and the couch).\n\nOn the second day we visited the Out of Africa zoo and got to see some really amazing animals up close. There was a great spotted leopard there that even though it only had three legs it could still completely ravage anyone of the visitors. That leopard was a complete bad-ass. It lost it\'s leg when it was a cub because it tried to smack a lion (yeah, a lion) that was in a cage next to it and the lion mangled it\'s limb so bad that it had to be removed.\n<p align=\"right\"><img src=\"http://lh5.google.com/pistalwhipped/RykmbZvujII/AAAAAAAAAjo/tJc_eaFvgQ4/s288/DSC02132.JPG\" align=\"right\" height=\"216\" hspace=\"4\" vspace=\"4\" width=\"288\" /></p>\nWe also saw a demonstration called \"Tiger Splash\" which was one of the most amazing things I\'ve seen. Zoo personnel running around with Bengal tigers trying to get the tigers to chase them around. The human performers would pretend to be wounded animals (walking on all fours, dragging a leg) and when the tigers would chase them they would run and jump into a 4 foot deep pool that was located in the center of the ring. It was spectacular!\n\nOn our third day we hiked up Pinnacle peak (about 2400 ft up) and took in the view. Another excellent day. The hike wasn\'t strenuous at all and we got to see some really amazing scenery along the way. It felt more like a park than a hiking trail, there were people jogging up the peak as well as entire families just hanging out at the rest areas.\n\nI am completely in love with the state of Arizona and everyone has asked me when we are moving out there. I don\'t know about living there but we are already planning our next visit. Check out a few of the pictures from the trip <a href=\"http://picasaweb.google.com/pistalwhipped/Arizona2007\" target=\"_blank\">here</a>.', '2011-05-01 02:48:34', 0, '')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Holy-Crap-', '2007-12-10 06:00:00', 'Holy Crap!!', '<p style=\"text-align:center;\"><a href=\"http://www.pistalwhipped.net/up/loads/2007/12/indyskullposter-1.jpg\" target=\"_blank\" title=\"Indiana Jones Movie Poster\"><img src=\"http://www.pistalwhipped.net/up/loads/2007/12/indyskullposter-1.jpg\" alt=\"Indiana Jones Movie Poster\" border=\"0\" height=\"667\" hspace=\"4\" vspace=\"4\" width=\"450\" /></a></p>', '2011-05-01 02:48:34', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.8ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Google-8220-Knols-8221-and-the-Readius', '2007-12-15 06:00:00', 'Google &#8220;Knols&#8221; and the Readius', 'The Google buzz machine is in overdrive again with the announcement of \"Knols\" a Wikipedia competitor that is going into private beta. Check out the <a href=\"http://googleblog.blogspot.com/2007/12/encouraging-people-to-contribute.html\" target=\"_blank\">blog posting</a> and <a href=\"http://www.google.com/help/knol_screenshot.html\" target=\"_blank\">screen-shot</a> when you have a chance.\n\n<strong>Bigger news:</strong>\n\nPolymer Vision a phillips spin-off has announced that they have produced the first foldable display. Not only that but they are planning to release these new displays in their new 3g capable <a href=\"http://www.engadget.com/2007/02/19/polymer-visions-readius-rollable-display-gets-face-time/\" target=\"_blank\">device named the \"Readius\"</a>.', '2011-05-01 02:48:34', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Nerd-Sniping', '2007-12-17 06:00:00', 'Nerd Sniping', '<a href=\"http://xkcd.com/356/\" target=\"_blank\" title=\"Nerd Sniping (xkcd.com)\"><img src=\"http://www.pistalwhipped.net/up/loads/2007/12/nerdsniping.jpg\" alt=\"Nerd Sniping\" border=\"0\" height=\"198\" hspace=\"4\" vspace=\"4\" width=\"199\" /></a>', '2011-05-01 02:48:34', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Unix-not-Y2k38-Compatible-', '2007-12-17 06:00:00', 'Unix not Y2k38 Compatible???', '<a href=\"http://blog.apocalypse.org/wp-content/uploads/2006/10/Picture%201-1.png\" target=\"_blank\" title=\"The End of the World\"></a>\n<p style=\"text-align:center;\"><a href=\"http://www.acreativedesktop.com/endofworld.html\" target=\"_blank\" title=\"The End of the World\"><img src=\"http://www.pistalwhipped.net/up/loads/2007/12/picture-1-1.jpg\" alt=\"//www.acreativedesktop.com/endofworld.html\" border=\"0\" height=\"228\" hspace=\"4\" vspace=\"4\" width=\"450\" /></a></p>\nWhere was I when <a href=\"http://www.y2k38.info/\" target=\"_blank\">this was written</a>??? Oh, right. I was a finishing my Sophomore year in High School. Oh well. Any way, apparently the Unix operating system (and I would think any 32-bit operating system) will fail in the year 2038. Well, January 19, 2038 3:14:08 UTC to be precise. <!--more-->\"Why?\" You ask? Well Unix calculates time as the number of seconds since January 1, 1970 12:00:00. Each second is represented as an integer and the maximum value for a 32-bit integer is 2,147,483,647 which, when translated to seconds, equals 1/19/2038 3:14:07.\n\nThe author of the article above believes that 1 of two things will happen as a result of the failure. The software will either crash horribly or will simply roll back the date to 1/1/1970 at midnight. There isn\'t really a whole lot to worry about here though as by the year 2030 most operating systems will be in 64-bit land and probably even in 128-bit where the problem will be set to re-occur only 290 billion years in the future plus or minus a billion. The article is a pretty interesting read and will satisfy the geek in you for a little while.', '2011-05-01 02:48:34', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Happy-Holidays', '2007-12-23 06:00:00', 'Happy Holidays', '<p style=\"text-align:center;\"><img src=\"http://www.pistalwhipped.net/up/loads/2007/12/full351757space_hopper_6.jpg\" alt=\"santa &amp; batman\" border=\"0\" height=\"322\" hspace=\"4\" vspace=\"4\" width=\"440\" /></p>\n I\'ll be going dark for the next couple of days (sorry I\'ve been watching a lot of spy movies over the weekend) and more than likely won\'t have time to post an update so Happy Holidays to everyone out there and I\'ll see you all back here after the break!', '2011-05-01 02:48:34', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('runat-8221-server-8221-why-Why-', '2007-12-26 06:00:00', 'runat=&#8221;server&#8221; why??? Why!?!', '<p style=\"text-align:center;\"><img src=\"http://www.pistalwhipped.net/up/loads/2007/12/frustration2-thumb.jpg\" alt=\"copyright (c) www.esl-lesson-plan.com 2007\" height=\"287\" width=\"354\" /></p>\nI know I\'m not the first .net programmer to ask this question and I don\'t think I\'ll be the last. Why, oh why must we constantly include the runat=\"server\" attribute in our custom and pre-compiled web control declarations? To me it seems like this is unnecessary bloat that could be re-tooled to save developers more time and reduce headaches caused by forgetting it\'s inclusion.<!--more-->\n\nI\'m not asking for the runat=\"server\" attribute to be removed. Not at all. I\'m just stating that I think it was implemented in an inconvenient way and should be re-thought and re-designed. A blogger named <a href=\"http://www.mikeschinkel.com/\" target=\"_blank\">Mike Schinkel</a> posed <a href=\"http://www.mikeschinkel.com/blog/whyrunatserverforaspnet/\" target=\"_blank\">the same question</a> and a commenter replied:\n<blockquote>I understand your point, but the importance of [runat=\"server\"] is more for consistency and extensibility. If the developer has to mark some tags some ways (ie an \"asp:\" prefix) and in other cases using runat, then it creates more confusion. Also, this simplifies what is sent directly to the user agent as a Response.Write and what needs to be parsed by the ASP.NET engine. What if some user agent of the future has a name collision with one of the ASP.NET tags, it would be difficult otherwise to tell ASP.NET to ignore a tag.</blockquote>\n<strong>\"..is more for consistency and extensibility.\"</strong>\n<blockquote>\"Consistency is the last refuge of the unimaginative.\"\n- Oscar Wilde</blockquote>\nI\'m not sure why this person chose to argue consistency as one of his main points but it\'s a poor choice. He may as well have just said \"it is just done this way\". The runat attribute is required on all custom, pre-compiled or otherwise included web controls so why must it be specifically declared? Think about it in programming terms. If you have a literal string or integer littered throughout a class or function how likely would it be for you to replace that with a declared variable? I would do it 99% of the time.\n\n<strong>\"...this simplifies what...needs to be parsed by the ASP.NET engine.\"</strong>\n\nOkay, apparently they (Microsoft) have never heard of Regular Expressions? Why must we specifically tell the ASP.NET engine which controls are server controls when the work is already done via the Page\\Controls section of the web.Config when we include a control library? This seems overly redundant to me and reeks of poor implementation. The runat=\"server\" attribute is more like a legacy feature from 1.0 that for one reason or another (probably it\'s deep integration with the compiler and rendering engine) has not been removed yet.', '2011-05-01 02:48:34', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Don-8217-t-Forget-SQL-2008-Virtual-Event', '2008-01-03 06:00:00', 'Don&#8217;t Forget: SQL 2008 Virtual Event', 'Hey this is just a reminder to everyone, don\'t forget that the SQL 2008 Virtual Event is open for registration. You can do so over at <a href=\"http://events.unisfair.com/rt/sql~jan08/?code=solidqweb\" target=\"_blank\">http://events.unisfair.com/rt/sql~jan08/?code=solidqweb .</a>\n\nTopics include:\n<ul>\n	<li>Developing Data-Centric Applications with SQL Server 2008</li>\n	<li>Getting a Handle on Data Cleansing in SSIS</li>\n	<li>Performance Tuning</li>\n	<li>Reporting Services with SQL Server 2008</li>\n	<li>SQL Server Virtualization</li>\n</ul>\nThe even starts on Jan 24th and runs from 11am to 4:15pm EST. Register now!', '2011-05-01 02:48:34', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('I-don-8217-t-think-I-have-that-kind-of-time', '2008-01-05 06:00:00', 'I don&#8217;t think I have that kind of time', '<a href=\"http://www.pistalwhipped.net/bl/og/../../up/loads/2008/01/waiting.jpg\" title=\"Waiting\">\n<p style=\"text-align:center;\"><img src=\"http://www.pistalwhipped.net/up/loads/2008/01/waiting.jpg\" alt=\"Waiting\" border=\"0\" height=\"244\" width=\"418\" /></p>\n\n</a>\n\nSo I got my new Dell PC late friday night and it is awesome. Vista is not the greatest operating system and I would much rather have XP pro or Media Center 2k5 on here but it works and it works <strong>fast</strong>. The dual-core 5ghz really shows on this thing. Except, apparently when I\'m transferring files from my older PC to the new one. I have about 9gb of photos on my old pc that I am still in the process of moving over and judging from the screen shot above, I\'ll be in the process of moving over for a long time.', '2011-05-01 02:48:34', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('What-a-battle-8217-switchEditors-is-not-defined-8217-in-WordPress', '2008-02-04 06:00:00', 'What a battle: &#8217;switchEditors is not defined&#8217; in WordPress', 'Okay, so the blog looks like it is back up and running. The front-end has been up for about 2-3 hours now but the admin section has been a royal pain in the ass to get back to a livable state. What happened was that earlier today I noticed that several of my toolbar items had disappeared from my edit page (most notably the \"More\" page break button) and I could no longer toggle between Visual and Code view.\n\nAfter <a href=\"http://wordpress.org/search/switchEditors+is+not+defined?forums=1&amp;bugs=1\" target=\"_blank\">researching</a> <a href=\"http://wordpress.org/search/switchEditors+is+not+defined?forums=1\" target=\"_blank\">the</a> <a href=\"http://wordpress.org/support/topic/145002\" target=\"_blank\">problem</a> <a href=\"http://wordpress.org/support/topic/117860?replies=2\" target=\"_blank\">it</a> <a href=\"http://mu.wordpress.org/forums/topic.php?id=5701&amp;page\" target=\"_blank\">looked</a> like I had my work cut out for me. To make a long story short I ended up doing all of the following steps:\n<ol>\n	<li>Upgraded my wordpress installation</li>\n	<li>down graded my wordpress installation</li>\n	<li>added / removed a new MCE</li>\n	<li>added / removed another MCE</li>\n	<li>edited about 5 -6 wordpress php files</li>\n	<li>reverted those 5 - 6 wordpress php files</li>\n	<li>upgraded word press again</li>\n</ol>\nUntil, finally, I gave up and implemented the ugliest hack ever (I am not sure why wordpress seemingly \'forgot\' my toolbar settings) <a href=\"http://wordpress.org/support/topic/145002\" target=\"_blank\">which I discovered over at this site</a> (last post to the thread). If anyone has figured out how to fix this (in such a way that it doesn\'t feel so klooged together) then please speak up and let me know.', '2011-05-01 02:48:34', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Jabba-the-Cat', '2008-02-19 06:00:00', 'Jabba the Cat', '<p align=\"left\">&nbsp;</p>\n<p style=\"text-align:center;\"><img src=\"http://pistalwhipped.files.wordpress.com/2008/03/jabbacat2.jpg\" alt=\"Jabba The Cat\" /></p>', '2011-05-01 02:48:34', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.3ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('FIXED-Broken-Visual-Button-No-8220-More-8221-Tag-Button', '2008-02-20 06:00:00', 'FIXED: Broken Visual Button &amp; No &#8220;More&#8221; Tag Button', 'So recently <a href=\"http://wordpress.org/support/topic/148796\" target=\"_blank\">I had some issues with my wordpress installation</a> and <a href=\"http://www.pistalwhipped.net/bl/og/2008/02/04/what-a-battle-switcheditors-is-not-defined-in-wordpress/\" target=\"_blank\">was forced to go through some pretty insane steps to rectify the problems</a> I was having. The main issues were that my \"Split post with More tag\" button was missing and the \"Code\" tab in the MCE no longer worked. I fixed both of these issues by performing the following edits:\n\n<!--more-->\n\n1. look for a line that equals:\n<blockquote>&lt;?php\n$my_drafts = get_users_drafts($user_ID);</blockquote>\n2. Just before this line paste:\n<blockquote>&lt;script src=\"&lt;?php echo get_option(\'siteurl\') ?&gt;/wp-includes/js/tinymce/plugins/wordpress/editor_plugin.js\" type=\"text/javascript\"&gt;&lt;/script&gt;</blockquote>\nThis fix, apparently, only solved my problems for posting a new article. When I saved a draft and later brought it up for editing my previous problems reared their ugly heads once again. This is due to wordpress using different pages for editing drafts and starting a new article, which seems like an odd choice to me. Why wouldn\'t you save these kinds of hassles by using one page to handle both requests? Okay, I\'m starting to ramble, back to the problem.\n\nIn order to fix the same problems I was having in my post-new.php file in the post.php file the edits are essentially the same (one additional new line must be added) they just occur in different areas.\n\n1. In the post.php file locate the line that reads:\n<blockquote>case \'edit\':</blockquote>\n2. After that line locate a line that reads:\n<blockquote>wp_enqueue_script(\'prototype\');</blockquote>\n3. just after that line paste:\n<blockquote>wp_enqueue_script(\'interface\');</blockquote>\n4. after the line you just pasted locate a line that looks like:\n<blockquote>require_once(\'admin-header.php\');</blockquote>\n5. paste the following code after the line above:\n<blockquote>?&gt;\n&lt;script src=\"&lt;?php echo get_option(\'siteurl\') ?&gt;/wp-includes/js/tinymce/plugins/wordpress/editor_plugin.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;?php</blockquote>\nNow save the files and upload them to your wp-admin directory and you should now be able to edit via the MCE problem free. I am not sure why these edits must be made and also why this isn\'t something that others have had to encounter as well. My search on WordPress.org\'s support site yielded few results so if anyone out there has had these problems and solved them another way please drop a comment.\n\n<em><strong>Update:</strong></em> I completely missed the Page.php and Page-New.php files. Here are the steps to correct the problems with those files.\n\nFor the Page.php file:\n\n1. find the line that equals:\n<blockquote>require_once(\'admin-header.php\');</blockquote>\n2. after this line paste:\n<blockquote>?&gt;\n&lt;script src=\"&lt;?php echo get_option(\'siteurl\') ?&gt;/wp-includes/js/tinymce/plugins/wordpress/editor_plugin.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;?php</blockquote>\nFor the Page-New.php file:\n\n1. find the line that equals:\n<blockquote>&lt;?php if ( (isset($_GET[\'posted\']) &amp;&amp; $_GET[\'posted\'])  || isset($_GET[\'saved\'])  ) : ?&gt;</blockquote>\n2. before this line paste:\n<blockquote>&lt;script src=\"&lt;?php echo get_option(\'siteurl\') ?&gt;/wp-includes/js/tinymce/plugins/wordpress/editor_plugin.js\" type=\"text/javascript\"&gt;&lt;/script&gt;</blockquote>', '2011-05-01 02:48:34', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.9ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('8-Best-Firefox-Plugins', '2008-02-21 06:00:00', '8 Best Firefox Plugins', '<p style=\"text-align:center;\"><img src=\"http://pistalwhipped.files.wordpress.com/2008/03/firefox.jpg\" alt=\"FireFox Logo\" /></p>\nI\'ve been using Firefox since version 1.5. The main feature that drew me to the open source browser was the that it supported user-generated plugins. I downloaded FF and stumbleupon and I was hooked. Since then I\'ve tried dozens of plugins and some have made me wonder how I used the internet before they came along (like stumbleupon and googlepedia) while some have made me wonder simply \"why?\".\n\n<!--more-->\n\nThe list below is comprised of the former type of plugin. These are the plugins that I could not imagine getting through my day-to-day routine without.\n\n1. StumbleUpon (<a href=\"https://addons.mozilla.org/en-US/firefox/addon/138\" target=\"_blank\">download</a>)\nI honestly cannot remember which site or person turned me on to SU but whomever did is evil. SU is the most addictive experience I have been a part of since World of Warcraft. It is the perfect marriage of user generated content within an online community and it symbolizes Web 2.0 perfectly.\n\n2. Google Reader Notifier (<a href=\"https://addons.mozilla.org/en-US/firefox/addon/3977\" target=\"_blank\">download</a>)\nThe premise for this plugin is simple. If you have a Google Reader account this plugin will scan your incoming articles and alert you to how many you have and in what folder they are stored.\n\n3. GooglePedia (<a href=\"https://addons.mozilla.org/en-US/firefox/addon/2517\" target=\"_blank\">download</a>)\nI\'m not sure why this plugin isn\'t offered by Google. It will take your google search query and run it against Wikipedia and embed the most relevant article into the search results page. This plugin can slow down the loading of the results page (but it can be disabled easily by clicking the \'hide googlepedia link\').\n\n4. Morning Coffee (<a href=\"https://addons.mozilla.org/en-US/firefox/addon/2677\" target=\"_blank\">download</a>)\nFor me this plugin is more like after dinner cocktail. I use this plugin more at night to catch up on google reader, twitter, the blog, gmail and other websites without having to remember them.\n\n5. CustomizeGoogle &amp; GooglePreview (<a href=\"https://addons.mozilla.org/en-US/firefox/addon/743\" target=\"_blank\">download</a>) &amp; (<a href=\"https://addons.mozilla.org/en-US/firefox/addon/189\" target=\"_blank\">download</a>)\nI probably should have included all the google-based plugins together but oh well. CustomizeGoogle is perfect at removing unwanted ads from the search results page while GooglePreview does an excellent job at showing me the page I am about to navigate to beforehand.\n\n6. FoxyTunes (<a href=\"https://addons.mozilla.org/en-US/firefox/addon/219\" target=\"_blank\">download</a>)\nWhat can I say, this plugin will handle Windows Media Player and iTunes but it will also handle more obscure media sources like Pandora, MusikCube, Las.fm and even Xbox Media Center. Plus it will embed your \"currently listening to\" in your blog or forum posts.\n\n7. Download Statusbar (<a href=\"https://addons.mozilla.org/en-US/firefox/addon/26\" target=\"_blank\">download</a>)\nWhen I downloaded Firefox I was very happy that it eliminated the annoying download status window that plagues IE to this very day. But I eventually grew tired of having to hide and show this window to check on long downloads. Enter the Download Statusbar plugin. This baby creates a small, unobtrusive taskbar within FF that displays your current (and past) downloads. It will even color-code them by download speed!\n\n8. Firebug (<a href=\"https://addons.mozilla.org/en-US/firefox/addon/1843\" target=\"_blank\">download</a>)\nEvery web developer needs this plugin. I wish with every ounce of my soul that IE had a plugin like this. Firebug has solved many a javascript/css/html nightmare for me (even those I encountered only in IE). This plugin can cause some sites to run slowly but it can be disabled very easily.', '2011-05-01 02:48:34', 0, '')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Perception-is-reality', '2008-03-03 06:00:00', 'Perception is reality', 'From Coding Horror: <a href=\"http://www.codinghorror.com/blog/archives/001058.html\" title=\"Actual Performance, Perceived Performance\" target=\"_blank\">A really interesting article</a> that gets into depth about why it is important for you to understand how users perceive performance in your application vs how your application actually performs.  The article explains why file copying in Windows Vista seems to take longer than in Windows XP. I actuality Vista is faster (it\'s file copy algorithm has been updated to make copying files a lot faster than XP but Vista introduces some features that cause users to perceive it\'s performance as slower.\n\nA really interesting read.', '2011-05-01 02:48:34', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('C-Extension-Methods', '2008-03-20 05:00:00', 'C# Extension Methods', 'So over the last few days I\'ve been screwing around with C# extension methods in Visual C# 2008 Express and I have to say they are fast becoming my favorite addition to the .NET framework. What started me on extensions was the fact that in Perl you can do the following with string manipulation:\n\n<!--more-->\n\n[sourcecode language=\"python\"]\n#!/usr/bin/perl\n# set a string variable\n$var= \"=\";\n# repeat it\nprint($var x 7);\n[/sourcecode]\n\n--------- output ---------\n=======\n\nWhich is a relatively easy syntax compared to what you would have to do in C#. I was able to replicate this feature of Perl easily with the following code in C#:\n\n[sourcecode language=\"csharp\"]\npublic static class StringExt\n{\n public static string Replicate(this string s, int times)\n {\n string hold = s;\n for (int i = 1; i <= times - 1; i++)\n {\n hold += s;\n }\n\n return hold;\n }\n}\n\n//replicate a string a number of times\n\nConsole.WriteLine( \"=\".Replicate(7) );[/sourcecode]\n\n--------- output ---------\n=======\n\nNot bad!', '2011-05-01 02:48:34', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Wordpress-2-5-released-', '2008-03-31 05:00:00', 'Wordpress 2.5 released!', '<a href=\"http://pistalwhipped.wordpress.com/2008/03/31/wordpress-25-released/wordpressorg/\" target=\"_blank\" rel=\"attachment wp-att-121\" title=\"WordPress.org\"><img src=\"http://pistalwhipped.files.wordpress.com/2008/03/wordpressorg.png\" alt=\"WordPress.org\" border=\"0\" height=\"270\" width=\"428\" /></a>\n\nI am so excited about this release of wordpress. Whats new? load-time improvements, built-in Gravatar and gallery support (YES!!!), built-in plugin upgrade feature oh, yeah and the entirely new admin interface and customizable dashboard screen. What am I most excited about? Well aside from the already mentioned bitchin\' admin interface I\'m really excited about the code improvements (more detailed comments and database optimizations FTW).\n\nWhen can wp.com users (like yours truly) expect some 2.5 action? Within the next week or so you should see the new interface in your admin consoles.', '2011-05-01 02:48:34', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Wp-com-hosted-blogs-now-on-2-5', '2008-04-04 05:00:00', 'Wp.com hosted blogs now on 2.5', 'What a great way to end the week. I logged in to my dashboard tonight to prep a post for tomorrow and found that my hosted wp.com blog has now been upgraded to WordPress 2.5. Excellent! Right now I am really digging the new look of the admin section (full-screen editing ftw!) and I can\'t wait to see how the blog performs with the new performance enhancements.\n\nExpect a lot more posts about WP 2.5 over the next couple of days.', '2011-05-01 02:48:34', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('WordPress-2-5-Day-1-Thoughts', '2008-04-06 05:00:00', 'WordPress 2.5 Day 1 Thoughts', 'I\'ve been really excited about WordPress 2.5 being released and was really depressed when I left my web host because I didn\'t think they would be upgrading anytime soon. I was really wrong. About a week after it was released to the public WP 2.5 was installed on all hosted WP.com accounts and I\'ve been a happier blogger ever since.\n\n<!--more-->\n\nI\'m not going to talk a lot about the new look as I think others have covered it enough and most of us are of the same opinion: it rocks. Instead I\'d like to talk about the changes that I am most excited about.\n<h3><strong>Galleries</strong></h3>\nI\'ve set up photo galleries on many platforms, PhpNuke, Nucleus CMS, WP, Greymatter and MovableType to name a few. Out of all of those, I had the least trouble with wordpress. However I still had to download a plugin that wasn\'t supported by wordpress and I wasn\'t sure if it would be around after six months.\n\nThe gallery function in WP 2.5 is excellent. My only gripe is that it seems to take a while for my uploaded pictures to show up in the gallery tab but I assume this is just due to excessive load on the server.\n<h3>Writing</h3>\nThe new editor is excellent. I am very happy with the full-screen mode. It allows me to focus on what I am typing which makes editing and reviewing that much easier. When not in fullscreen mode the UI of the writing page is just like the rest of wordpress. It just feels right.\n<h3>Speed</h3>\nWordpress 2.5 <em>feels</em> faster. I\'d have to have my old 2.3.3 version of WP back to do a comparison (please no!) but 2.5 just feels faster to me. All the pages respond snappily and posting doesn\'t take as long as it used to.\n\nThe WP team has definitely set the bar for all other blog platforms and they\'ve set it pretty damn high. <a title=\"Katz Web Design Review of WordPress 2.5\" href=\"http://katzwebdesign.wordpress.com/2008/04/04/wordpress-dot-com-finally-updates-to-2-point-5-a-review/\" target=\"_blank\">Katz Web Design</a> asked \"<em>who would want to use Blogger.com?</em>\" and I think that is the perfect question. After experiencing WP 2.5 who would use any other blog software? Anyone? Bueller? Bueller?', '2011-05-01 02:48:34', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Our-roommates', '2008-04-06 05:00:00', 'Our roommates', 'Just testing out this new gallery system, posting some pictures of our two roommates: Manny (the large all black cat-in-the-box) and Shiva (the White, Grey and Black lazy girl on the pillow).\n\n[gallery] ', '2011-05-01 02:48:34', 0, '')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Care-about-your-code', '2008-04-06 05:00:00', 'Care about your code', '<a title=\"Jeff Perrins blog\" href=\"http://devlicio.us/blogs/jeff_perrin/default.aspx\" target=\"_blank\">Jeff Perrin</a> posted <a title=\"Self Concious Development\" href=\"http://devlicio.us/blogs/jeff_perrin/archive/2008/04/04/self-conscious-development.aspx\" target=\"_blank\">a great one-liner</a> today:\n<blockquote>Write code as if you care what others think about what you’ve written.</blockquote>\nI couldn\'t agree with this sentiment more. I do this at work all the time. I worry about what my peers will think when they look at the code I\'m writing. And you know what? It really helps me to take extra steps to ensure that the code I write is code that I wouldn\'t worry about handing off to a fellow co-worker.\n\nI think all developers should take Jeff\'s advice and embrace self conscious development.', '2011-05-01 02:48:34', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.3ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Converting-a-Security-Identifier-from-binary-to-string', '2008-04-07 05:00:00', 'Converting a Security Identifier from binary to string', 'Just in case you ever want to convert a binary representation of a Windows Security Identifier (SID) to it\'s friendlier string version:\n\nImagine we have a binary sid that is:\n<pre>0x010500000000000515000000F2EBB9149329116C5E3528360E040000</pre>\nThat doesn\'t look too inviting does it? Lets break it out into segments for easier reading.\n<pre>0 [0x01] \n1 [05] \n2 [000000000005] \n3 [15000000] \n4 [F2EBB914] \n5 [9329116C] \n6 [5E352836] \n7 [0E040000]</pre>\nSegments 0 through 2 are used by Windows to validate the SID. 0 is the version number of the SID; currently, all Windows operating systems use \"1\" as the version. 1 tells us that there are 7 segments in this SID (number of dashes minus 2). Segment 2 states that this sid has a top level authority of 5 which equals <strong>SECURITY_NT_AUTHORITY</strong>. (for a better description of what each security authority does please see <a title=\"Well-known SIDs\" href=\"http://msdn2.microsoft.com/en-us/library/aa379649(VS.85).aspx\" target=\"_blank\">this KB article</a>)\n\nSegments 3 through 6 are little-endian 32-bit integers that describe the issuer of the SID. 7 is a 32-bit little-endian integer called the \"Relative ID\". This value is the id of the user on the machine that issued the SID. It is important to remember that these values are stored as little-endians because this will factor in when we translate them into the final SID.\n\nthe first part of the sid is the easiest to translate. In our example sid above the first 3 segments become \"S-1-5\" because every sid is prefixed with \"S\" and we drop segment 3 as it is only used in validation. The next part is where we translate the machine id and user id and this can be confusing when done for the first time. Since the values are stored in little-endian format we have to reverse the order of the bits so:\n<ul>\n	<li><strong>15000000 </strong>becomes 00000015 which translates to (hex to dec) 21</li>\n	<li><strong>F2EBB914 </strong>becomes 14b9eb2f which translates (hex to dec) to 347728882</li>\n	<li><strong>9329116C</strong> becomes 6c112993 which translates (hex to dec) to 1813064083</li>\n	<li><strong>5E352836</strong> becomes 3628355E which translates (hex to dec) to 908604766</li>\n</ul>\nNow we have our machine identifier and our SID is now\n<pre>S-1-5-21-347728882-1813064083-908604766</pre>\nAll we have to do now is translate the user id which follows the same process as the machine id so:\n<ul>\n	<li><strong>0E040000</strong> becomes 0000040e which translates (hex to dec) to 1038</li>\n</ul>\nSo we are all done and our final sid is:\n<pre>S-1-5-21-347728882-1813064083-908604766-1038</pre>', '2011-05-01 02:48:34', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Enumerate-windows-users-groups', '2008-04-08 05:00:00', 'Enumerate windows users&#039; groups', 'The code below will enumerate which groups a domain / local user belongs to.\n\n[sourcecode language=\"csharp\"]\n\nprivate static string GetUserGroups(string strUser)\n{\n string groups = \"\";\n DirectoryEntry de = null;\n try\n {\n\n string entryName = String.Format(\"WinNT://{0},user\",\n strUser.Replace(\"\\\\\", \"/\"));\n\n de = new DirectoryEntry(entryName);\n\n object oGroups = de.Invoke(\"Groups\");\n foreach (object o in (IEnumerable)oGroups)\n {\n DirectoryEntry group =\n new DirectoryEntry(oGroups);\n groups += group.Name + \",\";\n }\n }\n catch (Exception)\n {\n throw;\n }\n return groups;\n}\n\n[/sourcecode] ', '2011-05-01 02:48:34', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.9ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Red-Pepper-Omelette', '2008-04-20 05:00:00', 'Red Pepper Omelette', '[gallery]\n\nThis recipe serves 2 people and is an excellent Sunday morning breakfast treat.\n\nIngredients:\n<ul>\n	<li>2 Red Peppers</li>\n	<li>1/2 Yellow Pepper (Roughly Chopped)</li>\n	<li>1/2 Orange Pepper (Roughly Chopped)</li>\n	<li>1 Ham Steak (1/4\")</li>\n	<li>2 Eggs</li>\n	<li>1/4 Onion (Roughly Chopped)</li>\n	<li>6 Asparagus Stalks (cut into small bite-sized pieces)</li>\n	<li>2 tablespoons Olive Oil</li>\n	<li>1/2 cup sliced Asiago cheese</li>\n	<li>1 teaspoon salt</li>\n	<li>1 teaspoon pepper</li>\n</ul>\nBegin by cooking the ham steak over low-medium heat. You will want to brown it on both sides (5-6 minutes on each side). Sauté the asparagus, onion, yellow and orange peppers in heated olive oil along with the salt and pepper for 5-7 minutes. The asparagus should still be crisp.\n\nRemove the tops and centers of the red peppers taking care not to pierce or damage the sides of them. These will serve as your bowls for the dish.\n\nAt this point it is safe to start the eggs. I scrambled mine with a little butter and salt but you may want to use a sunny-side-up presentation which will work well too. Check the ham and after it has browned on both sides remove it from the heat and begin cubing it.\n\nWhen the eggs are just about done it will be time to start plating. You will start by layering the ingredients in the following order (bottom to top) in each red pepper: Vegetables, Ham, Asiago cheese and finally the eggs. Garnish with a sprig of thyme and you are all set. Enjoy!', '2011-05-01 02:48:34', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('From-one-Noob-to-another', '2008-05-18 05:00:00', 'From one Noob to another', 'I\'m relatively new to the world of professional software development. I got my start hacking away in Visual Basic back in 1995 and didn\'t do any sort of development for money until 2004. Yeah I\'ve only been a software developer for 4 years now. It\'s sort of scary being a noob in real life. There is a lot to learn: the culture, what to say, what to do and most importantly what not to say and what not to do.\n\nThe hardest lesson I\'ve had to learn is to not be afraid of the words \"<em>I don\'t know</em>\". I used to assume I knew the answer to everything or that I was expected to know the answer. I was wrong. Nobody has all the answers and those people that seem to either A) are being asked the right questions or B) are making it up.\n\nIt\'s hard looking your boss in the face and saying that you don\'t know the answer to whatever he/she is asking you but it\'s even harder to say it later or worse: when he/she finds out on their own.\n\nAnother thing I\'ve learned that you never say \"yes\" under pressure. Ever. If someone comes to you to ask you for something and you are occupied or in a rush then simply say so. Say \"I\'m really busy right now, give me some time to come up with an accurate assessment\".\n\nIf the person needed the estimate 5 minutes ago then qualify your response: \"I\'ll need more time to get you an accurate assessment but my best guess right now would be...\". This can really save you some stress further down the line.\n\nAlso, Read. Read everything. Read blogs, MSDN Articles, newsgroups, magazines (\"Code\" is pretty good) and most importantly books. Programming books have almost fallen off the list of a programmers best learning tools but not entirely. I\'ve learned almost as much from books as I have from actually writing code. If you are unsure about exactly where to start <a title=\"Recommended reading for Developers\" href=\"http://www.codinghorror.com/blog/archives/000020.html\" target=\"_blank\">Jeff Atwood has a really good reading list</a>.', '2011-05-01 02:48:34', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Useful-Code-Object-Enumerate', '2008-05-22 05:00:00', 'Useful Code: Object.Enumerate', 'I write a lot of javascript at my job and I often find myself in a horrible debugging situation where something isn\'t working right and I need a way to find out what properties and methods an object has quickly. I\'ve found the following code very helpful in determining this.\n\n[sourcecode language=\"jscript\"]\nObject.Enumerate = function(o,t) {\n var type = typeof t === \'undefined\' ? null : t;\n for(var key in o)\n {\n var value = o[key];\n\n // if the user did not pass a\n // type then \"alert\" each member\n if(type == null ||\n typeof value === type)\n {\n alert( key + \" is a \" +\n (typeof value));\n }\n }\n};\n[/sourcecode]\n\nThis is a really simple method that will take an object and (optionally) a string representation of a type (\"number\", \"object\", \"function\" or \"string\") and will display the members that match those types (or if no type is passed it will display each member and it\'s type).\n\n[sourcecode language=\"jscript\"]\n//basic object for testing\nvar x = {\n    int: 1,\n    str: \"\",\n    func: function() {\n\n    },\n    obj: {\n        str2: \"\"\n    }\n};\n\n// alerts each member of \'x\' and it\'s type\nObject.Enumerate( x);\n\n//alerts \"func is a function\"\nObject.Enumerate(x, \'function\');\n[/sourcecode]\n\nThis code is really similar to how prototype generates JSON information and can easily be modified to return various types of data back to the requestor.\n\nNote this code isn\'t perfect, for instance it doesn\'t account for Arrays which are typed as objects in javascript. Also it doesn\'t do any sort of recursion so it will only return top-level members.\n\nBut even so this is still the most used script in my library and I make sure I have it in all my projects. Hopefully it helps someone else.', '2011-05-01 02:48:34', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Useful-Code-Object-isArray-', '2008-05-29 05:00:00', 'Useful Code: Object.isArray()', 'When you need to find out the type of an object in JavaScript you would just do the following:\n\n[sourcecode language=\'jscript\']\nvar x = 1;\nalert(typeof x);\n[/sourcecode]\n\nWell what if x were an array? With x as an array a typeof incorrectly returns \"object\" as the type. Well that is just plain wrong. Enter the isArray() method.\n\n[sourcecode language=\'jscript\']\nObject.isArray = function(o) {\n return o && o.constructor === Array;\n};\n[/sourcecode]\n\nGranted it\'s not as simple as typeof but it does correctly identify array objects and is something every JavaScript developer should have in their <a href=\"http://www.hanselman.com/blog/GarageSalesAndGarageSaleQualityCode.aspx\" target=\"_blank\">code garage</a>.', '2011-05-01 02:48:34', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Best-Practices-Are-Crap', '2008-05-30 05:00:00', 'Best Practices Are Crap', '<span class=\"entry-author-name\">Derik Whittaker</span> wrote <a title=\"What the &amp;@$#* is a \'Best Practice\' anyway?\" href=\"http://devlicio.us/blogs/derik_whittaker/archive/2008/05/30/what-the-amp-is-a-best-practice-anyway.aspx\" target=\"_blank\">a great article on best practices</a> and how \"best practice\" is essentially a bunch of bullshit:\n<blockquote>About the only thing [Best Practice] means is \'I have found that doing XYZ in ABC way works the best for me\'.  But just because it works for you, or even works for a group of people that does not mean it is \'Best Practice\'.</blockquote>\nI\'ve never really thought about it but this is 160% correct. Even now, at my current job we are reviewing Spiral, Agile, TDD and other SDLCs in order to conform to \"best practices\".\n\nThankfully my boss understands that what works for some may not work for all and if something isn\'t working we won\'t have time to try to screw with it. We\'ll have to move on and find something that fits better. This is exactly how \"best practices\" should be treated. As suggestions on how to handle software development.\n\nThere is no \"one ring to rule them all\" in our world. There are many rings each has a different fit to it and needs to be tried on to see where it fits best.', '2011-05-01 02:48:34', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Get-me-a-bucket-before-I-Plurk-', '2008-06-04 05:00:00', 'Get me a bucket before I Plurk!', '<em><a title=\"Plurk\" href=\"http://www.plurk.com\" target=\"_blank\">Plurk</a> is the latest micro-blogger site following in the footsteps of Twitter, Jaiku and Pownce. I heard a lot of talk about it on twitter and thought I would check it out. </em>\n\nYes, I signed up for <a title=\"My Plurk Page\" href=\"http://www.plurk.com/user/pistalwhipped\" target=\"_blank\">a plurk account</a> the other day and gave it quick run through. I didn\'t like it.\n\nRight of the bat the UI is really, really unattractive to me. I really hate side scrolling and Plurk makes you do an awful lot of it. How does their timeline UI work when you have <span style=\"text-decoration:line-through;\">Scobl-ish</span> Leo Laporte-ish numbers of followers?\n\nFinding and adding a friend on Plurk is not easy. Where the hell is the search? Currently you can only find new friends by importing them from another social networking site or by emailing them an invite. Fail.\n\nThe emoticons are not good, they look cheap and childish. I always disable them in any software that uses them but in Plurk I can\'t get away from them.\n\nThe ability to share youtube videos and flickr pictures is great although I don\'t like being limited to only youtube for video. This is much better than uploading a file (as in Pownce) since it allows me to use data from one service within another. And I like that.\n\nI have some smaller gripes but these are basically gripes that I have will all web 2.0 sites:\n<ul>\n	<li>No Open ID Support.</li>\n	<li>No G/Wavatar support</li>\n	<li>Limited or no data portability</li>\n</ul>\nWill I switch? No. Although Plurk has attractive features like sharing videos and pictures from other services and a mobile interface I still can\'t get over the timeline UI or the lack of search. I expect that Plurk will be revisiting their UI relatively soon and hopefully their name along with it.', '2011-05-01 02:48:34', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('June-25th', '2008-06-25 05:00:00', 'June 25th', 'Some cool facts about June 25th.\n<ul>\n	<li>Mozambique celebrates their Independence Day</li>\n	<li>George A. Custer made his last stand at the battle of little bighorn in 1876</li>\n	<li>William \"The Father of the U.S. Airborne\" Lee died</li>\n	<li>George Orwell is born in 1903</li>\n	<li>Kim Campbell becomes the first female prime minister of Canada</li>\n	<li>in 1940 France officially surrenders to Nazi Germany</li>\n	<li>\"The Diary of Anne Frank\" is published</li>\n	<li>Elena Cornaro Piscopia becomes the first woman to receive a doctorate in philosophy in 1678</li>\n	<li>The Korean War begins in 1950</li>\n	<li>Anthony Bourdain is born in 1956</li>\n	<li>\"Our World\" is broadcast by satellite to 400 million viewers world-wide in 1967</li>\n</ul>', '2011-05-01 02:48:34', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Blogging-the-destupidifier', '2008-06-30 05:00:00', 'Blogging: the destupidifier', '<blockquote>The man who makes no mistakes does not usually make anything - William Connor Magee</blockquote>\nMore often than not I decide to not post something here because I worry about looking stupid. Fact is, I am stupid (and I write <a href=\"http://www.codinghorror.com/blog/archives/000099.html\" target=\"_blank\">shitty code with bugs</a> :D ) but I\'ve found that blogging helps me think things out.\n\nWhich is why I\'ve started a blog with my Sister and older brother over at <a title=\"The Family Blog\" href=\"http://barbozabloggers.com\" target=\"_blank\">BarbozaBloggers.com</a>. Don\'t worry I\'m not leaving Pistalwhipped! behind I\'m just thinking through different topics and decided that another blog would be a better venue.\n\nBlogging over at BB will also allow me to eliminate a lot of the bloggers block that I encounter with this blog.\n\nWhat I\'m hoping is to have one site stimulate discussion for the other allowing both to grow by feeding off of each others content.\n\nWe\'ll see how it turns out eh?  Oh, also: I get to hang out with my family which is a huge bonus.\n\nEDIT: i realized the other day that I forgot to include the link to Jeff Atwoods post. I\'ve updated the post to include it as it took on a whole different tone without it. :D', '2011-05-01 02:48:34', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Firefox-3-Select-multiple-lines-of-text', '2008-07-06 05:00:00', 'Firefox 3: Select multiple lines of text', 'I never knew this but Firefox 3 has a new feature that allows you to select multiple lines of text. Just use the ctrl key (cmd on Macs) while selecting text as you normally would.\n\nIf you find it isn\'t working check that you have firebug disabled as it is known to interfere with this feature.\n\nEnjoy!', '2011-05-01 02:48:34', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('And-I-can-t-even-fold-paper-into-a-crane-', '2008-07-21 05:00:00', 'And I can&#039;t even fold paper into a crane...', '[youtube=http://www.youtube.com/watch?v=e45J0SCXO5s&amp;eurl]\n\n*sigh*', '2011-05-01 02:48:34', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.3ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('iTunes-doesn-t-grok-synching-', '2008-07-21 05:00:00', 'iTunes doesn&#039;t grok &quot;synching&quot;', 'I got an iPod Touch few weeks ago and I have to say that I am really happy with it. It has some hangups, like <em>how come I can\'t use it\'s WiFi connection to download new podcasts</em>, or <em>why can\'t I save a mp3 file locally from it\'s safari browser</em>, but for the most part it is a great piece of tech. The 2.0 firmware added a lot more worth with the App Store applications.\n\nHowever iTunes is still less than stellar. iTunes is like being chaperoned on your first date. If you want to hang out with the iPod, iTunes is going to tag along.\n\niTunes\' slow, ugly, and cluttered UI hasn\'t changed since the last time I used it ( version 6 dot something) and although finding and downloading podcasts has improved, how iTunes synchronizes to the iPod has not.\n\nWhen I connect my iPod to my pc iTunes loads and begins synchronizing my data. However, if I download new content iTunes ignores it and does not synch it.\n\nEven if I have specified that all types of that content are to be synched I will have to manually trigger iTunes to synchronize.\n\nThis is very bad from an end-user perspective. All developers writing software that synchronizes to/from an external datasource listen up: a user should not have to tell the software when to synch.\n\nA user should be given the option to manually synch or to completely disable auto-synching but by default the system should synch new content \"automagically\".\n\nDon\'t make end-users tell your software it\'s ok to do what it is supposed to do because we don\'t want the hassle.', '2011-05-01 02:48:35', 0, '')[0m
  [4;36;1mSQL (0.6ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.7ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Code-comments-respect', '2008-07-22 05:00:00', 'Code comments = respect', 'I was browsing around Code Project the other day, I subscribe to their most recent submissions feed to watch for interesting samples, and I saw a unique take on a logging system.\n\nIt used IL replacement, much like TypeMock Isolator, to allow developers to enable/disable the logger without having to compile any code.\n\nIn theory, I haven\'t tried it out yet, you would be able to add this logging system to any project without coding anything.\n\nI downloaded the code and it\'s huge. 5 assemblies, over 2000 lines and there is some COM stuff in there. I notice two things. First it\'s all in c++. This is not a bad thing it\'s just not my first language.\n\nSo I start looking around for some comments to let me know what the heck is going on in this code.\n\nAnnnnnnd... hmmmm thats odd.\n\nThere are <strong>no</strong> comments. Not one. I checked the author notes on the original submission article to see if this was an error and there was an updated link.\n\nNope. Nothing. It takes me a minute but near the bottom of the post I see why there are no comments.\n\nThe author writes:\n<blockquote>\"I like to think I write self-documenting code so I tend to not have any comments in my code.\"</blockquote>\nI instantly deleted the code from my system. My thought is if the author of this code didn\'t think it was worthy of some kind of explanation then I am certainly not going to waste my time with it.\n\nComments aren\'t just some \"nice to have\" thing. They show that you actually care about what you are putting out there and they show your thought process throughout the codes execution. If you don\'t care about that then why would I?\n\nI\'m not saying that every line, function call and variable needs a comment but any programmer worth his salt should put some form of documentation into his/her code. It\'s a sign of respect.\n\nSo my fellow developers let\'s respect each other enough to document what we put out into the world. What do you say?', '2011-05-01 02:48:35', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('DateTime-to-Friendly-Date', '2008-09-08 05:00:00', 'DateTime to &quot;Friendly&quot; Date', 'I really like it when an application presents dates in a friendly \"n Hours Ago\" format. Mostly because I\'m lazy and hate to do extra brain-work. <a title=\"Pretty Date.js\" href=\"http://ejohn.org/blog/javascript-pretty-date/\" target=\"_blank\">John Resig created \"pretty date\"</a> and it\'s insanely useful. It also plugs into JQuery very easily.\n\nBut on the project I am working on it made more sense to provide this functionality within the database. So I created a pretty date function for SQL.\n\n[sourcecode language=\"SQL\"]\nCREATE FUNCTION dbo.GetFriendlyDateTimeValue\n(\n	@CompareDate DateTime\n)\nRETURNS nvarchar( 48 )\nAS\nBEGIN\n	DECLARE @Now DateTime\n	DECLARE @Hours int\n	DECLARE @Suff nvarchar(256)\n	DECLARE @Found bit\n\n	SET @Found = 0\n	SET @Now = getDate()\n	SET @Hours = DATEDIFF(MI, @CompareDate, @Now)/60\n\n	IF @Hours <= 1\n	BEGIN\n		SET @Suff = \'Just Now\'\n		SET @Found = 1\n		RETURN @Suff\n	END\n\n	IF @Hours < 24\n	BEGIN\n		SET @Suff = \' Hours Ago\'\n		SET @Found = 1\n	END\n\n	IF @Hours >= 8760 AND @Found = 0\n	BEGIN\n		SET @Hours = @Hours / 8760\n		SET @Suff = \' Years Ago\'\n		SET @Found = 1\n	END\n\n	IF @Hours >= 720 AND @Found = 0\n	BEGIN\n		SET @Hours = @Hours / 720\n		SET @Suff = \' Months Ago\'\n		SET @Found = 1\n	END\n\n	IF @Hours >= 168 AND @Found = 0\n	BEGIN\n		SET @Hours = @Hours / 168\n		SET @Suff = \' Weeks Ago\'\n		SET @Found = 1\n	END\n\n	IF @Hours >= 24 AND @Found = 0\n	BEGIN\n		SET @Hours = @Hours / 24\n		SET @Suff = \' Days Ago\'\n		SET @Found = 1\n	END\n\n	RETURN Convert(nvarchar, @Hours) + @Suff\n\nEND\n[/sourcecode] ', '2011-05-01 02:48:35', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Palindrome-Batch', '2008-09-09 05:00:00', 'Palindrome Batch', 'This was originally <a href=\"http://stackoverflow.com/questions/52002/how-to-check-if-the-given-string-is-palindrome#52031\" target=\"_blank\">posted by Pam over on StackOverflow</a> but I thought it was too awesome and had to share it, just in case you want validate a palindrome from the command line one day.\n\nEDIT: I removed the code and provided a link to the comment at StackOverflow. You can check out Pams\' blog here: <a href=\"http://pm-db.blogspot.com/\" target=\"_blank\">http://pm-db.blogspot.com/</a>', '2011-05-01 02:48:35', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Dear-Intarwebz-', '2008-09-10 05:00:00', 'Dear &quot;Intarwebz&quot;', '<a title=\"just. another. browser.\" href=\"http://www.google.com/chrome\" target=\"_blank\">It\'s called \"Chrome\"</a>. It happens to be made by Google. It\'s <strong>just. another. browser.</strong> Are we done? Can we move on as a society?\n\nEDIT: ok, so Chrome is fast. Really fast. I loaded <a href=\"http://nerget.com/rayjs/rayjs.html\" target=\"_blank\">Oliver Hunt\'s JavaScript Ray Tracer</a> in FireFox 3.0.3 and it took 30.393 seconds to complete a render. Under Chrome the render took less than 6.5 seconds.', '2011-05-01 02:48:35', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.3ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Prototype-to-C-Try-These-', '2008-10-01 05:00:00', 'Prototype to C#: Try.These()', 'The <a href=\"http://www.prototypejs.org\" target=\"_blank\">prototype javascript library</a> has a class (Try) and function called these(). This function accepts an array of functions as it\'s sole argument and it will execute each function in the array, in the order they are added, and return the result from the first function that executes without error. If none of the functions executes successfully undefined is returned.\n\nFor example:\n\n<pre><code class=\"prettyprint\">\nvar i = Try.These(\n function() { return 9 / 0; },\n function() { return 1; }\n);\n</code></pre>\n\nIf we ran the sample above i would equal 1 because the first function would encounter a division by zero error. However:\n\n<pre><code class=\"prettyprint\">\nvar h = 0;\nvar i = Try.These(\n function() { return 9 / h; },\n function() { return 1 / h; }\n);\n</code></pre>\n\ni will equal undefined in this example.\n\nWith the .Net framework\'s generics library we can achieve roughly the same results. We won\'t be able to assign an undefined value to the result but we can play around with the default keyword. :D\n\n<pre><code class=\"prettyprint\">\npublic class Try\n{\n public static T These(params Func[] delegates)\n {\n for (int i = 0; i &lt;= delegates.Length - 1; i++)\n {\n try\n {\n return (T)delegates[i]();\n }\n catch\n {\n\n }\n }\n return default(T);\n }\n}\n</code></pre>\n\nSo for example:\n\n<pre><code class=\"prettyprint\">\nstatic void Main(string[] args)\n{\n int i = 0;\n int y = Try.These(\n delegate() {\n int x = 0;\n return i / x;\n },\n\n delegate() {\n return ++i;\n });\n\n Console.Write(\"y is \" + y.ToString());\n}\n</code></pre>\n\nWill output\n\n<code>y is 0</code>', '2011-05-01 02:48:35', 0, '')[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Jquery-MVC-Web-Dev-Heaven', '2008-10-02 05:00:00', 'Jquery + MVC = Web Dev Heaven', 'So <a href=\"http://www.hanselman.com/blog/jQueryToShipWithASPNETMVCAndVisualStudio.aspx\" target=\"_blank\">Jquery is going to become part of Asp.net MVC</a>. First off, congrats to <a href=\"http://jquery.com/\" target=\"_blank\">the Jquery team</a>. They\'ve put out a really awesome product. Second, congrats to Microsoft for catching every .Net developer completely by surprise, proving, again, that they are listening to the community.\n\nI never really got into the microsoft javascript libraries that shipped with the ajax control toolkit because I found that I could do things much faster using external javascript libraries .\n\nIt will be interesting to see what Microsoft contributes back to the Jquery community in later updates to the ASP MVC product.', '2011-05-01 02:48:35', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Jeff-Johnson-Grandfather-of-the-Tree-View', '2008-10-05 05:00:00', 'Jeff Johnson: Grandfather of the Tree View', '<blockquote><span>Think of it as a hi-tech version of Woody Allen\'s statement that life is what happens to you while you\'re out doing something else. </span></blockquote>\nThe above excerpt was written by Jeff Johson, the creator of the Xtree file management software in his quasi-blog post title \"<a href=\"http://www.jeffreycjohnson.com/xtreehistory.html\" target=\"_blank\">An Unapologetic History of XTree</a>\" written in 1991, six years after Xtree 1.0 was released.\n\nJeff was the lead developer on the Xtree software project that originally started out as an in-house tool but would soon become one of the most popular applications ever released for the DOS operating system.\n\nWhat set Xtree apart from every other application was how it showed you where your files were located.\n<blockquote><span>Among the subjects discussed were how the program would represent the DOS directory structure on-screen, and what the screen might look like. I drew a picture of this outline on a white board. It looked like a tree that needed water. It was a swell picture but no one thought it could be done. Impossible, they said.</span>\n\nFamous last words.  </blockquote>\nXtree was the first application to use what we now call the Tree View it was created and shipped a full ten years before <a href=\"http://www.patentstorm.us/patents/5689662/claims.html\" target=\"_blank\">Microsoft would patent the idea and claim it as theirs</a>. Although never officially credited, Jeff Johnson created of one of the most widely used UI components since the button.\n\nSadly, Executive Systems, the makers of Xtree, were aquired by Central Point Software in 1993. Symantec bought Central Point Software in 1994 and stopped all production of Xtree in 1995.\n\nJeff never recieved any compensation from Microsoft when they added file manager to Windows and, in 1992 he contracted the flu and his health began to decline. Although he has not gotten any better he does plan to work on another file manager when his health improves.\n\nHis article is a must-read for anyone that used Xtree and a strongly suggested read for anyone that develops software professionaly. Next time you open folder view in Windows Explorer, think of Jeff Johnson and all the talented people at Executive Systems.\n\nI know I will.', '2011-05-01 02:48:35', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('How-I-got-into-programming', '2008-12-05 06:00:00', 'How I got into programming', 'I know exactly why I got into programming. I\'m not so sure when it happened but I do know why.\n\nI was always obsessed with understanding how things worked. I <strong>had</strong> to know. Everything had to be taken apart and then put back together, whenever my dad or mom would throw out some piece of computer hardware or other machinery I would ask to see it before they did.\n\nThen I would retreat to my room and take whatever it was apart and see how it did what it did. Even if I didn\'t really understand what was going on with whatever I was taking apart in the end it was still fun and exciting. Transformers were, of course, my favorite toys.\n\nI think it was late 1995 / early 1996 when my dad bought me a copy of Visual Basic 4.0 at one of our local computer shows. I remember being really excited because I would finally figure out how programs like WordPerfect, xTree, Windows, and Commander Keen really worked.\n\nUnfortunately my copy of Visual Basic never really showed me how Windows or Commander Keen worked but it kept me occupied for that whole summer and opened me up to a whole world of new things to figure out.\n\nI know exactly why I got into programming. I\'m not so sure when it happened but at least I know why.', '2011-05-01 02:48:35', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('2000-2008-What-I-ve-Learned', '2008-12-08 06:00:00', '2000 - 2008 What I&#039;ve Learned', 'I\'ve always wanted to write an end-of-the-year summary post that would explain some of the lessons I learned during that year. For one reason or another I\'ve never done this and I figured that it was time to start. So to make up for my slacking I assembled a list of some of the lessons I\'ve learned over the last 8 years.\n<ul>\n	<li>Never under any circumstances store a password in plain-text.</li>\n	<li>Do not insert unfiltered strings into a query. Ever.</li>\n	<li>Users aren\'t stupid. They are clever. Like foxes. Like foxes with augmented AI Skynet brains. They will do things you would never think of in 1 x 10^1000 years.</li>\n	<li>Develop and test on the same platform / permissions level that your app will run under. Trust me, this will save you serious future debugging time.</li>\n	<li>And on that note: Test, test, test, test.</li>\n	<li>Regular expressions work 90% of the time but you only really need them 10% of the time.</li>\n	<li>If something doesn\'t feel right it probably isn\'t. If you can fix it fast do it, otherwise root out code smell and refactor in your down-time.</li>\n	<li>XXXX technology isn\'t always the answer. Be pragmatic. Solve problems as easily as possible. We exist to reduce and handle complexity in non-complex ways.</li>\n	<li>Open source is a good thing.</li>\n	<li>Contribute to or start an open source project. Extra XP and a good resume bullet.</li>\n	<li>Did I mention test, test, test, test.</li>\n	<li>Only re-invent what you absolutely have to. Would you rather spend a week implementing and testing your own GridView or install a commercial control in a day?</li>\n	<li>It\'s not the hours you put in, it\'s what you do with them. Refactor your own development process. If you spend 1/2 a day doing something, odds are you can improve that time.</li>\n	<li>\"It works on my machine\" is ok if, and only if, you are coding for your machine.</li>\n	<li>Nobody makes bug-free software. Learn from the bugs you make now and you\'ll make newer more interesting ones.</li>\n	<li>Oh, and Test, test, test, test.</li>\n</ul>\nThe items on the list above are definitely not things I knew coming into software development. They are all things I\'ve had to learn the hard way, usually by falling completely on my face. The first two especially.\n\nWe all make mistakes, it\'s part of learning. All I hope is that this list prevents someone from making the same mistakes I made so they can go on and make their own, newer, more complicated, and more interesting mistakes.', '2011-05-01 02:48:35', 0, '')[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Build-Inno-Setup-Script-When-In-Release-Mode', '2008-12-15 06:00:00', 'Build Inno Setup Script When In Release Mode', 'I use Inno Setup as an installer for all my windows-based projects. Often-times I want to build the installer when I build the project from within Visual Studio but only when I build the \"Release\" configuration.\n\nHere is the post-build script that will accomplish this:\n\n<code>c:\ncd\\\nIF Release==$(ConfigurationName) \"C:\\Program Files\\Inno Setup 5\\Compil32.exe\" /cc &lt;PATH_TO_ISS_FILE&gt;\n</code>', '2011-05-01 02:48:35', 0, '')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (1.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Test-everything-', '2009-01-29 06:00:00', 'Test everything.', 'I learned a lot about backups and DR last night. I was uploading about 10gb of ISO images to our file server at home and I started to notice a lot of dialog boxes appearing in my RDP window (the server is a headless box).\n\nThe messages were saying that Windows couldn\'t read XXXX file because the file or folder was corrupt.\n\nI waited for my transfers to finish and tried to run chkdsk. No luck. Chkdsk couldn\'t initialize on the drive in question. Uh oh. I rebooted and crossed my fingers.\n\nAfter a while the server came back online and I went back in over RDP. I immediately noticed that 80gb of data had been cleared from the drive! Now I was starting to panic. The 80gb of data included almost everything we use including:\n\n \n<ul>\n	<li>Software Downloads</li>\n	<li>Our in-house SVN Repository</li>\n	<li>Code files from years past (not in SVN)</li>\n	<li>All of our Music</li>\n	<li>All of our Pictures</li>\n	<li>Various Documents (tax documents, important medical stuff etc)</li>\n</ul>\n \n\n<span> </span>\n\nBasically everything you wouldn\'t want to lose right? \n\n<em>\"No problem\"</em>, I thought. I\'ve been meaning to wipe this machine and get back to a fresh install for a while. So I reformatted the main drive and began re-installing Windows.\n\nWhile this was going on I downloaded our backups from Mozy Home, retrieving our documents, pictures, music, everything. Or so I thought.\n\nAfter Windows was done I started by re-creating all the shares on the cleared drive. I began installing SVN from scratch, setting up our repositories again and getting ready to re-check-in my code from my main pc.\n\nDuring this process I started moving directories around on my main pc and got confused about what folders had what in them and I eventually ended up deleting all the code on that machine in one key stroke. I immediately knew what I had done but I kept my cool.\n\n<em>\"It\'s still cool. I have the backups. I\'ll be a day behind but I\'ll have my code\"</em>.\n\nSo I restore the backup from the Mozy download and start browsing the repository from my main pc. One problem though, I\'m not seeing any code newer than 12/07/2008. This can\'t be. I wrote a nightly backup script!\n\nAfter checking the script I realized my problem. Yes, I had written the backup script to run nightly and yes, it was running every night but it wasn\'t overwriting the old backup data because the files were protected. \n\nNow at this point I am beyond devastated. I\'ve just committed the cardinal sin in computers. I assumed my backups would work and never fully tested them. I am, for lack of a better term, completely screwed.\n\nSince then I\'ve run a whole slew of data recovery tools on both machines with no luck. My data is gone. A good month and a half of up-till-4am coding sessions completely gone.\n\nTest all the time and test everything. Don\'t just assume things will work because they most likely won\'t when you need them the most.\n\n \n\nUpdate: I thought this was really pretty funny: <a href=\"http://stackoverflow.com/questions/84556/whats-your-favorite-programmer-cartoon/110481#110481\">http://stackoverflow.com/questions/84556/whats-your-favorite-programmer-cartoon/110481#110481</a>', '2011-05-01 02:48:35', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.4ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Introducing-The-JavaScript-Object-Query-Library', '2009-02-10 06:00:00', 'Introducing The JavaScript Object Query Library', '<blockquote><em>So, yeah I originally started writing this article back in september when I was about mid-way through JSOQ. Some things have changed since then and I\'ve tried to keep the post up-to-date. Enjoy!</em>\n\n<em>Also, another similar library has come out recently: <a href=\"http://www.codeplex.com/jsinq\" target=\"_blank\">JSINQ</a> which is a really feature-rich LINQ to Object implementation in Javascript. Really bad-ass stuff.</em></blockquote>\nThe Elevator Pitch:\n\nJSOQ is an open-source pet project of mine that lets you easily access the data that you need from large collections in JavaScript. It was developed over a two week period in September of 2008 and is currently at version 1.1.\n\nEveryone probably just shrugged and said \"so??\" Well let me show you. \n\nLets assume that you have the following JSON string from another web application like, say <a title=\"Twitter search results in JSON\" href=\"http://search.twitter.com/search.json?q=codeimpossible\" target=\"_blank\">twitter search results</a> for example:\n\n<pre class=\"brush:javascript\">\n{\"results\":[\n{\n\"text\":\"Just another day at the office\",\n\"to_user_id\":null,\n\"from_user\":\"codeimpossible\",\n\"id\":1194587890,\n\"from_user_id\":1316793,\n\"iso_language_code\":\"en\",\n\"profile_image_url\":\"www.path.to.image.us\",\n\"created_at\":\"Tue, 10 Feb 2009 05:47:33 +0000\"\n},\n{\n\"text\":\"@spolsky thats easy! http:\\/\\/tinyurl.com\\/2z42bs\",\n\"to_user_id\":1357501,\n\"to_user\":\"spolsky\",\n\"from_user\":\"codeimpossible\",\n\"id\":1194582705,\n\"from_user_id\":1316793,\n\"iso_language_code\":\"en\",\n\"profile_image_url\":\"www.path.to.image.us\",\n\"created_at\":\"Tue, 10 Feb 2009 05:44:51 +0000\"\n}\n]} \n</pre>\n\nIn the sample above we only have two results but JSOQ has been tested to work with collections of tens of thousands of items.\n\nThe JSON object we have here is perfectly fine if we watned to show a whole bunch of data to the end user, but what if I only wanted to show the search results after a certain date? Or what if I only wanted the text from each message that was typed to this \"spolsky\" character?\n\nTo accomplish this in \"straight\" javascript I\'d be looking at writing a lot of loops and if/else code and then I would still have all these extra properties that I don\'t even need.\n\nJSOQ allows me to query a javascript object or collection of objects using a specified criteria and return only the properties/methods I want.\n\nSo lets go with the second option. Let\'s get all the .text members from all the messages that were sent to the \"spolsky\" user.\n\n<pre class=\"brush:javascript\">\nvar search_results = eval(our_json_result);\nvar result = null;\nwith(jsoq) {\n    result = From(search_results.results)\n                .query(\'text\')\n                .where(function(i) {\n                    return i.to_user === \"spolsky\";\n                });\n}\n</pre>\n\n \n\nAnd now our result object is filled with a bunch of other objects that would look something like:\n\n<pre class=\"brush:javascript\">\n{\n    text: \"@spolsky thats easy! http:\\/\\/tinyurl.com\\/2z42bs\"\n}\n</pre>\n\n \n\nPretty simple eh? For more information on JSOQ please check back here in the near future or contribute to <a title=\"JSOQ Google Code Page\" href=\"http://code.google.com/p/jsoq/\" target=\"_blank\">the google code repository</a>.', '2011-05-01 02:48:35', 0, '')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Meeting-Sketches', '2009-02-10 06:00:00', 'Meeting Sketches', '[gallery orderby=\"rand\"] ', '2011-05-01 02:48:35', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.4ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Testing-JsonResult-in-Asp-net-MVC', '2009-03-16 05:00:00', 'Testing JsonResult in Asp.net MVC', 'So lately I\'ve been working on a project using Asp.net MVC and TDD to build a web 2.0 application. It\'s a twitter-like application that I started a while ago but due to <a href=\"\" title=\"Test Everything!\">my failure to test everything</a> I lost about 99% of my work and had to start over from scratch.\n\nBut this was sort of a good thing because it gave me a chance to revisit a lot of things that I wasn\'t very happy with the first time around. I just got done adding the ability for users to post new messages via AJAX.\n\nIn the first version of the application a user would type their status into a textbox, click submit and the page would refresh with their new message at the top of their user wall. Although functional this wasn\'t exactly very \"web 2.0\"-ish.\n\nMy controller will have an action called Index that takes two parameters, the message the users is posting and the tags associated with that message. m_UserService, and m_MessageService are private objects, that interact with the database.\n\n<pre class=\"prettyprint\"><code>\n[Authorize]\n[AcceptVerbs(HttpVerbs.Post)]\npublic ActionResult Index(string message, string[] tags)\n{\n\n	var messageOwner = this.m_UserService\n		.GetByUserName(User.Identity.Name);\n\n	var messageObj = new Message()\n	{\n		Owner = new User()\n		{\n			Identifier = messageOwner.Identifier,\n			UserName = messageOwner.UserName,\n			Email = messageOwner.Email,\n			RealName = messageOwner.RealName,\n			IsModerator = messageOwner.IsModerator\n		},\n		Body = message,\n		CreatedOn = DateTime.Now,\n		IsReply = message.StartsWith(\"@\")\n	};\n\n	this.m_MessageService.Post(messageObj);\n\n	return Json(messageObj);\n}\n</code></pre>\n\nThe JsonResult will be serialized/deserialized by the MVC framework when the code is run in a web project or IIS but I need to be able to test this as part of our build process.\n\n<i>* NOTE: For those of you who might be thinking \"how do we get around the authorization\"? I\'ll answer that in a later post (or you can <a href=\"http://www.hanselman.com/blog/ASPNETMVCSessionAtMix08TDDAndMvcMockHelpers.aspx\">check out Scott Hanselmans blog for the solution</a>).</i>\n\nIdeally I wanted to do something like the following in my test:\n\n<pre class=\"prettyprint\"><code>\n	Assert.AreEqual(\"some text\", jsonObject.someproperty);\n</code></pre>\n\nBut since C# is a type-safe language this isn\'t easily doable. However, utilizing an extension method and the JavaScriptSerializer in System.Web.Script.Serialization we can come pretty close:\n\n<pre class=\"prettyprint\"><code>\n	Assert.AreEqual(\"some text\", jsonObject[\"someproperty\"]);\n</code></pre>\n\nHere is the code I used to achieve this (This code depends on <a href=\"http://code.google.com/p/moq/\">Moq v3.0.108.5 which you can download here</a>):\n\n<pre class=\"prettyprint\"><code>\nusing System;\nusing System.Text;\nusing System.Web;\nusing System.Web.Script.Serialization;\nusing System.Web.Mvc;\n\nusing Moq;\n\npublic static class JsonResultExtensions\n{\n\n	public static T Deserialize&lt;T>(this JsonResult json,\n		Controller controller)\n	{\n\n		var jsonSB = new StringBuilder();\n\n		var httpResponseMock =\n			new Mock&lt;httpResponseBase>();\n\n		httpResponseMock.Setup(mock => {\n			mock.Write(It.IsAny&lt;string>());\n		}).Callback&lt;string>((s) => {\n			jsonSB.Append(s);\n		});\n\n		var httpContextMock = new Mock&lt;httpContextBase>();\n\n		httpContextMock.Setup(mock => mock.Response)\n			.Returns(httpResponseMock.Object);\n\n		controller.ControllerContext\n			.HttpContext = httpContextMock.Object;\n\n		jsonResult.ExecuteResult(\n			controller.ControllerContext);\n\n		return new JavaScriptSerializer()\n			.Deserialize&lt;T>(jsonSB.ToString());\n	}\n}\n</code></pre>\n\n<strong>Update: Doh! I forgot to post a sample of how this extension is used in my unit tests, I\'ve included a sample snippet below. Thanks to Ryan \'cause his comment made me realize I\'d left this out!</strong>\n\n<pre class=\"prettyprint\"><code>\nvar viewResult = controller.Index() as JsonResult;\nvar jsonData =\n viewResult.Deserialize&lt;IDictionary&lt;string, object&gt;&gt;(controller);\n\nAssert.AreEqual(\"this is a test message\", jsonData[\"MessageBody\"]);\n</code></pre>', '2011-05-01 02:48:35', 0, '')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (1.0ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Works-on-my-machine-weekly-project-1', '2009-04-05 05:00:00', 'Works on my machine weekly project #1', '<a href=\"http://www.box.net/shared/hacsh3b3s4\" target=\"_blank\">Download the source code mentioned in this blog post.</a>\n\n \n\n<img class=\"alignleft\" title=\"works-on-my-machine-starburst\" src=\"http://wpup.codeimpossible.com/2009/06/works-on-my-machine-starburst.jpg\" alt=\"works-on-my-machine-starburst\" />I\'m a hopeless code junkie. I love to write code. Most people do one thing for work and then another for their hobby. My girlfriend for instance works as an IT / Systems Engineer  and her other thing is photography.\n\n<em>My</em> other thing is writing <strong>more</strong> code. I never did this with any of my previous jobs (save dish washer... I did wash dishes when I was at home but I wasn\'t trying out new, cooler ways to wash them).\n\n... So where was I? Oh, right code junkie. So, I really like to write code and what I\'ve decided to do is start a new small project each week and try to use some new chunk of .Net or a new library and I\'ll post the end results of my efforts here for you all.\n\nAll of these projects will be offered under the CodeImpossible \"works on my machine\" code quality guarantee. But I\'ll never post something that flat-out doesn\'t work.\n\nSound good? Cool, let\'s kick it off - as the first entry into this space I\'d like to present <strong>TweetCommander</strong>.\n\nTweetCommander is a small .Net v3.5 console application that lies in wait, watching a twitter account for any new Direct Messages from another user (we\'ll call this person the \"owner\").\n\nWhen a direct message from the owner is found, TweetCommander will check to see if it contains certain text, and depending on that text, will perform a series of actions on the machine it is running on.\n\nTweetCommander will support three commands: \"current_screenshot\", \"exit\", and \"set_interval\".\n<ul>\n	<li>Sending \"current_screenshot\" will tell TweetCommander to take a screen capture of the Windows desktop, upload it to TwitPic, and then send the url for that image to the owner user in a Direct Message.</li>\n	<li>Sending \"exit\" will cause TweetCommander to exit</li>\n	<li>The \"set_interval\" is followed by a number that represents the number of seconds TweetCommander should wait between requests for new direct messages from twitter. This is more to avoid the API limit than anything else.</li>\n</ul>\n<strong>Settings</strong>\nTweetCommander will need to store the Twitter ID for the last successfully processed Direct Message somewhere so we aren\'t constantly processing the same commands over and over again. The end user won\'t need to be aware of this value but it\'s worth mentioning anyway.\n\nWe\'ll also need to store the wait interval so we don\'t lose this information if we need to restart TweetCommander for whatever reason.\n\nOkay, so here is the settings file I have so far:\n\n<img class=\"aligncenter size-full wp-image-348\" title=\"tweet_mon_console_settings\" src=\"http://wpup.codeimpossible.com/2009/04/tweet_mon_console_settings.jpg\" alt=\"tweet_mon_console_settings\" width=\"473\" height=\"170\" />\n\n<strong>Working with Twitter</strong>\nAll right so now we need to be able to interact with Twitter. Now, I don\'t want to write my own API library so I\'ll <a href=\"http://code.google.com/p/tweetsharp\" target=\"_blank\">go out and get the latest copy of TweetSharp</a> which will give me a nice, readable interface to twitter\'s API. After getting this built I\'ll be able to get the most recent direct messages using the following code:\n\n<pre class=\"prettyprint\"><code>\nvar directMessages = FluentTwitter.CreateRequest()\n	.AuthenticateAs(\n		TWITTERACCOUNT_USERNAME,\n		TWITTERACCOUNT_PASSWORD)\n	.DirectMessages()\n	.Received()\n	.Since(Properties\n		.Settings\n		.Default\n		.LastProcessedCommandID)\n	.AsJson()\n	.Request()\n	.AsDirectMessages();\n</code></pre>\n\nThats pretty freakin\' sweet I must say. Tweet# really takes the brain work out of working with twitter and there is no way to look at that code and <strong>not</strong> understand what it is doing immediately. Epic win.\n\nTo get this running on your machine, just<a href=\"http://www.box.net/shared/hacsh3b3s4\" target=\"_blank\"> grab the source from my box.net folder</a>, and change these values at the top of the Program.cs file:\n\n<pre class=\"prettyprint\"><code>\n// this is our \"owner account\" we will only act upon direct messages\n// send from this user\nprivate static string TWITTEROWNER  = \"codeimpossible\"; \n\n// this is our listener accounts username\nprivate static string TWITTERACCOUNT_USERNAME = \"someuser\";\n\n// this is our listener accounts password\nprivate static string TWITTERACCOUNT_PASSWORD = \"somepassword\";\n</code></pre>\n\n<em>Note: The solution file for this contains a reference to a compiled version of  the Tweet# library that contains </em><a href=\"http://code.google.com/p/tweetsharp/issues/detail?id=36\"><em>a quick patch I made for an issue that affects uploading an image to Twitpic</em></a><em>. However this issue has been fixed officially in the most recent source.</em>', '2011-05-01 02:48:35', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('W-O-M-M-weekly-post-2', '2009-04-10 05:00:00', 'W.O.M.M. weekly post #2', '<img class=\"alignleft\" title=\"works-on-my-machine-starburst\" src=\"http://wpup.codeimpossible.com/2009/06/works-on-my-machine-starburst.jpg\" alt=\"works-on-my-machine-starburst\" />Due to me being insanely sick this week I\'m going to be changing up the format for the Works On My Machine weekly project post for this week.\n\nInstead of presenting a project that I\'ve worked on I\'d like to highlight some .Net OSS projects / source code that I\'ve been working with / looking at lately.\n\n \n<ul>\n	<li><a href=\"http://code.google.com/p/morelinq/\" target=\"_blank\">The More Linq project</a> - An extension library for LinqToObjects run by Jon Skeet.</li>\n	<li><a href=\"http://www.musikcube.com/\" target=\"_blank\">MusikCube</a> - Awesome music player that uses SqlLite to allow \"smart playlists\" (eg. show me all songs that were added this week that have fewer than 4 stars and have been played less than 10 times).</li>\n	<li><a href=\"http://code.google.com/p/moq/\" target=\"_blank\">Moq</a> - IMHO the best mocking framework for .net development.</li>\n	<li>Scott Hanselman posted some code on his website a while back about <a href=\"http://www.hanselman.com/blog/TheWeeklySourceCode35ZipCompressingASPNETSessionAndCacheState.aspx\" target=\"_blank\">how to Zip Compress your Session and Cache data</a> in Asp.net.</li>\n</ul>\nFeel free to send me any code that you come across and I\'ll feature it in a future post.', '2011-05-01 02:48:35', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.5ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('W-O-M-M-weekly-post-3-HtmlHelper-Gravatar', '2009-04-18 05:00:00', 'W.O.M.M. weekly post #3 - HtmlHelper.Gravatar', '<img class=\"alignleft\" title=\"works-on-my-machine-starburst\" src=\"http://wpup.codeimpossible.com/2009/06/works-on-my-machine-starburst.jpg\" alt=\"works-on-my-machine-starburst\" />Long story short: I <b>hate</b> re-inventing the wheel. If there is a free service that does something I need I will try my hardest to get that service into whatever I am working on. I\'m currently working on an Asp .Net MVC project that needs Avatars (you know, those funny little pictures next to peoples names on Twitter). Enter <a href=\"http://www.gravatar.com\">Gravatar</a>.\n<br />\nGravatar is an awesome service for anyone looking to add avatars to their apps. It\'s free, incredibly simple to implement, and removes a lot of the hassle around getting avatar support into your web/windows app.\n\nAdding Gravatar support to an application is pretty simple. Can you get a users email address? Can you MD5 said email address? Can you make an HTTP GET? BANG. You sir, or madam, can have Gravatars.\n\nThis week for the W.O.M.M. code sample I\'d like to show how I integrated gravatar support into an Asp .Net MVC application.\n\n<h3>How Gravatar Works In A Nutshell</h3>\nGravatar is a free service where you sign up and link images to one or more email addresses that you provide.\n\nOnce you link an image to an email address, any application that supports getting an image over the internet can show your Gravatar by making a request to a special URL. This URL is generated by combining an MD5 hash of your email address with some other parameters and the end result is a link to your Gravatar image.\n\nIE: the link to my Gravatar on the right of this page is:\n\n<code>\nhttp://www.gravatar.com/avatar/15559d868ec27b8583f42116a6b96c14?s=140\n</code>\n\nSo 15559d868ec27b8583f42116a6b96c14 is the hash of my email address - don\'t worry it\'s a one-way hash. The \"s\" parameter is the size of the image that I want, in this case 140 pixels.\n\nThat is pretty much it as far as how the system works, but if you want to read more, check out <a href=\"http://en.gravatar.com/site/implement\">Gravatar\'s implementation documentation</a>.\n\n<h3>The Goal</h3>\nWhat I wanted was an HtmlHelper extension method that I could use in my view pages to create an IMG tag with the correct Gravatar URL. After <a href=\"http://en.gravatar.com/site/implement/url\">looking at the documentation on Gravatars \"How the URL is constructed\" page</a>, I decided my helper extension should support the following:\n\n<b>Avatar Size (the \"s\" parameter)</b><br />\nWhen making a Gravatar URL you can specify a specific size for the Gravatar image. The size can be anything from 1 to 512 pixels, but the default is 80.\n\n<b>Default Avatars (the \"d\" parameter)</b><br />\nIf the email address you are using doesn\'t have any Gravatars setup, Gravatar will generate one for you by default. You can choose from 3 predefined Gravatar types or you can include a URL to a custom avatar of your own. The predefined Gravatar types are Identicon, Wavatar, and Monsterid.\n\n<b>Rating (the \"r\" parameter)</b><br />\nThis wasn\'t a requirement for what I was working on, but you can designate the maximum \"rating\" of the avatars that Gravatar will generate. The accepted values are \"g\", \"pg\", \"r\", and \"x\" and they are inclusive, so specifying \"r\" will allow \"g\" and \"pg\" rated Gravatars to be generated. Gravatars that are rated \"x\" will be returned as one of the predefined avatars above. The default rating is \"g\".\n\n<h3>The Code</h3>\nOkay, so now I know what I need to support. Now it\'s just a matter of getting the code to do this. Let\'s take a look at the class file I used to get this done.\n\n<pre class=\"prettyprint\"><code>\nnamespace System.Web.Mvc\n{\n using System;\n using System.Web.Routing;\n using System.Web.Security;\n\n public enum GravatarDefaultTypes\n {\n Identicon,\n Wavatar,\n Monsterid,\n Custom\n }\n\n public static class GravatarExtension\n {\n		public static string Gravatar(\n			this HtmlHelper hh,\n			string emailAddress,\n			int size,\n			GravatarDefaultTypes defaultType,\n			string customImageUrl,\n			RouteValueDictionary htmlAttributes)\n {\n var tagBuilder = new TagBuilder(\"img\");\n string url = \"http://www.gravatar.com/avatar/{0}?d={1}&s={2}\";\n\n	 // thanks to jon galloway for this one-liner!\n // http://www.eggheadcafe.com/aspnet/how-to/141740/adding-gravatars-to-your.aspx\n string hash = FormsAuthentication\n				.HashPasswordForStoringInConfigFile(emailAddress, \"MD5\");\n string defImg = defaultType.ToString().ToLower();\n\n if (defaultType == GravatarDefaultTypes.Custom)\n {\n defImg = System.Web\n					.HttpUtility\n					.UrlEncode(customImageUrl);\n }\n\n url = String.Format(\n url,\n hash.ToLower(),\n defImg,\n size.ToString());\n\n tagBuilder.MergeAttributes(htmlAttributes);\n tagBuilder.MergeAttribute(\"src\", url);\n\n return tagBuilder.ToString(TagRenderMode.Normal);\n }\n }\n}\n</code></pre>\n\nSo you can see I\'m not storing the hash of the email address, instead I am going to pass in the unaltered string. I didn\'t want to have another piece of data to update when the user changed their email address so the Gravatar() method takes an email address and encodes it using a call to FormsAuthentication.HashPasswordForStoringInConfigFile(), which is awesome ( Thanks Jon, you rock!).\n\nAlso, I\'m not sure if this is a no-no or what, but I did put the extension class under the System.Web.Mvc namespace. This was mainly a convenience (read: laziness) thing and can be easily changed.\n\nAlright so we have some code now, let\'s take a look at how it can be used in our views.\n\n<pre class=\"prettyprint\"><code>\n &lt;%= Html.Gravatar(\n 	Model.Email, // the email address\n 	50, // size, in pixels of the avatar\n 	GravatarDefaultTypes.Identicon,\n 	null,\n 	new RouteValueDictionary(new {\n 		style = \"vertical-align: middle;\"\n 	})\n )%> <br />\n <b> &lt;%= Model.UserName %> </b>\n</code></pre>\n\nLet\'s see how that looks.\n\n<img src=\"http://wpup.codeimpossible.com/2009/04/user-avatar.png\" alt=\"user-avatar\" title=\"user-avatar\" width=\"84\" height=\"81\" class=\"size-full wp-image-378\" />\n\nBooyah, avatar support in 55 lines of code. As always, if I screwed up or there is a better way to do this, please let me know.', '2011-05-01 02:48:35', 0, '')[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (1.0ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Wordpress-com-SyntaxHighlighter-How-To-Remove-Indent', '2009-04-21 05:00:00', 'Wordpress.com SyntaxHighlighter - How To Remove Indent', 'I post a lot of source code on my blog and lately I\'ve been having a lot of trouble trying to remove the left-padding from my source code blocks.\n\nMy problem comes from the <a href=\"http://code.google.com/p/syntaxhighlighter\">SyntaxHighlighter</a> stylesheet that WP.com uses and how it specifies the padding-left for the ordered-lists underneath the .dp-highlighter div tag:\n\n<pre class=\"prettyprint\"><code>\n.dp-highlighter ol\n{\n list-style: decimal; /* for ie */\n background-color: #fff;\n margin: 0px 0px 1px 45px !important; /* problem */\n padding: 0px;\n color: #5C5C5C;\n}\n</code></pre>\n\nThe use of the !important declaration is what is messing me up. The SyntaxHighlighter stylesheet is included at the end of the page html source and my custom css is at the top, so even though the SyntaxHighlighter styles have a lower higher <a href=\"http://www.stuffandnonsense.co.uk/archives/css_specificity_wars.html\">css specificity</a> - my styles will never override them because <a href=\"http://www.w3schools.com/css/css_intro.asp\" target=\"_blank\">CSS is processed top-down</a>.  <em>from \"CSS Introduction\" @ w3schools:</em>\n<blockquote><strong>What style will be used when there is more than one style specified for an HTML element?\n</strong>\nGenerally speaking we can say that all the styles will \"cascade\" into a new \"virtual\" style sheet by the following rules, where number four has the highest priority:\n<ol>\n	<li>Browser default</li>\n	<li>External style sheet</li>\n	<li>Internal style sheet (inside the &lt;head&gt; tag)</li>\n	<li>Inline style (inside an HTML element)</li>\n</ol>\nSo, an inline style (inside an HTML element) has the highest priority, which means that it will override a style declared inside the &lt;head&gt; tag, in an external style sheet, or in a browser (a default value).</blockquote>\nAt this point I began thinking that it was pointless to try any more and that I should just accept that my code blocks would forever be indented by 45 pixels.\n\nHowever, I\'m way too stubborn to admit defeat, and after spending a night reading about css specificity and trying some crazy hacks of my own, I realized that my problem was simple. <strong>I just wanted the code to be farther to the left</strong>.\n\nSo my solution was equally simple (<a href=\"http://en.wikipedia.org/wiki/Occam\'s_razor\">Occam\'s Razor</a> baby!): tell the outer container to allow overflow and position the child relatively and to offset it by the distance I wanted. I did this by applying to the outer div ( the \".dp-highlighter\" div ) the following style:\n\n<pre class=\"prettyprint\"><code>\nDIV.dp-highlighter {\noverflow:auto;\npadding:10px;\n}\n</code></pre>\n\nAnd added this style to the OL tag within the .dp-highlighter div:\n\n<pre class=\"prettyprint\"><code>\n.dp-highlighter ol {\nposition:relative;\nleft:-45px;\n}\n</code></pre>', '2011-05-01 02:48:35', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.4ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Debugging-Syntax-Error-from-a-bad-WebResource-axd-request', '2009-04-24 05:00:00', 'Debugging &quot;Syntax Error&quot; from a bad WebResource.axd request', '\"Syntax Error, Line: 2, Char: 0\". How many of you out there have seen this error while working on a web project?\n\nUsually it\'s because of a forgotten semi-colon or parenthesis in some external javascript file. But sometimes it\'s something more sinister... Something darker, dirtier and just a little bit more evil.\n\nAfter seeing the error message, I opened up Internet Explorer\'s options dialog and unchecked the following options:\n<ul>\n	<li>Disable script debugging (Internet Explorer)</li>\n	<li>Disable script debugging (Other)</li>\n</ul>\n<p style=\"text-align: center;\"><img class=\"aligncenter size-full wp-image-456\" title=\"Internet Explorer Options Dialog\" src=\"http://wpup.codeimpossible.com/2009/04/internet_explorer_options_2.jpg\" alt=\"Internet Explorer Options Dialog\" width=\"415\" height=\"521\" /></p>\n\nI then closed IE, returned to Visual Studio, stopped and re-started debugging (ctrl+shift+F5), and watched Solution Explorer as my page began to load.\n<p style=\"text-align: center;\"><img class=\"aligncenter size-full wp-image-442\" title=\"Solution Explorer Debugging Internet Explorer\" src=\"http://wpup.codeimpossible.com/2009/04/solution_explorer.png\" alt=\"Solution Explorer Debugging Internet Explorer\" width=\"309\" height=\"265\" /></p>\n\nOh! That\'s not good. See the WebResource.axd request that has the same icon as the Default.aspx file? That means that a bad request was sent for an embedded resource and - most likely recieved a 404 page back instead of the javascript file, which caused our syntax error.\n\nOk, so how do we figure out which WebResource reference caused the problem? Well, the only way that I have come up with so far, is to manually copy and paste each WebResource.axd url from the html source of the page to the address bar and navigate there. The pages that give return a file download are ok and the ones that don\'t will return a 404 page in the browser.\n\nAfter finishing this long process of elimination, I found the resource request that was causing my headache:\n<pre class=\"brush:html\">/WebResource.axd?d=MaCiPhUUtdXNj16OOucV5e5lHCBZO...SNIP...</pre>\nSo how do we figure out which resource has embedded this troublesome URL into our html source? I found the solution to that in <a href=\"http://blogs.msdn.com/irenak/archive/2006/11/03/sysk-233-how-to-decrypt-an-asp-net-encrypted-data.aspx\">Irena Kennedy\'s blog post on \"How to Decrypt an ASP.NET Encrypted Data\"</a>:\n<blockquote>Please note, that the code below should not be used in production code! It’s only meant for debugging and troubleshooting, and it may break in future versions of the .NET framework if DecryptString private method changes.\n<ol>\n	<li>Add a web page (e.g. DecryptData.aspx) to your web application. For the code to work, it must run in the same appdomain as the web application that created your encrypted string.</li>\n	<li>Add a text box where you will type in the encrypted string.</li>\n	<li>Add a label where you’ll display decrypted results.</li>\n	<li>Add a button.</li>\n	<li>In code-behind on button click event, add the following code:</li>\n</ol>\n</blockquote>\n<pre class=\"prettyprint\"><code>\nSystem.Reflection.BindingFlags bf =\n System.Reflection.BindingFlags.NonPublic |\n System.Reflection.BindingFlags.Static;\n\nSystem.Reflection.MethodInfo DecryptString = \n typeof(System.Web.UI.Page).GetMethod(\"DecryptString\", bf);\n\nDecryptedData.Text = DecryptString.Invoke(\n null, \n new object[] { EncryptedData.Text } ) as string;\n\n</code></pre>\nAfter I created this page, I pasted the WebResource.axd URL (everything up to the &amp;t=) into the DecryptedData textbox on my DecryptData.aspx page, clicked the Decrypt button, and saw that one of my custom aspx controls was responsible. I then corrected the resource path and the page loaded as it should.\n\nSee the screenshot below for an example of the DecryptData page, or <a href=\"http://www.box.net/shared/uc9aea3999\" target=\"_blank\">download the DecryptData .ASPX and Codebehind from my box.net folder</a>.\n<p style=\"text-align: center;\"><a href=\"http://wpup.codeimpossible.com/2009/04/decryption_page.png\" target=\"_blank\"><img class=\"aligncenter size-medium wp-image-445\" title=\"DecryptData page\" src=\"http://wpup.codeimpossible.com/2009/04/decryption_page.png?w=300\" alt=\"DecryptData page\" width=\"300\" height=\"219\" /></a></p>', '2011-05-01 02:48:35', 0, '')[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Link-Post-for-April', '2009-04-30 05:00:00', 'Link Post for April', 'So here it is, the end of another month and I wanted to post some interesting, and helpful links (mostly so I can find them again) as well as point out some interesting bloggers/twitterers (tweeters?) that you should be following if you aren\'t already.\n<ul>\n	<li><a href=\"http://blogs.msdn.com/jnak/archive/2009/04/20/installing-the-windows-azure-tools-and-sdk-the-easy-way.aspx\">The easy way to install Windows Azure SDK and Tools</a></li>\n	<li><a href=\"http://www.streetviewfun.com/2009/star-wars-graffiti/\" target=\"_blank\">Street View Fun: Star Wars graffiti</a></li>\n	<li><a href=\"http://blogs.msdn.com/irenak/archive/2006/11/03/sysk-233-how-to-decrypt-an-asp-net-encrypted-data.aspx\" target=\"_blank\">Decrypting Asp .Net Encrypted Data</a></li>\n	<li><a href=\"http://community.bartdesmet.net/blogs/bart/archive/2009/04/23/linq-to-objects-debugging.aspx\" target=\"_blank\">Debugging Linq To Objects</a></li>\n	<li>Get ELMAH going in your MVC app via (<a href=\"http://haacked.com/archive/2007/07/24/securely-implement-elmah-for-plug-and-play-error-logging.aspx\" target=\"_blank\">Phil Haack</a>, <a href=\"http://www.hanselman.com/blog/ELMAHErrorLoggingModulesAndHandlersForASPNETAndMVCToo.aspx\" target=\"_blank\">Scott Hanselman</a>, and <a href=\"http://danswatik.com/index.php/2009/04/23/how-to-get-elmah-to-work-with-aspnet-mvc-handleerror-attribute/\" target=\"_blank\">Dan Swatik</a>)</li>\n	<li><a href=\"http://rentzsch.com/notes/programmersDontLikeToCode\" target=\"_blank\">Programmers Don\'t Like To Write Code</a></li>\n	<li><a href=\"http://haacked.com/archive/2009/04/22/scripted-db-views.aspx\" target=\"_blank\">Use IronRuby to script your MVC Views</a></li>\n	<li><a href=\"http://msdn.krugle.com/\" target=\"_blank\">Search MSDN with Krugle</a></li>\n</ul>\nBloggers you should read / follow if you aren\'t already:\n<ul>\n	<li>Steve Harman -  <a href=\"http://stevenharman.net/\" target=\"_blank\">blog</a> / <a href=\"http://twitter.com/stevenharman\" target=\"_blank\">twitter</a></li>\n	<li>Scott C Reynolds -  <a href=\"http://scottcreynolds.com/\" target=\"_blank\">blog</a> / <a href=\"http://twitter.com/scottcreynolds\" target=\"_blank\">twitter</a></li>\n	<li>Brad Wilson -  <a href=\"http://bradwilson.typepad.com/\" target=\"_blank\">blog</a> / <a href=\"http://twitter.com/bradwilson\" target=\"_blank\">twitter</a></li>\n</ul>', '2011-05-01 02:48:35', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.3ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Link-Post-For-May', '2009-05-31 05:00:00', 'Link Post For May', '<ul>\n	<li><a href=\"http://blog.chromium.org/2009/05/extensions-at-google-io.html\">Google talks about what extensions will look like in Chrome</a></li>\n	<li><a href=\"http://googleblog.blogspot.com/2009/05/went-walkabout-brought-back-google-wave.html\">Google announces Wave</a></li>\n	<li><a href=\"http://bing.com\">Microsoft shows off Bing</a></li>\n	<li><a href=\"http://www.usabilitypost.com/2009/05/29/the-1kb-css-grid-part-1/\">The 1k CSS Grid</a></li>\n	<li><a href=\"http://encosia.com/2009/05/20/automatically-minify-and-combine-javascript-in-visual-studio/\" target=\"_blank\">Automatically Minify and Combine JavaScript code in Visual Studio</a></li>\n	<li><a href=\"http://blogs.msdn.com/webdevtools/archive/2009/04/28/updated-nunit-templates-for-asp-net-mvc-1-0-rtm.aspx\" target=\"_blank\">Visual Studio NUnit Templates for Asp MVC</a></li>\n	<li><a href=\"http://blog.stackoverflow.com/2009/05/the-stack-overflow-trilogy/\" target=\"_blank\">Coming Soon: SuperUser.com</a></li>\n</ul>\nThis months list of devs to follow (<a href=\"http://herdingcode.com\" target=\"_blank\">Herding Code</a> edition):\n<ul>\n	<li>Jon Galloway - <a href=\"http://weblogs.asp.net/jgalloway/\" target=\"_blank\">blog</a> / <a href=\"http://twitter.com/jongalloway\" target=\"_blank\">twitter</a></li>\n	<li>Kevin Dente - <a href=\"http://weblogs.asp.net/kdente/\" target=\"_blank\">blog</a> / <a href=\"http://twitter.com/kevindente\" target=\"_blank\">twitter</a></li>\n	<li>Scott Koon - <a href=\"http://www.lazycoder.com/\" target=\"_blank\">blog</a> / <a href=\"http://twitter.com/Lazycoder\" target=\"_blank\">twitter</a></li>\n	<li>K Scott Allen - <a href=\"http://odetocode.com/blogs/scott/default.aspx\" target=\"_blank\">blog</a> / <a href=\"http://twitter.com/OdeToCode\" target=\"_blank\">twitter</a></li>\n</ul>', '2011-05-01 02:48:35', 0, '')[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.8ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('W-O-M-M-4-Asp-MVC-Route-Attributes', '2009-06-22 05:00:00', 'W.O.M.M. #4 - Asp MVC Route Attributes', '<a href=\"http://www.box.net/shared/1q4bq5scuz\" target=\"_blank\">Download the source code mentioned in this blog post.</a>\n\n<img class=\"alignleft\" title=\"works-on-my-machine-starburst\" src=\"http://wpup.codeimpossible.com/2009/06/works-on-my-machine-starburst.jpg\" alt=\"works-on-my-machine-starburst\" />\n\nA few weeks ago <a href=\"http://itc.conversationsnetwork.org/audio/download/ITC.SO-Episode54-2009.05.20.mp3\">on the StackOverflow podcast</a>, something Jeff said got me thinking. Jeff was discussing how the stackoverflow team implemented their route mappings:\n\n<em>\nThose routes are... the way we implemented them are actually like decorators. Attributes on the methods. <cite>- Jeff Atwood (stackoverflow episode #54)</cite>\n</em>\n\nThis instantly piqued my interest and I completely zoned out for the rest of the podcast: caught up in working out the details of how I could do this for my own Asp.net MVC projects. \n\nComing up with the actual attribute code was easy; writing the code to set up all the Routes using only data defined in by the attribute was tricky.\n\nBeing new to attributes, and reflection in general, it took me a few hours until I had a very basic demo working. However, I was really starting to like where it was going.\n\n<p class=\"right side-note callout-green\">\nAs a side note: There are lot of \"helper\" classes and objects in the route attribute project (it feels cluttered to me) and the reason I did this was to make the code in AssemblyExtensions.GetRoutes() easier to read.\n</p>\n\nAfter a few nights of <a href=\"http://twitter.com/digitalBush/status/2121662803\" target=\"_blank\">Mtn Dew and convenience-store cherry-pie</a> I finished the rough code, tests and demo project (included in this blog post) and I was starting to realize that:\n\n<ol>\n	<li>Using the attributes is more declaritive and it feels cleaner</li>\n	<li>Having your route information right above your actions is incredibly useful</li>\n	<li>I had no more need to switch back and forth between your controller and the Global.asax.cs</li>\n</ol>\n\n<h2>How does it work?</h2>\nAll of the real work for the RouteAttribute is done in the AssemblyExtensions class. This class uses extension methods to augment the System.Reflection.Assembly class with two methods: GetControllers() and GetRoutes().\n\nGetRoutes is the only method that is used by other classes, I made GetControllers public for unit testing.\n\n<h3>GetRoutes()</h3>\nGetRoutes\' first order of business is to make a list of data that it will need to build out all the routes for the assembly it was passed. After thats done GetRoutes will loop through the collected route data, build up each route and add it to the dictionary that will eventually be returned.\n\n<pre class=\"prettyprint\"><code>\nnamespace CodeImpossible.Mvc.Routing\n{\n public static class AssemblyExtensions\n {\n\n public static BindingFlags ActionFlags = \n BindingFlags.Instance | \n BindingFlags.Public |\n BindingFlags.DeclaredOnly;\n\n public static IList&lt;ControllerMetaData&gt; GetControllers(this Assembly assembly)\n {\n var controllers = assembly.GetTypes().ToList().FindAll(type =>\n {\n var isValidController = type.IsClass &&\n type.IsPublic &&\n type.IsSubclassOf&lt;Controller&gt;();\n\n var hasValidActions = type.GetMethods(ActionFlags).ToList().Any(m =>\n {\n var valid = false;\n if (m.ReturnParameter != null && m.ReturnParameter.ParameterType == typeof(ActionResult))\n {\n valid = m.GetAttributesOfType&lt;RouteAttribute&gt;().Count > 0;\n }\n\n return valid;\n });\n\n return isValidController && hasValidActions;\n }).Select&lt;Type, ControllerMetaData&gt;((t) => new ControllerMetaData(t)).ToList();\n\n return controllers;\n }\n\n public static IDictionary&lt;string, Route&gt; GetRoutes(this Assembly assembly)\n {\n var Routes = new Dictionary&lt;string, Route&gt;();\n\n var data = (from c in assembly.GetControllers()\n from a in c.GetActions()\n from r in a.Data\n select new\n {\n ControllerName = c.Name, \n ActionName = a.Name, \n RouteData = r, \n RouteParams = a.Params\n }).ToList();\n\n foreach (var r in data)\n {\n var route = new Route(r.RouteData.RoutePath, new MvcRouteHandler());\n route.Constraints = new RouteValueDictionary();\n route.Defaults = new RouteValueDictionary(new { \n controller = r.ControllerName, \n action = r.ActionName \n });\n\n if (r.RouteData.RequireRouteParams && r.RouteParams.Count() == 0)\n {\n throw new MissingRouteParameterException(\"Unknown\", r.RouteData.RoutePath);\n }\n\n var missingParams = new List&lt;ParameterMetaData&gt;();\n\n if (r.RouteData.RequireRouteParams)\n {\n missingParams = (from p in r.RouteParams\n where r.RouteData.RoutePath.IndexOf(\"{\" + p.Name + \"}\") == -1\n select p).ToList();\n }\n\n if (missingParams.Count > 0)\n {\n var param = missingParams.First();\n throw new MissingRouteParameterException(param.Name, r.RouteData.RoutePath);\n }\n\n foreach (var param in r.RouteParams)\n {\n if (param.Data != null)\n {\n if (param.Data.DefaultValue != null)\n {\n route.Defaults.Add(param.Name, param.Data.DefaultValue);\n }\n\n if (param.Data.Constraint != null)\n {\n route.Constraints.Add(param.Name, param.Data.Constraint);\n }\n }\n }\n\n Routes.Add(r.RouteData.Name ?? r.RouteData.RoutePath, route);\n }\n\n return Routes;\n }\n }\n}\n</code></pre>\n\n<h2>Getting the Routes into the RouteTable</h2>\nSlapping route attributes onto your classes and methods is all well and good but it doesn\'t mean anything unless we can get those routes into the RouteTable object easliy. Originally I had the code to add the routes looking something like\n<pre class=\"prettyprint\"><code>\nvar routes = Assembly.GetCurrentExecutingAssembly().GetRoutes();\n\nroutes.ForEach(r => RouteTable.Add(r));\n</code></pre>\n\nThis, although pretty easy, wasn\'t as readible as I wanted. So I added some extension methods to the RouteTable class:\n<pre class=\"prettyprint\"><code>\nRouteTable.Routes.IncludeRoutesFromAssembly();\n</code></pre>\n\nI think both of these are much clearer than doing:\n<pre class=\"prettyprint\"><code>\nRouteTable.Routes.MapRoute(\"Root\",\n \"\",\n new { controller = \"Test\", action = \"GetItem\", id = 1 });\n\nRouteTable.Routes.MapRoute(\"Search\",\n \"Search/{id}\",\n new { controller = \"Test\", action = \"Search\", id = 1 });\n//.. SNIP ...\n</code></pre>\n\n<h2>Using the RouteAttribute and RouteParamAttribute</h2>\nIn the controller \"TestController\" below there are three actions: Index, FindByText, and GetItem. Using the RouteAttribute and RouteParamAttribute makes it pretty clear that the routes for FindByText and GetItem are the same but use different RouteContraints. \n\nSo a request for /Test/Search/Hello will go to FindByText while /Test/Search/1 will go to GetItem. Also notice how GetItem has a default value of 2 for the id argument.\n<pre class=\"prettyprint\"><code>\npublic class TestController : Controller\n{\n\n [Route(RoutePath = \"Test\")]\n public ActionResult Index()\n {\n\n return View();\n }\n\n [Route(RoutePath = \"Test/Search/{query}\")]\n public ActionResult FindByText(\n [RouteParam(Constraint=\"[a-zA-Z]{1,}\")]\n string query)\n {\n\n return View();\n }\n\n [Route(RoutePath = \"Test/Search/{id}\")]\n public virtual ActionResult GetItem(\n [RouteParam(Constraint=@\"\\d{1,}\", DefaultValue=2)]\n int id)\n {\n\n return View();\n }\n}</code></pre>\nThere is support for binding multiple routes to the same action; just add another Route attribute:\n<pre class=\"prettyprint\"><code>\n[Route(\"Products/Search/{id}\")]\n[Route(\"Products/{id}\")]\npublic ActionResult GetProductById(int id)\n{\n return View();\n}\n</code></pre>\n\n<h2>Downsides or things I haven\'t gotten to yet</h2>\nJust some gotchas that I think people might raise issue with.\n\n<strong>All of your controllers must inherit from the System.Web.Mvc.Controller class</strong>\nThis isn\'t really a big deal because if you are using Asp.net MVC then you really should inherit from the Controller class, but for those of you using FubuMVC or another MVC framework this should be easy to change.\n\n<strong>Attributes can be ugly</strong>\nI know a few people out there are against attributes but I think that this is a more than acceptable use because it made the code much easier to understand.\n\n<strong>Reflection can be slow</strong>\nHonestly, when I first started working on this demo I was sort of turned off by the use of Reflection myself. After weighing the possible performance loss against the gains in both readability and maintenance I decided this was definitely worth it. I haven\'t performance tested this code so, as always YMMV.\n\nAs always, if I screwed up or there is a better way to do this, please let me know in the comments.\n\n<a href=\"http://www.box.net/shared/1q4bq5scuz\" target=\"_blank\">Download the source code mentioned in this blog post.</a>', '2011-05-01 02:48:35', 0, '')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Link-post-for-June', '2009-07-02 05:00:00', 'Link post for June', '<ul>\n	<li><a href=\"http://www.jankoatwarpspeed.com/examples/AdvancedDocking/#\" target=\"_blank\">jQuery Docking</a></li>\n <li><a href=\"http://jsbeautifier.org/\" target=\"_blank\">Javascript Beautifier</a></li>\n <li><a href=\"http://code.google.com/p/google-diff-match-patch/\">Google Diff-Match-Patch library ported to C#</a></li>\n</ul>\n\nThis months list of devs to follow (the GAC pack edition)\n\n<ul>\n <li>Chad Moran <a href=\"http://www.chadmoran.com/\">blog</a> / <a href=\"http://twitter.com/chadmoran\">twitter</a></li>\n <li>Scott C Reynolds <a href=\"http://www.scottcreynolds.com/\">blog</a> / <a href=\"http://twitter.com/scottcreynolds\">twitter</a></li>\n <li>Jeremy D Miller <a href=\"http://codebetter.com/blogs/jeremy.miller/\">blog</a> / <a href=\"http://twitter.com/jeremydmiller\">twitter</a></li>\n <li>Sara Chipps <a href=\"http://girldeveloper.com/\">blog</a> / <a href=\"http://twitter.com/SaraJChipps\">twitter</a></li>\n <li>Scott Galloway <a href=\"http://www.mostlylucid.net/\">blog</a> / <a href=\"http://twitter.com/scottgal\">twitter</a></li>\n <li>Erik Porter <a href=\"http://erikporter.com/\">blog</a> / <a href=\"http://twitter.com/humancompiler\">twitter</a></li>\n <li>Tim Barcz <a href=\"http://devlicio.us/blogs/tim_barcz/\">blog</a> / <a href=\"http://twitter.com/timbarcz\">twitter</a></li>\n <li>Tobin Titus <a href=\"http://www.tobint.com/\">blog</a> / <a href=\"http://twitter.com/tobint\">twitter</a></li>\n</ul>', '2011-05-01 02:48:35', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (1.3ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Tracking-Net-Service-Requests-in-Fiddler', '2009-08-17 05:00:00', 'Tracking .Net Service Requests in Fiddler', 'Earlier today I had to debug a function in our code that was calling an external webservice at a clients\' site. The webservice returns a list of items and the code on our end is supposed to place them in ascending order based on each items Order property.\n\nThe client pointed that the our order wasn\'t matching up with what they were seeing internally so I spoke with their developer who suggested that we make sure that the request wasn\'t being cached on my machine.\n\nI opened up Fiddler locally and was surprised to see that the none of the request/response data for the connection to the webservice was showing up. \n\nFiddler, for those that don\'t know is a really excellent Http tracing application that allows you to see what kind of http traffic is going in and out over your network connection. You can <a href=\"http://www.fiddler2.com/fiddler2/\">download fiddler here</a>.\n\nThankfully, Fiddler runs a simple proxy service which you can point your service requests to in .net using:\n\n<pre class=\"prettyprint\"><code>\nif (System.Environment.MachineName.ToLower().Equals(\"MyMachineName\"))\n{\n service.Proxy = new System.Net.WebProxy(\"http://localhost:8888\");\n}\n</code></pre>\n\nAfter adding that code we were off and debugging our .Net service requests in Fiddler!', '2011-05-01 02:48:35', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.3ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('W-O-M-M-5-Project-Euler-Problem-2', '2009-09-11 05:00:00', 'W.O.M.M. #5 Project Euler - Problem 2', '<img class=\"alignleft\" title=\"works-on-my-machine-starburst\" src=\"http://wpup.codeimpossible.com/2009/06/works-on-my-machine-starburst.jpg\" alt=\"works-on-my-machine-starburst\" />\n\n<a href=\"http://projecteuler.net/\">Project Euler</a> is an awesome website that I found out about a while back via <a href=\"http://stackoverflow.com/questions/4002/code-katas\">this question on StackOverflow</a>. Basically, it\'s a website that poses a ton of programmer related challenges and it keeps track of the problems that you solve.\n\nThe problems start out relatively easy (Add all the natural numbers below one thousand that are multiples of 3 or 5.) and progress all the way to insane (Caradano Triplets and Covex Holes).\n\nI\'m on the easy side, I just started working through them tonight and thought it would be cool to post how I build the solution to each problem as I complete them.\n\n<a href=\"http://projecteuler.net/index.php?section=problems&id=2\">Problem 2</a> is pretty easy:\n\n<i>\"Find the sum of all the even-valued terms in the Fibonacci sequence which do not exceed four million.\"</i>\n\nSo first things first, I\'ll need to pick a language to use to solve this. I chose javascript simply because it was something I knew I could get running pretty quickly. \n\nNext I\'ll need some variables. (note: if you\'re not familiar with Fibonacci numbers <a href=\"http://en.wikipedia.org/wiki/Fibonacci_number\">Wikipedia has an awesome article on them</a>.)\n\n<pre><code class=\"prettyprint\">\nvar start = 1, end = 4000000, current = 1, previous = 1, sum = 0, temp = 0;\n</code></pre>\n\nThat should do. I\'ve got my start variable (dropping the 0 in favor of more readable code), my end counter, and my \"where-am-i\" variables: current, previous, temp and my sum variable.\n\nObviously we\'ll need some kind of loop. How about a while loop?\n\n<pre class=\"prettyprint\"><code>\nwhile( current <= end )\n{\n	\n}\n</code></pre>\n\nCool. Now when the loop is running I\'ll need a way to keep track of the current value, the previous value and I need to add the current value to the sum. So....\n\n<pre class=\"prettyprint\"><code>\nwhile( current <= end )\n{\n temp = current;\n current = current + previous;\n sum += current;	\n previous = temp;\n}\n</code></pre>\n\nAnd there we hav... Oh Wait!\n\nI overlooked a pretty important part of the problem description: <b><i>\"sum of all the even-valued terms\"</i></b>!!!\n\nSo given this new(ish) piece of info my solution end sup being:\n\n<pre class=\"prettyprint\"><code>\nvar start = 1, end = 4000000, current = 1, previous = 1, sum = 0, temp = 0;\n\nwhile( current <= end )\n{\n	temp = current;\n	current = current + previous;\n	\n	if( current%2 == 0 )\n		sum += current;\n	\n	previous = temp;\n}\n\nalert(sum);\n</code></pre>', '2011-05-01 02:48:35', 0, '')[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Dear-Sql-management-studio-just-let-me-save-my-database-table-', '2009-09-16 05:00:00', 'Dear Sql management studio, just let me save my database table!!', 'If you\'re like me, you recently upgraded to Sql Server 2008 (or just installed the Management Studio). If you\'re really like me you found the \"Saving changes is not permitted\" dialog that pops up every time you try to save a modified table annoying. \n\nYou may not have found it annoying enough to investigate but I sure did. I don\'t remember Management Studio 2005 complaining when I changed a table and saved it. Why the change in 2008?\n\nWell, anyway, here\'s your chance to get rid of that dialog once and for all.\n\nIn Sql Management Studio, go to <b>Tools</b> -> <b>Options</b>, expand down the <b>Designers</b> node, and select <b>Table and Database Designers</b>. In the <b>Table Options</b> section uncheck <b>Prevent saving changes that require table re-creation</b> and you\'re done! \n\nYou can now change your database tables hassle free!', '2011-05-01 02:48:36', 0, '')[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('The-Jsoq-Console', '2009-11-14 06:00:00', 'The Jsoq Console', 'During <a href=\"http://codeimpossible.com/2009/02/10/introducing-the-javascript-object-query-library\">the first round of development for JSOQ</a> I needed a faster way to test than unit-tests alone could provide. What I needed was a dirt-simple page that I could run in a browser, enter some JavaScript code, click a button and see it execute. \n\nI built the initial JSOQ Console (which is still included with the JSOQ source code) in about 20 minutes and it increased my productivity by 10x.\n\nIt was much faster to test JSOQ functions with the JSOQ Console than it had been with unit-tests. As a result I was able to prototype new functionality in about 1/2 the time.\n\nI\'ve finally moved <a href=\"http://codeimpossible.com/jsoq\">v0.2 of the Jsoq Console</a> to my blog here so you can use it to quickly test out your own JavaScript code!\n\nHow it works is pretty straight forward. If you\'ve got a snippet of JavaScript, be it jQuery (for the moment jQuery is the only external library that is supported but that will change soon), JSOQ or any other javascript code, you can run it with the JSOQ Console.\n\nJust navigate to <a href=\"http://tinyurl.com/jsoqconsole\">http://tinyurl.com/jsoqconsole</a> or <a href=\"http://codeimpossible.com/jsoq\">http://codeimpossible.com/jsoq</a> for those of you that like to type, paste your code into the textarea at the top of the page, press \"Run\" and your code will run!\n\nSo enjoy! If you get confused there are also samples that will show you how to use the more \"advanced\" features. Also, drop a comment or share the console with others if you thought it was useful!', '2011-05-01 02:48:36', 0, '')[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('W-O-M-M-Project-Euler-3', '2009-11-25 06:00:00', 'W.O.M.M. Project Euler #3', '<img class=\"alignleft\" title=\"works-on-my-machine-starburst\" src=\"http://codeimpossible.com/wp-content/uploads/2009/06/works-on-my-machine-starburst.jpg\" alt=\"works-on-my-machine-starburst\" />\n\nHere we are with another excellent installment in the \"Works On My Machine\" series where I post some code, some thoughts and hopefully show you something interesting/cool/new.\n\nToday I\'m going to talk briefly about Project Euler problem #3. Problem 3 asks you to find the largest <a href=\"http://en.wikipedia.org/wiki/Prime_factor\">prime factor</a> of the number 600,851,475,143.\n\nMy solution is pretty simple but it works:\n<pre class=\"prettyprint\"><code>\nvar getLargestPrimeFactor = function(num)\n{\n var factors = [];\n for ( var f = 2; f &lt; num; f++ )\n {\n if( num%f == 0 )\n {\n factors.push(f);\n num = num /f;\n }\n }\n factors.push(num);\n return factors[factors.length-1];\n};\n\nalert( getLargestPrimeFactor(600851475143));\n</code></pre>\n<a title=\"Try this code!\" href=\"http://beta.jsvudo.com/76cc38\" target=\"_blank\">Try this code!</a>\n\nYou may have noticed that there isn\'t a check for a factors <del>optimus</del> primeness anywhere in there.\n\nThats because the <code>getLargestPrimeFactor()</code> function is dividing the number by it\'s smallest factor, and the smallest factor for any number is always prime so when we run out of factors we\'ve got the largest prime factor. Yeah, that\'s pretth cool IMO.\n\nI read the discussion threads for problem 3 after I solved it and I was surprised that hardly anyone removed the prime checks from their code.\n\nSo, problem 3 is in the bag and I feel pretty good about coming up with the prime check optimization (or lack thereof). A small bit of proof that I know what I\'m doing. Sometimes :D', '2011-05-01 02:48:36', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('JavaScript-Performance-Re-match', '2009-12-02 06:00:00', 'JavaScript Performance Re-match', 'Back in 2007 <a href=\"http://codinghorror.com\" title=\"Jeff Atwood\'s blog\">Jeff Atwood</a> ran the top 4 web browsers through the <a href=\"http://www2.webkit.org/perf/sunspider-0.9/sunspider.html\" title=\"SunSpider JavaScript Benchmark\">SunSpider JavaScript Benchmark</a> and <a href=\"http://www.codinghorror.com/blog/archives/001023.html\" title=\"The Great Browser JavaScript Showdown\">posted his findings</a>. It\'s been close to 2 years since then and I was curious to see how FireFox 3.5, IE8, IE7 (in Compatibility Mode) and Google Chrome 4.0.249.11 would fair. \n\nSo I did pretty much the same thing Jeff did and here is what I found:\n\n<img src=\"http://codeimpossible.com/wp-content/uploads/2009/12/JavaScript-Performance.png\" alt=\"JavaScript Performance Graph\" title=\"JavaScript Performance Graph\" class=\"alignnone size-medium wp-image-704\" />\n\n<small><em>* System specs: Windows 7 64-bit on a Dual-Core 2.53ghz CPU with 4gb of RAM with no browser extensions</em></small>\n\n<ol>\n<li>Chrome kicks some serious butt over everyone else with <strong>the entire test suite running to completion in under 1 second!!</strong></li>\n<li>FireFox 3.5 has some serious improvements coming in at just over 1.5 seconds total, which is about 1/10 the time it took FireFox 2.0</li>\n<li>Internet Explorer 8 and Internet Explorer 7 (compat mode) are still bringing up the rear but they had a better showing than the 20+ seconds IE7 took when Jeff ran the test</li>\n</ol>\n\n<strong>Surprises?</strong>\nThe only thing I found surprising about the results was that if you removed the string test from both IE runs then IE8 in compatibility mode beats IE8 running normally. That doesn\'t seem right to me and I seriously hope JavaScript performance is something that gets addressed in IE9. And by \"addressed\" I mean \"fixed by replacing Trident with WebKit\".\n\nSo, what do these results <em>actually</em> mean? Well I guess it depends. If you use your browser to read blogs and check your gmail then you shouldn\'t really care about these numbers. However, if you\'re a web developer you should be paying strong attention to these numbers and how far they\'ve come in <em>just 2 years</em>.\n', '2011-05-01 02:48:36', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Wolfram-Alpha-as-a-nutrition-calculator', '2009-12-03 06:00:00', 'Wolfram Alpha as a nutrition calculator', 'Turns out, <a href=\"http://www.wolframalpha.com/\">Wolfram Alpha</a> is really handy if you get curious about how many calories are in the lunch you packed for work. Check it out: \n\n<ul>\n <li><a href=\"http://www.wolframalpha.com/input/?i=1+apple+%2B+1+orange\">1 apple + 1 orange</a></li>\n <li><a href=\"http://www.wolframalpha.com/input/?i=2+slices+of+pepperoni+pizza+%2B+1+orange\">2 slices of pepperoni pizza + 1 orange</a></li>\n <li><a href=\"http://www.wolframalpha.com/input/?i=1+chocolate+chip+cookie+%2B+1+ham+and+cheese+sandwich+%2B+20oz+diet+coke\">1 chocolate chip cookie + 1 ham and cheese sandwich + 20oz diet coke</a></li>\n</ul>\n', '2011-05-01 02:48:36', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Google-DNS-30-seconds-may-save-you-10-or-more', '2009-12-05 06:00:00', 'Google DNS: 30 seconds may save you 10% or more', 'Being an uber geek means many things. Late-night code-a-thons just-because, intense debates about zombies vs. pirates vs ninjas (zombies ftw!) or <a href=\"http://en.wikipedia.org/wiki/Han_shot_first\">Greedo shooting first</a>, and a desire to have everything running as fast and efficiently as possible. \n\nIf you agree with that last sentiment, and you follow everything Google does then you\'re probably wondering if Google\'s new <del datetime=\"2009-12-05T02:57:13+00:00\">plans to eventually dominate the entire internet</del> <a href=\"http://code.google.com/speed/public-dns/\">free domain name server lookup service</a> is going to offer you any performance benefits. Well I was wondering the same thing and here is how I determined that it was a good idea to switch.\n\n<ol>\n	<li><a href=\"http://swmirror.org/drupal/?q=node/93\" target=\"_blank\">Download the DNS Performance Test application</a>, extract the zip archive to a folder on your system and run the executable</li>\n	<li>The app will start and randomize it\'s list of URLs. After this is done just click start and switch to the Stats tab</li>\n	<li>I let the app run for ~500 results to get a good sample of data. After you\'re satisfied with the number of results click the stop button and note the \"Average Query Time\"</li>\n	<li>Follow <a href=\"http://code.google.com/speed/public-dns/docs/using.html\">Googles directions for switching your DNS over</a> and then repeat steps 1-3 above</li>\n</ol>\n\nAfter I did those steps I had an average of 213ms for my ISPs DNS and 190ms for Googles. So in my case Google is definitely faster; a 12% increase in DNS lookup performance. So it looks like I\'ll be switching over. As for you, well, your mileage may vary. \n\nDid you switch to google? Stay with your current provider? Or maybe you went with OpenDNS? Let me know how it worked out for you in the comments.\n\n\n\n\n\n', '2011-05-01 02:48:36', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.8ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Microsoft-Net-Framework-Public-Classes-Data-Dump', '2009-12-08 06:00:00', 'Microsoft .Net Framework Public Classes Data Dump', 'I\'ve wrapped up work on <a href=\"http://codeimpossible.com/jsoq\">v0.4 of the Jsoq Console</a>, and the insanely strenuous release cycle for v0.1 of <a href=\"http://whatdidijusteat.com\">WhatDidIJustEat.com</a> so I\'m starting another side project tonight.\n\nEver been working with a programming language you\'re not 100% familiar with and find yourself wondering:\n\n<blockquote><em>Is this function a built-in function or in some included library?<br />\nWhat assembly is this class in again?<br />\nCan I name my class XXXX without conflicting with another class?<br /></em></blockquote>\n\nI\'ve had these questions recently and found myself annoyed and frustrated to no end (PHP, I\'m looking at you) so I\'ve decided to build a system to keep track of this stuff for me :D. \n\nThe first thing on my list (because it was the easiest) was to do a data dump of all the public classes in the .Net Framework, including the ones in my GAC, and store some metadata for each one in a database table. I\'ve just finished this step and thought that this data might be useful, so I\'m posting it here. \n\nCurrently the fields included in the data dump are:\n\n<code>\n[namespace] = The namespace that the class exists in (ex: System.Collections.Generic)\n[class_name] = The name of the class (ex: StringBuilder)\n[assembly_fullname] = The display name of the assembly (ex: mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089)\n[assembly_file] = The full file path to the assembly (ex: C:\\Windows\\Microsoft.NET\\Framework\\v2.0.50727\\System.dll)\n[framework_name] = The framework that uses this class, for this dump they will all be \'Microsoft .Net\'\n[framework_version] = The framework version that uses this class (ex: v.2.0.50727)\n</code>\n\nThe .sql file takes about 18 seconds to run to completion on my AMD Athlon X2 2.53ghz machine with 4gb of RAM.\n\nIf you\'re curious about how I generated the .sql file, below is the code I used to find all the classes. It\'s not pretty but then again it was just meant to get the data into the database. Just paste the code into a new console app and run it in a command window like so:\n\n<code> [application_name].exe &gt; c:\\classes.sql</code>\n\nOr, you can <a href=\"http://www.box.net/shared/u8vsuy9lz1\">download the .sql file I\'ve generated</a> (it will also create the table you need to store the data).\n\n<pre class=\"prettyprint\"><code>\nstatic void Main(string[] args)\n{\n	var dictionary = new Dictionary<string, string>(){\n		{ \"v2.0.50727\", @\"C:\\Windows\\Microsoft.NET\\Framework\\v2.0.50727\" },\n		{ \"v3.0\", @\"C:\\Windows\\Microsoft.NET\\Framework\\v3.0\" },\n		{ \"v3.5\", @\"C:\\Windows\\Microsoft.NET\\Framework\\v3.5\" },\n		{ \"v???\", @\"c:\\windows\\assembly\\gac\" }\n	};\n\n	var types = new List<Type>();\n\n\n	foreach (var pair in dictionary)\n	{\n		var path = pair.Value;\n\n		var assemblies = Directory.GetFiles(path, \"*.dll\", SearchOption.AllDirectories);\n\n		foreach (string file in assemblies)\n		{\n			try\n			{\n				Assembly asm = Assembly.LoadFile(file);\n\n				foreach (Type t in asm.GetTypes())\n				{\n					if (t.IsPublic)\n					{\n						Console.WriteLine(String.Format(\n							\"INSERT INTO Classes (\" +\n								\"[namespace], \" +\n								\"class_name, \" +\n								\"assembly_fullname, \" +\n								\"assembly_file, \" +\n								\"framework_name, \" +\n								\"framework_version\" +\n							\") \" +\n							\"VALUES (\" +\n								\"\'{0}\', \" +\n								\"\'{1}\', \" +\n								\"\'{2}\', \" +\n								\"\'{3}\', \" +\n								\"\'Microsoft .Net\', \" +\n								\"\'{4}\'\" +\n							\")\",\n							String.IsNullOrEmpty(t.Namespace) ?\n								\"GLOBAL\" :\n								t.Namespace,\n							t.Name\n								.Replace(\"`1\", \"<T>\")\n								.Replace(\"`2\", \"<T1,T2>\")\n								.Replace(\"`3\", \"<T1,T2,T3>\"),\n							t.Assembly.FullName,\n							t.Assembly.Location,\n							pair.Key == \"v???\" ?\n								t.Assembly.GetName().Version.ToString() :\n								pair.Key\n						));\n					}\n				}\n			}\n			catch { }\n		}\n	}\n}\n</code></pre>\n\nIf you found this useful, let me know in the comments!\n', '2011-05-01 02:48:36', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('this-year-new-Year-this-year-Resolutions-', '2010-01-05 06:00:00', 'this.year = new Year(); this.year.Resolutions =', 'I\'ve spent the last few days going over what I want to accomplish this year, what I think I definitely could do, what might challenge me and what is just this side of impossible. Whenever I\'ve made my resolutions known in the past its always been in a passing conversation with a friend of family member. I never wrote them down or tried to keep track of them once the conversation was over so this year I decided to post them publicly to give me that extra bit of motivation, and also I\'ll be able to check back here throughout the year and see how I\'m measuring up.\n\nThese are in no particular order.\n\n<strong>I need to grow more as a professional.</strong> Last year I went to my first conference (MSDEVCON) and it was a total blast. I met a lot of truly awesome and intelligent people and learned a billion things that I didn\'t know before. After that I attended Stack Overflows Dev Days in Boston and it was the same experience all over again. This year My goal is to start attending more conferences/events (as many as I can afford with time and $$$) to grow myself as a professional.\n\n<strong>Make more mistakes. </strong>I made my fair share of mistakes in 2009 and (more importantly) I learned a lot from them: about myself, my skills, and what I am capable of. I\'m addicted. I\'m going to put myself more out in the open and make some more mistakes so I can learn a lot more in 2010.\n\n<strong>I need to lose at least 25lbs this year.</strong> I\'ve let myself go over the past few years and it\'s time to take my health more seriously. 25lbs probably doesn\'t sound like a lot and honestly it\'s a lot less than I need to lose but I\'ve never been good at staying fit so hopefully I achieve this goal relatively early and am able to keep the weight off the rest of the year.\n\n<strong>No more sugary drinks, especially soda.</strong> I\'m looking at you Mt. Dew. I\'m not sure what happened but between the end of the year work rush and the holiday (fr)antics I\'ve been downing soda like it\'s going out of style. Time for that to end.\n\n<strong>Eliminate debt.</strong> This goal is a bit lofty but my goal is to eliminate 80% of all my debts this year. This is going to be a tough one to pull off, what with the recent job change and our new house but it\'s needed.\n\n<strong>Finish </strong><em><strong>something</strong></em><strong>. </strong>I started <a href=\"http://code.google.com/p/myrkat\" target=\"_blank\">way</a> <a href=\"http://code.google.com/p/jsoq\" target=\"_blank\">too</a> <a href=\"http://codeimpossible.com/jsoq\" target=\"_blank\">many</a> <a href=\"http://whatdidijusteat.com\" target=\"_blank\">side</a> projects last year, and I finished... none. Not one project I started in 2009 saw what I would call a 1.0 release. Time to crap or get off the pot. I aim to crap. My goal will be to promote at least 2 of the projects I started in 2009 to a 1.0 release this year.\n\n<strong>More play.</strong> Tamara and I didn\'t get a vacation last year and we are dying for some time away. This is going to be tough with all my debt elimination going on but the more debt I get rid of the more I can save.\n\n<strong>More sleep.</strong> Tamara reminds me all the time how little sleep I get ( about 4-5 hours a night at most ) and it really started to show during the holidays. I simply ran myself into the ground. Time to recharge and see what I can really do.', '2011-05-01 02:48:36', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.4ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Solving-document-ready-is-not-a-function-and-other-problems', '2010-01-13 06:00:00', 'Solving &quot;$(document).ready is not a function&quot; and other problems', 'Has this ever happened to you: you\'ve been working on a customer\'s site, writing some really awesome jQuery flashy, fadey, scrolly, interactivey thing, you deploy it, and everything is awesome. The customer rejoices and the customer\'s customers rejoice. Rejoicing is had by everyone. \n\nAnd then you get an email one day:\n\n<blockquote>\n\"Everything is broken. We\'ve kidnapped your dog. Fix our site or you\'ll never see Spartacus again.\"</blockquote>\n\nAnd before you have time to wonder why you ever named your dog \"Spartacus\" to begin with (i mean <strong>come. on.</strong>), you\'re off in debug hell. You load the site and see all sorts of weird errors:\n\n<code>“$().ready is not a function”</code>\n\n<code>“$(document) doesn’t support this property or method”</code>\n\nOr my personal favorite: \n\n<code>“null is null or not an object”</code>\n\nYou open up FireFox, activate FireBug, load the console, and type “alert($)”, press run, and instead of seeing the expected jQuery function:\n\n<pre class=\"prettyprint\"><code>\nfunction (E, F) {\n return new (o.fn.init)(E, F);\n}\n</code></pre>\n\nYou instead get:\n\n<pre class=\"prettyprint\"><code>\nfunction $(element) {\n if (arguments.length > 1) {\n for (var i = 0, elements = [], length = arguments.length; i < length; i++) {\n elements.push($(arguments[i]));\n }\n return elements;\n }\n if (Object.isString(element)) {\n element = document.getElementById(element);\n }\n return Element.extend(element);\n}\n</code></pre>\n\nOr even:\n\n<pre class=\"prettyprint\"><code>\nfunction $(id) {\n return document.getElementById(id);\n}\n</code></pre>\n\n<strong>DOH!</strong> Looks like another javascript library has been loaded and has overwritten the <code>$()</code> shortcut for jQuery. Woe is I. Why can’t we all just get along?!? \n\nWell, we can’t stop people from including their favorite javascript libraries, but what we can do is prevent our code from suffering as a result. We’ll need a nice, big beefy, bodyguard to make sure our code isn’t messed with while it’s out clubbing with Prototype, Scriptaculous or even MooTools (who invited <em>him</em>??!?).\n\nHere’s what our bodyguard function will look like\n\n<pre class=\"prettyprint\"><code>\n( function($) {\n\n} ) ( jQuery );\n</code></pre>\n\nSo what this does is call our anonymous function and pass the <code>jQuery</code> object. This will scope ‘$’ to within our little function so we won’t step on anyone else’s toes (and they won’t bump into us while we’re on the dance floor and spill our drink everywhere). Okay, I think I\'ve taken the clubbing metaphor far enough.\n\nBasically this will allow our code to run and use the <code>$</code> shortcut for JQuery as if it were loaded without any of these other libraries on the page. \n\nHere is what the completed code would look like:\n\n<pre class=\"prettyprint\"><code>\n&lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.4.1/jquery.min.js\" type=\"text/javascript\"&gt;\n&lt;/script&gt;\n\n&lt;script src=\"http://ajax.googleapis.com/ajax/libs/prototype/1.6.1.0/prototype.js\" type=\"text/javascript\">\n&lt;/script&gt;\n&lt;script src=\"http://ajax.googleapis.com/ajax/libs/scriptaculous/1.8.3/scriptaculous.js\" type=\"text/javascript\">\n&lt;/script&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n( function($) {\n // we can now rely on $ within the safety of our “bodyguard” function\n $(document).ready( function() { alert(\"nyah nyah! I’m able to use \'$\'!!!!\"); } );\n} ) ( jQuery );\n\n//this will fail\n$(document).ready( function() { alert(\'fail?\'); } );\n&lt;/script&gt;\n</code></pre>\n\nI love using this simple self-calling anonymous function style when working with jQuery because it saves me from typing <code>jQuery()</code>, which really does look a lot more ugly than using the <code>$()</code> shortcut. It also protects my code from any scoping issues and lets the code function normally when <a href=\"http://docs.jquery.com/Core/jQuery.noConflict\">jQuery is put into no conflict mode</a>. \n\nMy opinion, if you\'re doing work in jQuery on sites that you don\'t control 100%, you should be using this method to protect your code and your clients.\n\n<strong>Updated: changed link for jquery to use 1.4.1 at the google CDN (tsk, tsk, tsk I was using the googlecode.com link)</strong>', '2011-05-01 02:48:36', 0, '')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Using-jQuery-on-an-Iframe', '2010-03-04 06:00:00', 'Using jQuery on an Iframe', 'The other day I had to alter the stylesheets in a child IFrame when a user selected an item from a drop-down. My first draft was pretty ugly, it ivolved getting the DOM from the child IFrame (by getting it\'s <a href=\"http://www-archive.mozilla.org/docs/dom/domref/dom_frame_ref5.html\">contentWindow</a> or <a href=\"http://www-archive.mozilla.org/docs/dom/domref/dom_frame_ref4.html\">contentDocument</a> property) then getting the <head> of the DOM and looping over all the child items... yuck!\n\nI coded up this jQuery extension method which will return a jQuery-wrapped DOM instance for any of the matched IFrames.\n\n<pre class=\"prettyprint\"><code>\n(function($) {\n $.fn.extend({\n dom: function () {\n var $this = $(this);\n var getDom = function(o) {\n if( !o || (!o.contentWindow && !o.contentDocument) ) {\n return null;\n }\n \n var doc = (o.contentWindow || o.contentDocument);\n \n return doc.document || doc;\n };\n \n var dom = getDom($this[0]);\n \n return dom === null ? $this : $(dom);\n }\n });\n})(jQuery);\n</code></pre>\n\nSo with this, getting the styles for a child IFrame is as easy as:\n\n<pre class=\"prettyprint\"><code>\n$(\'iframe\').dom().find(\'head link\').each(function(index, item) {\n alert(item.href);\n});\n</code></pre>\n\n<em>Unfortunately, this code will only work if your IFrame is hosting content that is on the same domain as its parent.</em>', '2011-05-01 02:48:36', 0, '')[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.8ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('W-O-M-M-6-enumerateOver-', '2010-03-07 06:00:00', 'W.O.M.M. #6 - enumerateOver()', '<img class=\"alignleft\" title=\"works-on-my-machine-starburst\" src=\"http://codeimpossible.com/wp-content/uploads/2009/06/works-on-my-machine-starburst.jpg\" alt=\"works-on-my-machine-starburst\" />\n\nI\'ve been focusing more and more on <a href=\"http://bitbucket.org/codeimpossible/jsoq\"> my port of Ling-to-Objects, Jsoq</a> the past few weeks. It\'s still in really early stages and I\'m not quite sure about it\'s actual usefulness but I\'m learning a lot about JavaScript and having a ton of fun along the way!\n\nJsoq deals with arrays a lot. About 95% of it\'s use cases involve either looping through, altering, or creating arrays. Having a ton of <code>for</code> loops in my code just seems so... not right. For loops have always seemed dirty to me. They just aren\'t elegant enough. \n\nHere is your normal, average, everyday <code>for</code> loop in Javascript.\n\n<pre class=\"prettyprint\"><code>\nvar array = \"1,2,3,4,5,6,7,8,9,10\".split(\',\');\n\nfor(var i = -1, l = array.length; ++i &lt; l;) {\n alert(array[i]);\n}\n</code></pre>\n\nThis works. It\'s reliable and gets the message across. But what if we needed to loop over an array and get all the items that matched a condition? Using a <code>for</code> loop the code could look something like:\n\n<pre class=\"prettyprint\"><code>\nvar array = [ 1, 2, 3, 4, 5, 1, 2, 3, 4 ];\nvar results = [];\nvar condition = function(i) { return i%2 == 0; };\n\nfor(var itt = -1, len = array.length; ++itt &lt; len;) {\n	if( condition(array[itt]) ) {\n		results.push(array[itt]);\n	}\n}\n</code></pre>\n\nThis does work, I\'ve written code like this many times before, and while <em>technically</em> there isn\'t anything wrong with it I think there is still room for improvement.\n\nJsoq is going to be handling arrays all over the place so the solution to this problem <em>needs</em> to be simple.\n\nHere\'s what I need:\n<ul>\n	<li>to loop over an entire collection and perform an action on each item.</li>\n	<li>If that action produces a result, the item is to be pushed into an array and returned to after the loop is done</li>.\n	<li>Also: it needs to be readable, someone else coming along should be able to determine what this thing is doing without too much difficulty. So I had my work cut out for me. </li>\n</ul>\n\nA few hours later I had a decent function that I could use to replace a lot of the <code>for</code> loops I had. After some more refactoring I was able to wipe them all out and replace them with calls to <code>enumerateOver()</code>. Here is the latest version from source control:\n\n<pre class=\"prettyprint\"><code>\nfunction enumerateOver(collection, work) {\n	var result = [], val = [];\n	\n	if (isArray(collection)) {\n		try {\n			for (var i = -1, l = collection.length; ++i < l;) {\n				result = work(collection[i], i);\n				if (typeof result !== \"undefined\" && result != null) {\n					val.push(result);\n				}\n			}\n		}catch (e) {\n			if (e != jsoq.$break) throw(e);\n		}\n		\n		if (val.length > 0) {\n			return val;\n		}\n	}else {\n		try {\n			val = work(collection, 0);\n		}\n		catch (e) {\n			if (e != jsoq.$break) throw(e);\n		}\n		if (typeof val !== \'undefined\') {\n			return val;\n		}\n	}\n	return result == null ? [] : result;\n}\n</code></pre>\n\nAnd here is the code to replace the <code>for</code> loops above, re-written to use <code>enumerateOver()</code>\n\n<pre class=\"prettyprint\"><code>\nvar results2 = enumerateOver(array, function(i, c) {\n return i%2 == 0;\n});\n</code></pre>\n\nSo by implmenting this function I was able to come up with a more readable, testable and streamlined codebase. Is this suitable for everyone? Definitely not, but I did it for a few reasons:\n\n<ol>\n	<li>Like I mentioned before. I\'ve never been at ease with <code>for</code> loops and being able to replace them all with calls to a single function was a huge win for me</li>\n	<li>The normal use-case didn\'t fit right. I needed to not only iterate over arrays but also return the results of work performed on those items. Doing this the \"regular\" way just wouldn\'t work (see previous reason)</li>\n	<li>I thought this was a fun problem to solve</li>\n</ol>\n\nIf you have any feedback, good, bad, or indifferent add a comment!', '2011-05-01 02:48:36', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Lessons-Learned', '2010-03-10 06:00:00', 'Lessons Learned', 'lessons learned this morning: \na) Even if it\'s simple code you \"know\" will work you <strong>must</strong> test it. No excuses. \nb) In programming, nothing happens by \"magic\". There is a tangible reason that that thing that should be working isn\'t.\nc) Don\'t assume something couldn\'t be true simply because it doesn\'t make any sense.', '2011-05-01 02:48:36', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('PAX-East-in-Pictures', '2010-04-02 05:00:00', 'PAX East in Pictures', '[gallery link=\"file\" order=\"DESC\"] ', '2011-05-01 02:48:36', 0, '')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Migrating-Asp-net-MVC-Projects-from-MVC-1-0-to-2-0', '2010-04-06 05:00:00', 'Migrating Asp.net MVC Projects from MVC 1.0 to 2.0', 'The<a href=\"http://haacked.com/archive/2010/03/11/aspnet-mvc2-released.aspx\" target=\"_blank\"> Asp.net Mvc 2.0 RTM came out last month</a> and a lot of people are converting their projects over. If you\'re just starting to manually move your projects over then stop what you are doing, <a href=\"http://weblogs.asp.net/leftslipper/archive/2010/03/10/migrating-asp-net-mvc-1-0-applications-to-asp-net-mvc-2-rtm.aspx\" target=\"_blank\">download and run the Mvc Converter</a>. It will save you eons of time and frustration.\n\nIf you are like me, however, and started porting your project over manually and are now knee deep in WTFBBQ sauce then follow the steps below and your project should be up and running in no time.\n\n1. Back up your project. Just in case.\n\n2. Open your project file(s) inside your favorite text editor (one with a decent find/replace system). Open the Find &amp; Replace dialog and find <code>\"603c0e0b-db56-11dc-be95-000d561079b0\"</code>, replacing it with <code>\"F85E285D-A4E0-4152-9332-AB1D724D3325\"</code>. My project turned up 1 result.\n\n3. Open the Web.Config files in the root of the project and the root of the /Views folder. Open the Find &amp; Replace dialog again, this time searching for <code>\"System.Web.Mvc, Version=1.0.0.0\"</code> and replacing it with <code>\"System.Web.Mvc, Version=2.0.0.0\"</code>.\n\n4. Add the following BindingRedirect to the bottom of the root Web.Config, just before the &lt;/Configuration&gt; node.\n\n<pre class=\"prettyprint\"><code>\n&lt;runtime&gt;\n &lt;assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\"&gt;\n &lt;dependentAssembly&gt;\n &lt;assemblyIdentity name=\"System.Web.Mvc\" publicKeyToken=\"31bf3856ad364e35\"/&gt;\n &lt;bindingRedirect oldVersion=\"1.0.0.0\" newVersion=\"2.0.0.0\"/&gt;\n &lt;/dependentAssembly&gt;\n &lt;/assemblyBinding&gt;\n&lt;/runtime&gt;\n</code></pre>\n\n5. Open the solution in Visual Studio and replace the references to System.Web.Mvc 1.0 with the 2.0 assembly.\n6. Finally, and only if you really need them, open a new MVC 2.0 project and copy all the files in the /Scripts folder to your project. \n\nEnjoy your freshly migrated project!', '2011-05-01 02:48:36', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Comments-stink-', '2010-07-16 05:00:00', 'Comments stink!', 'I\'ve been thinking about the whole <a href=\"http://memeagora.blogspot.com/2008/11/comments-code-smell.html\" target=\"_blank\">Comments-as-a-code-smell argument</a> for a very long time. When I first heard this idea, I was in the comments are definitely needed side of the argument.\n\n<em>\"Who could hate comments so much that they would label them as a code smell?\"</em> I thought.\n\nWell, I had an epiphany the other day.\n\n<strong>I\'ve never seen a block of code that actually needed a comment. Ever.</strong>\n\nIf you have a section of code that feels too complex, instead of adding a comment do any/all of the following and you can, in almost every case, reduce the need for comments by 100%:\n<ol>\n	<li>add a sourcecontrol commit comment</li>\n	<li>do a simple refactor (<a href=\"http://www.industriallogic.com/xp/refactoring/composeMethod.html\" target=\"_blank\">Compose Method</a> ftw people),</li>\n	<li>use more descriptive variable/function/class/whatever names.</li>\n</ol>\nIf you do all of these things and the code you are working on still seems too complex, you may have bigger problems with your overall architecture/design and adding a comment isn\'t going to help. In this case it\'s time to go back to the drawing board.\n\nAlso, everytime you commit a changeset into sourcecontrol that contains a section of code commented out god kills a kitten. Please think of the kittens.', '2011-05-01 02:48:36', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.3ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Installing-Assemblies-to-GAC-with-PowerShell', '2010-07-21 05:00:00', 'Installing Assemblies to GAC with PowerShell', 'I just finished my first ever powershell script and I\'m pretty proud of it - even though <a href=\"http://weblogs.asp.net/adweigert/archive/2008/10/31/powershell-install-gac-gacutil-for-powershell.aspx\">I did borrow a good portion of it</a>.\n\nWe\'re starting a pretty long-term project at work - it\'s scheduled for a final deliverable date set in July of 2011 - and with our small(er) dev team I\'m pretty certain more hands than my own will be working on this over the course of the entire project.\n\nThis new project is going to have a few external dependencies (Moq, StructureMap, possibly MvcTurbine) and I wanted a quicker and friendlier way for a new developer coming into the project to get up-to-speed environment wise. I originally started with a batch file. I know, I know. It\'s my comfort zone. Too many years of not having something like powershell at my finger-tips.\n\nAfter about 10 minutes of fighting with batch language limitations <a href=\"http://twitter.com/codeimpossible/statuses/19095201324\">I decided to move on and try my hand at using powershell</a> to help automate the developer environment setup.\n\nSo I borrowed some code from Adam Weigerts blog to bypass the need for the gacutil (and the .Net Framework SDK, a whopping 100mb download!). Once I had this, I just had to come up with the code to recurse over all the .dll files that are stored in sub-folders within a \"Source Dependencies\" folder. \n\nFrom concept to finish I think this took me about an hour to come up with, I\'m no programming super soldier so anyone who is doing windows development should be able to throw together a powershell script to automate their common, repetitive and annoying tasks.\n\nThe code is included below, I\'ll be adding to it as the project goes on, pushing in some other environment setup features (dev db creation/sync would be the next feature for this). Now that I\'ve taken a swing at PowerShell I\'m really happy with it and I really am sorry it took so long for me to use it.\n\nIf you\'re still automating things with Batch files, you\'re missing out. Big.\n\n<pre><code class=\"prettyprint\" style=\"width:560px; overflow: auto; display: block;\">\nBEGIN {\n Clear-Host\n $ErrorActionPreference = \"Stop\"\n \n if ( $null -eq ([AppDomain]::CurrentDomain.GetAssemblies() |? { $_.FullName -eq \"System.EnterpriseServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" }) ) {\n [System.Reflection.Assembly]::Load(\"System.EnterpriseServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\") | Out-Null\n }\n\n $publish = New-Object System.EnterpriseServices.Internal.Publish\n}\n \nPROCESS {\n $files=get-childitem \".\\Source Dependencies\" *.dll -rec|where-object {!($_.psiscontainer)}\n foreach( $file in $files ) {\n $assembly = $file.fullname \n if ( -not (Test-Path $assembly -type Leaf) ) {\n throw \"The assembly \'$assembly\' does not exist.\"\n }\n \n if ( [System.Reflection.Assembly]::LoadFile( $assembly ).GetName().GetPublicKey().Length -eq 0 ) {\n throw \"The assembly \'$assembly\' must be strongly signed.\"\n }\n \n Write-Output \"Installing: $assembly\"\n \n $publish.GacInstall( $assembly )\n }\n}\n</code></pre>', '2011-05-01 02:48:36', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Get-databases-in-sql-backup-plan-with-sql', '2010-07-22 05:00:00', 'Get databases in sql backup plan with sql', 'I helped Tamara figure this out the other day and thought others might want to know. She needed to know which databases would be backed up when a given backup plan was executed. The server was a sql 2000 server and the machine she was using didn\'t have enterprise manager installed.\n\n<pre style=\"display: block; overflow: auto: width: 550px;\"><code class=\"prettyprint\">\n SELECT \n *\n FROM \n msdb.dbo.sysdbmaintplans\n LEFT JOIN msdb.dbo.sysdbmaintplan_databases\n ON msdb.dbo.sysdbmaintplan_databases.plan_id = msdb.dbo.sysdbmaintplans.plan_id\n WHERE\n msdb.dbo.sysdbmaintplans.plan_name = \'PUT YOUR PLAN NAME HERE\'\n</code></pre>\n\n\nSo if anyone out there finds themselves needing to know which databases will be backed up by a given backup plan, and for whatever reason you don\'t have Sql Management Studio or Enterprise Manager then this should work.', '2011-05-01 02:48:36', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (1.0ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Test-that-CouchDB-is-running-in-PowerShell', '2010-08-04 05:00:00', 'Test that CouchDB is running in PowerShell', 'I mentioned previously that I am working on <a href=\"http://codeimpossible.com/2010/07/21/installing-assemblies-to-gac-with-powershell/\" target=\"_blank\">a dev environment setup script</a> for a long-term project at work. The goal of this script is to get a developer\'s machine ready to work on the project, installing dependencies, creating dev/test databases, etc.\n\nSince our project will be using <a href=\"http://couchdb.apache.org/\" target=\"_blank\">CouchDB</a> my script should create/update a few databases when it is run (this part is coming soon!). But before that can happen the script needs to check for the presence of an active CouchDB instance. \n\nSince CouchDB has a completely HTTP-based API we can test for its existence by opening up our <a href=\"http://www.google.com/chrome\" target=\"_blank\">favorite browser</a> and visiting <a href=\"http://localhost:5984\" target=\"_blank\">http://localhost:5984</a>. This gives us:\n\n<pre>\n{\"couchdb\":\"Welcome\",\"version\":\"1.0.0\"}\n</pre>\n\nSo my script is going to need to do an HTTP GET on the url above and compare it to the <a href=\"http://en.wikipedia.org/wiki/Json\" target=\"_blank\">JSON</a> response that CouchDB should send back. Now normally, I might want this check to be less strict, maybe only checking that <code>{\"couchdb\":\"Welcome\"</code> was returned, but in this case I want the specific version number as well so this check will be fine going forward.\n\nIf I don\'t get the response I expect I\'ll want the script to fail out immediately; No sense in continuing with the environment setup if one of the key components is missing!\n\n<pre style=\"\"><code class=\"prettyprint\">\n$futonurl = \"http://localhost:5984\"\n$resp_couchdb = [string](new-object System.Net.WebClient).DownloadString($futonurl)\n\nif( $resp_couchdb.Trim() -eq \"{\"\"couchdb\"\":\"\"Welcome\"\",\"\"version\"\":\"\"1.0.0\"\"}\" ) {\n Write-Output \"CouchDB 1.0 Found!\"\n # here we can continue setting up our test/dev document stores\n} else {\n throw(\"CouchDB v1.0 must be installed and running to continue...\")\n}\n</code></pre>\n\nAlthought this script is pretty simple, it shows that PowerShell is not just MS-Batch 2.0. PowerShell lets me leverage .Net to do heavy lifting from the command-line that I wouldn\'t be able to do without creating a few console applications.', '2011-05-01 02:48:36', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Spot-the-bug', '2010-08-27 05:00:00', 'Spot the bug', 'What is wrong with the code below?\n \nSafe Assumptions:\n<ol>\n	<li><code>_dictionary</code> is a valid non-null <code>Dictionary&lt;object,object&gt;</code></li>\n	<li><code>_dictionary</code> contains items that will match the passed expression</li>\n	<li>This code compiles with no warnings or errors</li>\n	<li>This code <strong>will</strong> throw an exception at runtime.</li>\n</ol>\n\n<pre style=\"display: block; overflow: auto: width: 550px;\"><code class=\"prettyprint\">\npublic IList&lt;TModel&gt; GetAllByCriteria&lt;TModel&gt; ( Expression&lt;Func&lt;TModel, bool&gt;&gt; criteria )\n{\n Func&lt;TModel, bool&gt; action = criteria.Compile();\n return _dictionary.Where( pair =&gt; \n action( (TModel)pair.Value ) ).Cast&lt;TModel&gt;().ToList();\n}\n</code></pre>\n \nIf you don’t see it right away then you’re not alone. I spent a while debugging to catch this. If you do see it right away then pat yourself on the back.', '2011-05-01 02:48:36', 0, '')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Spot-the-bug-2', '2010-09-02 05:00:00', 'Spot the bug #2', 'I came across this issue just at quitting time yesterday and was blown away when I realized what was happening.\n\n<strong>The UsersController Index View (pre submit)</strong>\n<a href=\"http://codeimpossible.com/wp-content/uploads/2010/08/listbox_post_problem.png\"><img src=\"http://codeimpossible.com/wp-content/uploads/2010/08/listbox_post_problem.png\" alt=\"\" title=\"listbox_post_problem\" width=\"556\" height=\"616\" class=\"aligncenter size-full wp-image-924\" /></a>\n\n<strong>The UsersController Code</strong>\n<code><pre class=\"prettyprint\" style=\"border: none;\">\n public class UsersController : Controller\n {\n\n List&lt;string&gt; users = new List&lt;string&gt; ()\n {\n \"mace.windu\",\n \"yoda\",\n \"senator.amidala\",\n \"anakin.skywalker\",\n \"obiwan.kenobi\"\n };\n\n public ActionResult Index()\n {\n return View( users );\n }\n\n\n [HttpPost]\n public ActionResult Delete ( string[] userstodelete )\n {\n\n if ( userstodelete == null || userstodelete.Length == 0 )\n {\n throw new ArgumentException ( \n \"argument must contain at least one entry\", \n \"userstodelete\" );\n }\n\n // code could go here to\n // call out to some service to\n // delete these users\n\n TempData[\"deletedUsers\"] = userstodelete;\n\n foreach ( var user in userstodelete )\n users.Remove ( user );\n\n return View (\"Index\", users);\n }\n }\n</pre></code>\n\n<strong>Problem</strong>\nLooks like it should all work perfectly right? That\'s what I thought. However, clicking \"Delete Users\" will only \"delete\" our pre-darth user \"anakin.skywalker\".\n\nWhy?\n\n<em>Hint: Everything here is <a href=\"http://www.w3.org/TR/html401/interact/forms.html#edef-SELECT\" target=\"_blank\">working exactly as it should.</a></em>', '2011-05-01 02:48:36', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Code-comments-hurt-instead-of-help', '2010-09-09 05:00:00', 'Code comments hurt instead of help', 'Remember when I said \"<a href=\"http://codeimpossible.com/2010/07/16/comments-stink/\">I’ve never seen a block of code that actually needed a comment. Ever.</a>\"? \n\nHere\'s a great example of what I\'m talking about:\n\n<a href=\"http://codeimpossible.com/wp-content/uploads/2010/09/comments_are_useless.png\"><img src=\"http://codeimpossible.com/wp-content/uploads/2010/09/comments_are_useless.png\" alt=\"\" title=\"comments_are_useless\" width=\"599\" height=\"218\" class=\"aligncenter size-full wp-image-947\" /></a>\n\nThere isn\'t one comment in there that adds value to this code. In fact there are two that <strong>are completely and utterly incorrect</strong> about what this code does.\n\n', '2011-05-01 02:48:36', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Spot-the-bug-3', '2010-09-10 05:00:00', 'Spot the bug #3', 'Two coworkers and I fought with this for a bit earlier this week. Facing a nearing deadline and since the code only needed to run once to populate a database table, we ended up using the ugly method.\n\nI made an example of the piece of code that was giving us trouble. Why will <code>coordinates</code> always be null yet <code>coordinatesUgly</code> always gets the correct node?\n\n<code><pre class=\"prettyprint\" style=\"border: none;\">\nclass Program\n{\n\n private static string xml = @\"&lt;?xml version=\"\"1.0\"\" encoding=\"\"UTF-8\"\"?&gt; \n&lt;kml xmlns=\"\"http://earth.google.com/kml/2.0\"\"&gt;\n &lt;Document&gt;\n &lt;Placemark&gt;\n &lt;name&gt;my office&lt;/name&gt;\n &lt;LookAt&gt;\n &lt;longitude&gt;8.853193712983327&lt;/longitude&gt;\n &lt;latitude&gt;53.10919982492059&lt;/latitude&gt;\n &lt;range&gt;500000&lt;/range&gt;&lt;tilt&gt;0&lt;/tilt&gt;&lt;heading&gt;0&lt;/heading&gt;\n &lt;/LookAt&gt;\n &lt;Point&gt;\n &lt;coordinates&gt;8.853193712983327,53.10919982492059,10&lt;/coordinates&gt;\n &lt;/Point&gt;\n &lt;/Placemark&gt;\n &lt;/Document&gt;\n&lt;/kml&gt;\n\";\n\n static void Main ( string[] args )\n {\n var xdoc = new XmlDocument ();\n xdoc.LoadXml ( xml );\n\n var coordinatesUgly = xdoc.DocumentElement\n .FirstChild\n .FirstChild\n .ChildNodes[2]\n .FirstChild;\n\n var coordinates = xdoc.SelectSingleNode ( \"//coordinates\" );\n\n Console.WriteLine ( \"The Ugly Way: \" + coordinatesUgly.InnerText );\n Console.WriteLine ( \"With Xpath: \" + (\n coordinates == null ? \"NULL\" : coordinates.InnerText) );\n\n Console.ReadLine ();\n }\n}\n</pre></code>', '2011-05-01 02:48:36', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Symbolic-links-in-Windows-7', '2010-09-13 05:00:00', 'Symbolic links in Windows 7', 'A symbolic link is a text file that contains a relative or absolute path to another directory or file. When an operating system receives a request for a path that resolves to a symbolic link the operating system loads the linked directory or file transparently.\n\nSo let\'s say I had the following symbolic link setup: \n\n<code>Folder A -linked-to-> Folder B.</code>\n\nWhen I browse to <code>Folder A</code> I would see the contents of <code>Folder B</code> as if they existed in <code>Folder A</code>! Since the folders are linked I can change any of the files in either location, and I can delete the symbolic folder (<code>Folder A</code>) without deleting the target folder!\n\nSymbolic links have been around for a looooooong time ( in pretty much every other operating system ) but Windows got this feature only recently - as of Windows Vista mklink ships with the OS bits. \n\nTo make a symbolic link, open a command line and use mklink (in Windows Vista and greater):\n<pre><code class=\"prettyprint\">\nmklink /D &lt;path_to_symbolic_dir&gt; &lt;path_to_target_dir&gt;\n</code></pre>\n\nFor example:\n<pre><code class=\"prettyprint\">\nmklink /D \"C:\\My Linked Folder\" \"C:\\My Project Folder\"\n</code></pre>\n', '2011-05-01 02:48:36', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Regions-FTW', '2010-09-15 05:00:00', 'Regions FTW', '<img src=\"http://codeimpossible.com/wp-content/uploads/2010/09/REGIONSFTW.png\" alt=\"Awesome code.\" title=\"#regions. For. The. Freaking. Win.\" width=\"442\" height=\"736\" class=\"aligncenter size-full wp-image-963\" />\n\nin case your curious, or just made out of concentrated evil and want to check this code into your SCCS at work, here is <a href=\"http://pastie.org/1156220\">the code used in the image above</a>.', '2011-05-01 02:48:36', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Spot-the-bug-for-in-and-JavaScript', '2010-09-20 05:00:00', 'Spot the bug - for/in and JavaScript', 'I\'m poking around in the <a href=\"http://bitbucket.org/codeimpossible/jsoq\" target=\"_blank\">JSOQ source</a> this week and came across this gem. \n\n<pre class=\"prettyprint\"><code>\nvar array = [\n { id: 1, num: 2 },\n { id: 2, num: 3}\n];\n\n// find the item with num == 2\nfor(var item in array) {\n if( item.num == 2 ) {\n alert(item.id);\n }\n}\n</code></pre> \n\nThe code above isn\'t calling <code>alert(item.id)</code>. Why is this?', '2011-05-01 02:48:36', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.3ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('JavaScript-Object-Query-Jsoq-is-1-0-', '2010-09-28 05:00:00', 'JavaScript Object Query (Jsoq) is 1.0!', 'I\'ve finally pushed one of my side-projects, the JavaScript Object Query library to 1.0! I\'m pretty psyched since I\'ve been meaning to do this ever since <a href=\"http://codeimpossible.com/2009/02/10/introducing-the-javascript-object-query-library/\">I blogged about it back in February</a>.\n\nYou can download the 1.0 release <a href=\"http://bitbucket.org/codeimpossible/jsoq/downloads/jsoq.1.0.min.js\">here (minified)</a> and <a href=\"http://bitbucket.org/codeimpossible/jsoq/downloads/jsoq.1.0.debug.js\">here (normal)</a>.\n\n<strong>What is Jsoq?</strong><br />\nJsoq is a port of Linq to Objects to JavaScript. Under the covers jSoq is a bunch of wrapper code for dealing with arrays in JavaScript.\n\n<strong>Features for v1.0</strong>\n<ul>\n <li>Doesn\'t mess with \"$\" variables so it works with jQuery, Mootools, etc.</li>\n <li>using select() you can have Jsoq return only certain members from each object in it\'s query set</li>\n <li>use built-in filter methods first(), last(), skip(), take() or roll your own using where()</li>\n <li>ability to add functionality to your returned object via the extendEach() method</li>\n <li>you can use $q as a shortcut for the jsoq.From() method</li>\n <li>inner and left joins are now supported with the leftJoin() and innerJoin() methods</li>\n</ul>\n\n\n<strong>A very basic code example</strong><br />\nBelow is what I would call the common jsoq use case. The code below will find the first item that has a <code>value</code> property with a length greater than 3, and return an object containing its <code>id</code> property.\n\n<pre class=\"prettyprint\"><code>\nvar somearray = [\n { value: \"one\", id: 1 }, \n { value: \"two\", id: 2 }, \n { value: \"three\", id: 3 }, \n { value: \"four\", id: 4 }\n];\n\nvar result = $q(somearray)\n .where(function(item) {\n return item.value.length > 3;\n })\n .first()\n .select(\"id\");\n\nalert(result.id); // alerts \"3\"\n</code></pre>\n\n\n\nFor a full list of features and more code examples check out <a href=\"http://bitbucket.org/codeimpossible/jsoq/wiki/Home\">the documentation on the official Jsoq wiki</a>, it\'s a bit sparse right now but I\'ll be adding more content in the near future.', '2011-05-01 02:48:36', 0, '')[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Someone-had-to-say-it', '2010-10-05 05:00:00', 'Someone had to say it', '<a href=\"http://codeimpossible.com/wp-content/uploads/2010/09/skip-magic-learn-c.jpg\"><img src=\"http://codeimpossible.com/wp-content/uploads/2010/09/skip-magic-learn-c.jpg\" alt=\"\" title=\"skip-magic-learn-c\" width=\"400\" height=\"400\" class=\"aligncenter size-full wp-image-997\" /></a>', '2011-05-01 02:48:36', 0, 'Forget all this dynamic language and virtual machine nonsense, real men program without magic!')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (1.0ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Spot-the-bug-TDD-Edition', '2010-10-12 05:00:00', 'Spot the bug: TDD Edition', 'For the past two years I\'ve been doing Asp.net MVC development off and on and practicing TDD off and on as well. For my current project at work I\'m doing TDD \"Full Bore\" and I\'m absolutely loving it. It\'s saved my bacon numerous times and I can\'t imagine doing a long-term, complex project without it.\n\nToday I have one example of how TDD has saved my arse: I\'m beginning work on adding a controller for Projects in our db and the Index action needs return a list of projects in the system. Following TDD I\'ve got to write the test first before I get to write any system code.\n\n<pre class=\"prettyprint\"><code>\n [Test]\n public void Index_HttpGet_ModelIsListOfProjects ()\n {\n var controller = new ProjectController();\n\n var result = controller.Index() as ViewResult;\n\n // uses WithViewData extension method from \n // MvcContrib TestHelpers\n result.WithViewData&lt;List&lt;Project&gt;&gt;();\n }\n</code></pre>\n\nOkay, now, let\'s create that controller so I can run my test and see it fail.\n\n<pre class=\"prettyprint\"><code>\n public class ProjectController : Controller\n {\n public ActionResult Index ()\n {\n return View();\n }\n }\n</code></pre>\n\nGreat! Now to run my test aaaaaaaand. Whoa! What? The test is <strong>passing</strong>!?!? W.T.F?!?\n\n... after about 30 seconds of staring at my computer screen in awe I realize what must be happening. I load up the source for the <code>WithViewData</code> extension method and spot the bug.\n\n<em>Note: I skipped a step here, WithViewData() calls AssertViewDataModelType() so I included that method here instead</em>\n\n<pre class=\"prettyprint\"><code>\n private static TViewData AssertViewDataModelType&lt;TViewData&gt;(\n ViewResultBase actionResult)\n {\n var actualViewData = actionResult.ViewData.Model;\n var expectedType = typeof(TViewData);\n\n if ( actualViewData == null &amp;&amp; expectedType.IsValueType)\n {\n throw new ActionResultAssertionException(\n string.Format(\"Expected view data of type \'{0}\', actual was NULL\",\n expectedType.Name));\n }\n \n if (actualViewData == null)\n {\n return (TViewData)actualViewData;\n }\n\n if (!typeof(TViewData).IsAssignableFrom(actualViewData.GetType()))\n {\n throw new ActionResultAssertionException(\n string.Format(\"Expected view data of type \'{0}\', actual was \'{1}\'\",\n typeof(TViewData).Name, actualViewData.GetType().Name));\n }\n\n return (TViewData)actualViewData;\n }\n</code></pre>\n\nCan you tell why the test is passing?', '2011-05-01 02:48:36', 0, 'Thanks to TDD I was able to prevent an obscure bug in a third party library from affecting my code before it got to the customer. It felt really awesome to catch this one before it happened in the wild.')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.3ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('C-5-0-wish-list', '2010-10-20 05:00:00', 'C# 5.0 wish list', 'Let\'s get right to it.\n\n<strong>Extension Properties: </strong> This is first on this list because it was the first feature I thought of. Extension properties aren\'t something I\'m dying for but they would be a nice feature to have.\n<pre class=\"prettyprint\"><code>\n public static class StringExtensions \n {\n public static int LengthWithNoSpaces \n {\n get \n {\n return this.Replace( \" \", \"\" ).Length;\n } \n }\n }\n</code></pre>\n\n<strong>Generics in Attributes: </strong> I\'m probably alone in wanting the ability to use generics in attribute classes but I can think of a few cases where this would make code more readable. e.g.\n<pre class=\"prettyprint\"><code>\n [ExpectedException&lt;InvalidOperationException&gt;()]\n</code></pre>\n\n<strong>Constructor Inheritance: </strong> I\'m still not sure why this isn\'t in c# already. I hate writing constructors that just pass arguments to base constructors.\n<pre class=\"prettyprint\"><code>\n public class A \n {\n private int number = 0;\n public A() \n {\n number = 10;\n }\n public A(int num) \n {\n number = num;\n }\n }\n\n public class B : A \n {\n \n }\n\n var test = new B(10); //this doesn\'t work!\n\n // to get this to work you need to do:\n public class C : A\n {\n public C (int num) : base(num) {} // really?!?!?!\n }\n</code></pre>\n\n<strong>Nested inner classes ala Java: </strong> This is one syntax feature I really love about Java. I use this all the time when I work on Android applications. It just feels right to override virtual members inside inline object instantiations. \n<pre class=\"prettyprint\"><code>\n public class A\n {\n public virtual void Test()\n {\n\n }\n\n }\n\n var ab = new A() {\n Test = () => MessageBox.Show(\"Test!\");\n };\n</code></pre>\n\n<p>But why stop here, why not go all in with...</p>\n\n<strong>JavaScript-style handling of dynamics: </strong> (Yeah, I know this won\'t be happening soon if ever but I can dream, right?)\n<pre class=\"prettyprint\"><code>\n var x = new dynamic {\n Test = () => { return this.SomeNumber * 2; },\n SomeNumber = 11\n };\n\n // this would work as long as return type was still int\n x.Test = () => { return 11; }; \n\n // this would fail\n x.Test = () => { return \"hi\"; }; \n \n // y would == 11\n var y = x[\"Test\"](); \n \n // able to add new properties like javascript\n x[\"NewProp\"] = \"SomeValue\"; \n</code></pre>\n<p>So that\'s <strong>my</strong> list (for now) of what I would like to see in vnext of C#, <em><span style=\"font-size: 18px;\">what\'s on your wish list for C# 5.0?</span></em></p>', '2011-05-01 02:48:36', 0, 'I\'ve been using C# as my primary programming language for about, oh 6 years now. I love it but I wouldn\'t say it\'s perfect. The C# language is lacking a lot of features that I\'ve found to be huge productivity boosts in other languages.')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.7ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Follow-Friday', '2010-10-22 05:00:00', 'Follow Friday', 'One of my co-workers, @chrisbloom7, <a href=\"http://twitter.com/chrisbloom7/status/22262783746\">offered some advice recently on how people should handle #followfridays</a> on twitter. \n\n<blockquote>#protip: Don\'t just spew a list of names on #FF. Use a whole tweet to tell me WHY I should follow each twitterer.</blockquote>\n\nWhich is an awesome idea, but I hate the fact that my tweets will <a href=\"http://www.readwriteweb.com/archives/10_ways_to_archive_your_tweets.php\">eventually disappear</a> or get lost amidst floods of tweets in other twitterers feeds so I\'ve posted a few developers that I would recommend other follow on twitter.\n\n<a href=\"http://twitter.com/chrisbloom7\">@chrisbloom7</a> - Smart and witty web developer. A fellow TDD and ruby enthusiast, co-worker at Wake}fly, open source developer, mac hobbyist. Keep on truffle shuffle\'n.\n\n<a href=\"http://twitter.com/johnbubriski\">@johnbubriski</a> - Calm, cool and collected .net developer and another of the Wake}fly twitteristas. He\'s talked me down off the architecture astronaut ledge more times than I can count. You should also <a href=\"http://www.johnnycode.com/blog/\">check out his blog</a>.\n\n<a href=\"http://twitter.com/digitalbush\">@digitalbush</a> - Developer who talented and driven to finding the best solution to a problem, not just the fastest. Author of the <a href=\"http://digitalbush.com/projects/hotlinkr\">hotlinkr</a> project as well as <a href=\"http://digitalbush.com/projects/\">several popular jQuery plugins</a>. <a href=\"http://digitalbush.com/\">Check out his blog as well</a>.\n\n<a href=\"http://twitter.com/edgesmash\">@edgesmash</a> - C# developer that is smart, creative and very insightful. He has <a href=\"http://productiveonceaday.blogspot.com/\">an excellent blog that you should read</a>.\n\n<a href=\"http://twitter.com/Kevin_McManus\">@Kevin_McManus</a> - Student at WPI for Computer Game Development (video game companies take notice), co-worker at Wake}fly, smart and eager to learn. Not afraid to be outside his comfort zone. Kevin also has <a href=\"http://www.rustedmushroom.com/\">a blog that is very much worth checking out</a>.\n\nAs far as I\'m concerned, having a list of recommended follows on twitter is just as important as having a recommended reading list or recommended blog/feed reading list.\n\nSo, thats my list, who would you recommend to a another developer?', '2011-05-01 02:48:36', 0, 'Twitter is great for keeping up with what your neighbors cat is up to, but it\'s also a great resource for keeping up with other developers. Following some advice from a co-worker I\'ve put together a small list of devs that I follow that I think you should follow too.')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('AutoHotKey-An-Introduction', '2010-10-25 05:00:00', 'AutoHotKey: An Introduction', 'Autohotkey is a great, free tool that helps you get more work done in fewer keystrokes - which is always good if you\'re a programmer. I use AutoHotKey at both home and work to perform some simple (and some complex) text replacement macros. In this post I\'ll take you through a few simple examples of what AutoHotKey can do to show why I think this is an essential item for your developer batman utility belt.\n\nYou can download AutoHotKey from its website, <a href=\"http://www.autohotkey.com/download/\">here</a>.\n\n<strong>The really, really basic example - replacing text: </strong><br />\nHere is a sample script that I use to write out my work email address\n\n<pre class=\"prettyprint\"><code>\n:*:@work::jbarboza@wakefly.com\n</code></pre>\n\nIt looks a little confusing but trust me, it\'s really simple. The * tells AHK that this script is an \"instant replacement\" and AHK should not wait for the spacebar to be pressed. \"@work\" as you\'ve probably guessed is the trigger and \"jbarboza@wakefly.com\" is the replacement text. Note: AHK doesn\'t care about the @ symbol in <code>@work</code>, it\'s only there for consistency with my other email triggers.\n\n<strong>Another simple example - fixing common misspellings</strong><br />\nI suck at spelling. I make spelling mistakes <strong>all the time</strong>. These script lines show how I auto-correct a few of my more common spelling mistakes.\n\n<pre class=\"prettyprint\"><code>\n:*?:.cm::.com \n:*?:.ocm::.com\n</code></pre>\n\n<strong>AutoHotKey can also run applications:</strong><br />\nAHK isn\'t just for replacing text. The built-in scripting language can do a multitude of things, from manipulating selected text, gathering user input via prompts and using it in script output, even automate applications.\n\n<pre class=\"prettyprint\"><code>\n#f::Run Firefox\n</code></pre>\n\nThis script will run Firefox when you press [Windows Button] + f. The # symbol in AHK is a shortcut for the windows key. You can use other shortcuts like ^, and ! for CTRL and ALT respectively.\n\nThis is just a small sampling of what AHK can do, if you\'re interested in learning more about the AHK scripting language check out the <a href=\"http://www.autohotkey.com/docs/Hotkeys.htm\">HotKey Introduction in the AHK Documentation</a>, the <a href=\"http://lifehacker.com/tag/autohotkey/\">AHK articles on Lifehacker</a>, or <a href=\"http://en.wikipedia.org/wiki/AutoHotKey\">the AutoHotKey wikipedia page</a>.', '2011-05-01 02:48:36', 0, 'AutoHotKey is a free, open-source macro-creation app for Windows. It lets you create really powerful macros that respond to keyboard input from within any application. ')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('AutoHotKey-scripts-for-developers', '2010-11-01 05:00:00', 'AutoHotKey scripts for developers', 'If you\'re not familiar with AutoHotKey yet, I\'ve <a href=\"http://codeimpossible.com/2010/10/27/autohotkey-an-introduction\">blogged about it before</a> and I would recommend giving that post a read. For the rest of you I thought I would post some useful AHK scripts that I have come across.\n\n<strong>The most important AHK script ever. </strong><br />\nDisabling Caps-lock. I constantly fat-finger the caps-lock button. With this script, I never have to worry about it again.\n<pre>\nSetCapsLockState, AlwaysOff\n</pre>\n<p></p>\n<strong>Generate a \"safe\" jQuery code block</strong><br />\nThis script will generate a self-calling anonymous function that scopes jQuery and protects your code from other possible interference from other javascript frameworks. You can <a href=\"http://codeimpossible.com/2010/01/13/solving-document-ready-is-not-a-function-and-other-problems\">read more about it here</a>.\n<pre><code>\n;insert a self-calling anonymous method to scope jQuery calls\n:*R0:{jqsafe}::\n(\n(function($) {{} \n $(function() {{}\n // ...code to run on dom ready\n\n{Left}{Left}{Left}{Left}{}});`n{}})(jQuery);\n)\nreturn\n</code></pre>\n<p></p>\n<strong>Include jQuery from the Google CDN</strong><br />\nThis script will turn {jqgoog#.#.#} into a &lt;script&gt; tag pointing to that version of jquery, specified by the #.#.#, hosted on googles cdn.\n\n{jqgoog1.4.2} will become: <em>Line breaks added for readability</em>\n\n<pre class=\"prettyprint\"><code>\n&lt;script \ntype=”text/javascript” \nsrc=http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js&gt;&lt;/script&gt;\n</code></pre>\n\n{jqgoog1} will become: <em>Line breaks added for readability</em>\n\n<pre class=\"prettyprint\"><code>\n&lt;script \ntype=”text/javascript” \nsrc=http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js&gt;&lt;/script&gt;\n</code></pre>\n\n<pre><code>\n; Include jQuery from google cdn\n~{::\nInput, UserInput, I V L13 C, {}}, jqgoog*,\nif ErrorLevel = NewInput\n return\nTest := InStr( UserInput, \"jqgoog\" )\nLen := StrLen( UserInput ) + 2\n\nif Test > 0:\n{\n	jqVer := RegExReplace( UserInput, \"jqgoog\", \"\" )\n	SetKeyDelay, -1 ; Most editors can handle the fastest speed.\n	\n	Loop %Len%\n	{\n		Send, {backspace}\n	}\n	\n	Send, &lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/%jqVer%/jquery.min.js\"&gt;&lt;/script&gt;\n return\n}\nreturn \n</code></pre>\n\n<strong>Automate writing simple database connection code in C#</strong><br />\nThis script will turn <code>{atwood}</code> into a block of C# that can connect to a database and issue a query. \n<pre><code>\n:*R0:{atwood}::\n(\nvar connString = ConfigurationManager.ConnectionStrings[\"connection\"].ConnectionString;\nvar query = @\"\";\nusing(var conn = new SqlConnection(connString))\n{{}\n conn.Open();\nusing( var cmd = new SqlCommand( query, conn ) ) \n{{}\n \n{}}\n{Left}{}}\n)\nreturn\n</code></pre>\n\nHere\'s the output:\n\n<pre><code class=\"prettyprint\">\nvar connString = ConfigurationManager.ConnectionStrings[\"connection\"].ConnectionString;\nvar query = @\"\";\nusing(var conn = new SqlConnection(connString))\n{\n conn.Open();\n using( var cmd = new SqlCommand( query, conn ) )\n {\n	\n }\n}\n</code></pre>\n<p></p>\n', '2011-05-01 02:48:37', 0, 'This week I\'ll post some useful AutoHotKey scripts that I use to make every-day coding easier.')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.8ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('For-in-Follow-Up', '2010-11-08 06:00:00', 'For/in Follow Up', 'A few weeks back <a href=\"http://codeimpossible.com/2010/09/20/spot-the-bug-forin-and-javascript/\">I wrote a post about a bug that can occur when you improperly use a for/in</a> style loop in javascript. \n\nThis is particular quirk is one that I find myself explaining to a lot of devs when they start using JavaScript, especially if they are coming from C# (with it\'s foreach loop having a similar syntax).\n\n<strong>\"I do not think that means what you think it means.\"</strong><br />\nThe for/in loop in JavaScript is powerful but it definitely doesn\'t do what you probably think it does. To understand the for/in loop we\'ll have to dive deeper into objects and arrays and how JavaScript <del datetime=\"2010-10-19T05:29:37+00:00\">mis</del>treats them.\n\n<strong>Objects in JavaScript</strong><br />\nIn most other programming languages these days, everything is an object. You can see this in current languages like C# where everything inherits from System.Object or in Ruby where you can assign properties and methods to anything at will.\n\nJavaScript is an object oriented language but it\'s implementation of objects is a little different from other languages. In JavaScript every object (every thing) is an array - a special array called an \"associative array\". If you\'re a C# developer think <code>Dictionary&lt;string, object&gt;</code>. If you\'re a python developer then you\'re already familiar with this concept. <br />\n<br />\nSo in JavaScript:\n<pre class=\"prettyprint\"><code>\nvar x = {\n something: \"hi\"\n};\n</code></pre>\nand\n<pre class=\"prettyprint\"><code>\nvar y = [];\ny[\"something\"] = \"hi\";\n</code></pre>\ndefine the same thing. Both objects will have a \"something\" property with the value \"hi\".\n\n<strong>Need more proof?</strong><br />\nTry the following:\n<pre class=\"prettyprint\"><code>\nalert( typeof( new Array() ) );\n</code></pre>\n\nThis will alert \"object\". Huh?\n\nYup, more proof that an array is just an object with properties named \"0\", \"1\", \"2\" etc. This means that\n<pre class=\"prettyprint\"><code>\nvar a = {\n 0: \"hi\",\n 1: \"there\"\n};\n</code></pre>\nand\n<pre class=\"prettyprint\"><code>\nvar b = [ \"hi\", \"there\" ];\n</code></pre>\nare the same exact thing. <a href=\"http://beta.jsvudo.com/3f40176\">Try it out!</a>\n\n\n<strong>Alright, that is insane but why the problem with for/in?</strong><br />\nWhen you use a for/in on an object in javascript you are looping over the keys in the key/value collection that makes up that object. So doing\n<pre class=\"prettyprint\"><code>\nvar x = {\n prop1: \"test\",\n prop2: \"test\"\n};\n\nfor(var p in x ) {\n alert(p);\n}\n</code></pre>\nwill alert \"prop1\" followed by \"prop2\". Using a for/in doesn\'t try to treat the object as an array, it enumerates each property (or key) in the object.\n\nNow you should start to see why for/in is generally a bad idea in JavaScript - that is, unless you <strong>want</strong> to loop over the properties of an object. \n\n<strong>Another fun fact</strong><br />\nThe for/in loop isn\'t guaranteed to alert \"prop1\" before \"prop2\". The properties will be enumerated in whatever order the interpreter returns them in.\n\nSo to summarize, unless you want to enumerate an objects properties, and you don\'t care about their order, avoid using the for/in loop in your JavaScript code.', '2011-05-01 02:48:37', 0, 'JavaScript has a lot of good parts and bad parts but the for/in loop seems to walk the grey area in between. It\'s a fantastic feature of JavaScript when wielded appropriately, but a potentially horrible bug when used incorrectly.')[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Powershell-Snippet-List-C-Source-Files-Modified-After-Date', '2010-11-15 06:00:00', 'Powershell Snippet: List C# Source Files Modified After Date', '<pre class=\"prettyprint\"><code>\n$DateToCompare = Get-Date \"8/17/2010 8:07 PM\"\n\nGet-Childitem –recurse | \n where-object {$_.lastwritetime –gt $DateToCompare} | \n where-object {$_.extension -eq \".cs\"}\n</code></pre>', '2011-05-01 02:48:37', 0, 'An easy way to find what source files have been modified after a certain date in a project directory with powershell.')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('MvcTurbine-stopping-StackOverflowException-on-w3wp-recycle', '2010-11-22 06:00:00', 'MvcTurbine, stopping StackOverflowException on w3wp recycle', 'I love MvcTurbine. If you\'re working on a asp.net mvc project then you should take a look at it. Having said that I\'ve run into one pretty strange problem with it.\n\nAnother developer noticed that there were a lot of eventlog entries on our build server for our projects w3wp process. After looking into it I found that whenever our CI server ran a build the w3wp.exe process would exit with a StackOverflowException. \n\nStrange.\n\nThis wasn\'t a big deal since it wasn\'t affecting the overall availability of the application, but it was annoying to the dev team. \n\nIn visual studio, every time a file is added or a build is done locally the worker-process is recycled which meant that everytime a build was done locally, or a file was added to the project, each dev got the wonderful \"Visual Studio Just In-Time Debugger\" dialog. Like I said, not a big issue, just very annoying.\n\nAfter a bit of googling I found that this is indeed an issue with MvcTurbine but it has a very easy fix: just add the following lines to the class that inherits from <code>TurbineApplication</code>:\n\n<pre class=\"prettyprint\"><code>\n protected override void ShutdownContext ()\n {\n CurrentContext = null;\n ServiceLocator = null;\n }\n</code></pre>\n\n<a href=\"http://lozanotek.com/blog/\">Javier Lozano</a> - the author of MvcTurbine, explains what\'s causing the problem:\n\n<blockquote>Since we register the SeviceLocator with itself and we call dispose, essentially it calls dispose on all the types that it has registered, including [itself]. So this causes a recursive loop of calls to ServiceLocator.Dispose... Essentially you\'re preventing the disposition of the ServiceLocator from [happening] since this piece gets called at App_Shutdown. The fix for v2.2 will not be this, instead it will be addressed at the ServiceLocator registration.</blockquote>\n\nHere are some links where you can <a href=\"http://mvcturbine.codeplex.com/Thread/View.aspx?ThreadId=219449\">see the original post with Javier\'s answer</a>, take a <a href=\"https://github.com/jglozano/mvcturbine/blob/master/src/Samples/SMExtensions/Mvc/StructureMapTurbineApplication.cs\">look at the code that Javier posted showing the fix in place</a>, and <a href=\"http://stackoverflow.com/questions/3344652/adding-removing-a-file-in-vs2010-causes-webdev-webserver20-exe-has-stopped-worki\">the StackOverflow question that should provide some more context</a>.', '2011-05-01 02:48:37', 0, 'I had an issue the other day with MvcTurbine where our application would throw a StackOverflowException whenever the worker process recycled.')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Make-Implement-Interface-use-auto-properties', '2010-11-29 06:00:00', 'Make &quot;Implement Interface&quot; use auto properties', 'I\'m refactoring some legacy code this week; a task that would normally be a total PITA but thanks to Visual Studio\'s built-in refactoring tools it\'s going much easier than expected. The one tool that I\'m a huge fan of is the \"Implement Interface\" context menu item.\n\nTo see what I mean create a new class, something simple...\n\n<pre class=\"prettyprint\"><code>\npublic class MySimpleClass : IDisposable\n{\n\n}\n</code></pre>\n\nyeah, like that. \n\nNow move your cursor over \"IDisposable\" and press ctrl+period. Selecting \"Implement Interface\" from the menu that appears will automagically insert all the properties and methods needed to make your class conform to the <code>IDisposable</code> interface. \n\nIt\'s very handy, but it generates the properties in a way that I\'m not particularly a fan of:\n\n<pre class=\"prettyprint\"><code>\npublic object SomeProperty\n{\n get\n {\n throw new NotImplementedException();\n }\n set\n {\n throw new NotImplementedException();\n }\n}\n</code></pre>\n\nInstead I\'d like to have this code generated using auto properties so that it looks like this:\n\n<pre class=\"prettyprint\"><code>\npublic object SomeProperty { get; set; }\n</code></pre>\n\nI initially thought I would have to modify some built-in T4 template but thankfully it\'s much, much easier than that. Apparently the visual studio team took full advantage of the snippet feature when they added it because nearly every refactoring tool is editable via a <code>.snippet</code> file. You can find the snippets that visual studio uses for C# in the following directory: \n\n<code>%programfiles%\\Microsoft Visual Studio 10.0\\VC#\\Snippets\\1033</code>\n\nThe file you\'re looking for is in the <code>Refactoring</code> directory and is named <code>PropertyStub.snippet</code>. Open this guy up in your favorite text editor - don\'t worry it\'s just xml - and find the part that looks like this:\n\n<pre class=\"prettyprint\"><code>\n&lt;Code Language=\"csharp\"&gt;\n &lt;![CDATA[$signature$\n{\n	$GetterAccessibility$ get \n	{ \n		$end$throw new $Exception$(); \n	}\n	$SetterAccessibility$ set \n	{ \n		throw new $Exception$(); \n	}\n}]]&gt;\n&lt;/Code&gt;\n</code></pre>\n\nReplace this xml with the xml below and you\'ll be good to go after a quick restart of Visual Studio!\n\n<pre class=\"prettyprint\"><code>\n&lt;Code Language=\"csharp\"&gt;\n &lt;![CDATA[$signature$ { $GetterAccessibility$ get; $SetterAccessibility$ set; }]]&gt;\n&lt;/Code&gt;\n</code></pre>', '2011-05-01 02:48:37', 0, 'This week I\'m finding that there is a lot less pain involved in getting Visual Studio 2010 to do things my way than I thought - like no pain at all.')[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Installing-mercurial-on-Ubuntu-6-06', '2010-12-06 06:00:00', 'Installing mercurial on Ubuntu 6.06', 'Installing git and svn on Ubuntu 6.06 is incredibly easy but getting mercurial installed required a few more steps. Here\'s what I did to get it running.\n\n<em>Update: I\'m keeping the list of steps here to help anyone thats stuck but if you have 6.06 and an internet connection then you should skip to the end of this post for the pain free installation steps.</em>\n\n<ol>\n	<li>Mercurial needs python >= 2.4 to run, make sure it\'s installed. <br /><code>$ sudo apt-get install python</code></li>\n	<li>You\'ll also need the Python C headers and a C compiler. <br /><code>$ sudo apt-get install build-essential gcc python-dev</code></li>\n	<li>If you want to generate the documentation you\'ll need AsciiDoc and XmlTo as well. <br /><code>$ sudo apt-get install asciidoc xmlto</code></li>\n	<li>download Mercurial from the <a href=\"http://packages.ubuntu.com/dapper/i386/mercurial/download\">dapper package repo</a>. <br /><code>$ wget REPO_URL</code></li>\n	<li>Install Mercurial! <br /><code>$ sudo dpkg -i mercurial_0.7-8_i386.deb</code></li>\n</ol>\n\nAltogether this would look like:\n\n<code class=\"block\">$ sudo apt-get install python\n$ sudo apt-get install build-essential gcc python-dev\n$ sudo apt-get install asciidoc xmlto\n$ wget http://mirrors.rit.edu/ubuntu//pool/universe/m/mercurial/mercurial_0.7-8_i386.deb\n$ sudo dpkg -i mercurial_0.7-8_i386.deb\n</code>\n\n<strong>Installing Mercurial with no headaches</strong><br />\nAfter doing all this I found out than I could have just <a href=\"https://help.ubuntu.com/community/HardyUpgrades\">upgrade my installation of Ubuntu to 8.04</a> and then run <code>$ sudo apt-get install mercurial</code> to install the latest version pain free. Doh!', '2011-05-01 02:48:37', 0, 'Over thanksgiving break I dug an old linux pc out of our basement and installed began setting it up as a continuous integration machine for some personal projects.')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Quick-Protip-explore-current-directory-from-command-line', '2011-04-18 05:00:00', 'Quick Protip: explore current directory from command line', '\nTry this: <code>C:\\> start explorer .</code> [enter]\n\n<span class=\"bangers kaboom\">KA-BOOM!</span>\n\nYou can also open another cmd window by doing: <code>C:\\> start cmd .</code> [enter]\n\nEnjoy!', '2011-05-01 02:48:37', 0, 'Ever been in a command window and wanted to open windows explorer to browse the directory you’re in? Now you can.')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
Redirected to http://blog.codeimpossible.com/admin/import
Completed in 9726ms (DB: 52) | 302 Found [http://blog.codeimpossible.com/admin/import/import]


Processing Admin::ImportController#index (for 68.187.213.182 at 2011-04-30 21:48:37) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/import"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering admin/import/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 2ms (View: 1, DB: 0) | 200 OK [http://blog.codeimpossible.com/admin/import]


Processing Admin::DashboardController#index (for 68.187.213.182 at 2011-04-30 21:48:55) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/dashboard"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 'f') [0m
  [4;35;1mSQL (0.2ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` WHERE (published = 't') [0m
Rendering template within layouts/main
Rendering admin/dashboard/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/admin]


Processing Admin::ManagepostsController#index (for 68.187.213.182 at 2011-04-30 21:49:03) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/manageposts"}
  [4;36;1mPost Load (2.1ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC[0m
Rendering template within layouts/main
Rendering admin/manageposts/index
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
Rendered admin/shared/_userbar (0.1ms)
Completed in 53ms (View: 48, DB: 2) | 200 OK [http://blog.codeimpossible.com/admin/manageposts]


Processing Admin::DashboardController#index (for 68.187.213.182 at 2011-04-30 21:49:11) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/dashboard"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mSQL (0.4ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` WHERE (published = 'f') [0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 't') [0m
Rendering template within layouts/main
Rendering admin/dashboard/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/admin]


Processing Admin::ManagepostsController#index (for 68.187.213.182 at 2011-04-30 21:49:16) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/manageposts"}
  [4;35;1mPost Load (0.4ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC[0m
Rendering template within layouts/main
Rendering admin/manageposts/index
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
Rendered admin/shared/_userbar (0.1ms)
Completed in 192ms (View: 190, DB: 0) | 200 OK [http://blog.codeimpossible.com/admin/manageposts]


Processing PostsController#show (for 68.187.213.182 at 2011-04-30 21:49:21) [GET]
  Parameters: {"slug"=>"Quick-Protip-explore-current-directory-from-command-line", "month"=>"4", "action"=>"show", "day"=>"18", "year"=>"2011", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.6ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Quick-Protip-explore-current-directory-from-command-line') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 6ms (View: 4, DB: 1) | 200 OK [http://blog.codeimpossible.com/2011/4/18/Quick-Protip-explore-current-directory-from-command-line]
  [4;35;1mSQL (0.1ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#update to json (for 68.187.213.182 at 2011-04-30 21:50:03) [PUT]
  Parameters: {"format"=>"json", "action"=>"update", "id"=>"107", "content"=>"\n  <p>\nTry this: <code>C:\\&gt; start explorer .</code> [enter]</p>\n\n<p><span class=\"bangers kaboom\">KA-BOOM!</span></p>\n\n<p>You can also open another cmd window by doing: <code>C:\\&gt; start cmd .</code> [enter]</p>\n\n<p>Enjoy!</p>\n", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.8ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 107) [0m


  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Update (0.2ms)[0m   [0;1mUPDATE `posts` SET `updated_at` = '2011-05-01 02:50:03', `body` = '\n <p>\nTry this: <code>C:\\&gt; start explorer .</code> [enter]</p>\n\n<p><span class=\"bangers kaboom\">KA-BOOM!</span></p>\n\n<p>You can also open another cmd window by doing: <code>C:\\&gt; start cmd .</code> [enter]</p>\n\n<p>Enjoy!</p>\n' WHERE `id` = 107[0m
  [4;35;1mSQL (2.5ms)[0m   [0mCOMMIT[0m
Completed in 7ms (View: 1, DB: 4) | 200 OK [http://blog.codeimpossible.com/posts/107.json]


Processing PostsController#show (for 68.187.213.182 at 2011-04-30 21:50:22) [GET]
  Parameters: {"slug"=>"quick-protip-explore-current-directory-from-command-line", "month"=>"04", "action"=>"show", "day"=>"18", "year"=>"2011", "controller"=>"posts"}
  [4;36;1mPost Load (0.6ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'quick-protip-explore-current-directory-from-command-line') AND (published = 't') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2011/04/18/quick-protip-explore-current-directory-from-command-line/]


Processing Admin::DashboardController#index (for 68.187.213.182 at 2011-04-30 21:50:33) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/dashboard"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 'f') [0m
  [4;35;1mSQL (0.2ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` WHERE (published = 't') [0m
Rendering template within layouts/main
Rendering admin/dashboard/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/admin]


Processing Admin::ConfigController#index (for 68.187.213.182 at 2011-04-30 21:50:36) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/config"}
Rendering template within layouts/main
Rendering admin/config/index
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
Rendered admin/shared/_userbar (0.1ms)
Completed in 4ms (View: 2, DB: 0) | 200 OK [http://blog.codeimpossible.com/admin/config]


Processing Admin::ConfigController#save (for 68.187.213.182 at 2011-04-30 21:50:45) [POST]
  Parameters: {"head_title"=>"Code: Impossible", "action"=>"save", "authenticity_token"=>"p4+nv6KZ1SRHcn0r4o38+weKIw0soHiIwhVzRfcMvGg=", "site_title"=>"Code: Impossible", "controller"=>"admin/config"}
authenticity_token=p4%2Bnv6KZ1SRHcn0r4o38%2BweKIw0soHiIwhVzRfcMvGg%3D&site_title=Code%3A+Impossible&head_title=Code%3A+Impossible
site_title=Code%3A+Impossible&head_title=Code%3A+Impossible
--- 
head_title: 
- "Code: Impossible"
site_title: 
- "Code: Impossible"
Redirected to http://blog.codeimpossible.com/admin/config
Completed in 1ms (DB: 0) | 302 Found [http://blog.codeimpossible.com/admin/config/save]


Processing Admin::ConfigController#index (for 68.187.213.182 at 2011-04-30 21:50:45) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/config"}
Rendering template within layouts/main
Rendering admin/config/index
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
Rendered admin/shared/_userbar (0.1ms)
Completed in 2ms (View: 2, DB: 0) | 200 OK [http://blog.codeimpossible.com/admin/config]


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 21:50:52) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.7ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 16ms (View: 14, DB: 1) | 200 OK [http://blog.codeimpossible.com/]


Processing Admin::DashboardController#index (for 68.187.213.182 at 2011-04-30 21:51:03) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/dashboard"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 'f') [0m
  [4;35;1mSQL (0.2ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` WHERE (published = 't') [0m
Rendering template within layouts/main
Rendering admin/dashboard/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/admin]


Processing Admin::ManagepostsController#index (for 68.187.213.182 at 2011-04-30 21:51:04) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/manageposts"}
  [4;36;1mPost Load (3.0ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC[0m
Rendering template within layouts/main
Rendering admin/manageposts/index
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
Rendered admin/shared/_userbar (0.1ms)
Completed in 55ms (View: 50, DB: 3) | 200 OK [http://blog.codeimpossible.com/admin/manageposts]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 21:52:09) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (0.7ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 't') ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mSQL (0.2ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` WHERE (published = 't') [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 7ms (View: 5, DB: 1) | 200 OK [http://blog.codeimpossible.com/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing Admin::ManagepostsController#index (for 68.187.213.182 at 2011-04-30 21:54:05) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/manageposts"}
  [4;36;1mPost Load (0.6ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC[0m
Rendering template within layouts/main
Rendering admin/manageposts/index
  [4;35;1mPost Columns (1.6ms)[0m   [0mSHOW FIELDS FROM `posts`[0m
  [4;36;1mUser Columns (1.7ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
Rendered admin/shared/_userbar (1.3ms)
Completed in 95ms (View: 88, DB: 4) | 200 OK [http://blog.codeimpossible.com/admin/manageposts]


Processing Admin::DashboardController#index (for 68.187.213.182 at 2011-04-30 21:54:11) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/dashboard"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mSQL (0.4ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` WHERE (published = 'f') [0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 't') [0m
Rendering template within layouts/main
Rendering admin/dashboard/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 5ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/admin]


Processing Admin::DashboardController#index (for 68.187.213.182 at 2011-04-30 21:54:27) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/dashboard"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 'f') [0m
  [4;35;1mSQL (0.2ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` WHERE (published = 't') [0m
Rendering template within layouts/main
Rendering admin/dashboard/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/admin]


Processing SessionsController#destroy (for 68.187.213.182 at 2011-04-30 21:54:29) [GET]
  Parameters: {"action"=>"destroy", "controller"=>"sessions"}
Redirected to http://blog.codeimpossible.com/
Completed in 1ms (DB: 0) | 302 Found [http://blog.codeimpossible.com/logout]


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 21:54:29) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (0.7ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 't') ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mSQL (0.2ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` WHERE (published = 't') [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 10ms (View: 6, DB: 1) | 200 OK [http://blog.codeimpossible.com/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#show (for 68.187.213.182 at 2011-04-30 21:58:03) [GET]
  Parameters: {"slug"=>"quick-protip-explore-current-directory-from-command-line", "month"=>"04", "action"=>"show", "day"=>"18", "year"=>"2011", "controller"=>"posts"}
  [4;36;1mPost Load (0.6ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'quick-protip-explore-current-directory-from-command-line') AND (published = 't') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 6ms (View: 4, DB: 1) | 200 OK [http://blog.codeimpossible.com/2011/04/18/quick-protip-explore-current-directory-from-command-line/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 21:59:54) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (0.8ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 't') ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mPost Columns (1.5ms)[0m   [0mSHOW FIELDS FROM `posts`[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 't') [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 43ms (View: 37, DB: 3) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#show (for 68.187.213.182 at 2011-04-30 21:59:59) [GET]
  Parameters: {"slug"=>"Quick-Protip-explore-current-directory-from-command-line", "month"=>"4", "action"=>"show", "day"=>"18", "year"=>"2011", "controller"=>"posts"}
NIL
  [4;35;1mPost Load (0.7ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Quick-Protip-explore-current-directory-from-command-line') AND (published = 't') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 6ms (View: 4, DB: 1) | 200 OK [http://blog.codeimpossible.com/2011/4/18/Quick-Protip-explore-current-directory-from-command-line]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing Admin::DashboardController#index (for 68.187.213.182 at 2011-04-30 22:01:16) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/dashboard"}
Redirected to http://blog.codeimpossible.com/session/new
Filter chain halted as [:login_required] rendered_or_redirected.
Completed in 1ms (DB: 0) | 302 Found [http://blog.codeimpossible.com/admin]


Processing SessionsController#new (for 68.187.213.182 at 2011-04-30 22:01:17) [GET]
  Parameters: {"action"=>"new", "controller"=>"sessions"}
  [4;36;1mUser Load (0.3ms)[0m   [0;1mSELECT * FROM `users` [0m
Rendering template within layouts/main
Rendering sessions/new
Completed in 6ms (View: 4, DB: 0) | 200 OK [http://blog.codeimpossible.com/session/new]


Processing SessionsController#create (for 68.187.213.182 at 2011-04-30 22:01:25) [POST]
  Parameters: {"commit"=>"Log in", "action"=>"create", "authenticity_token"=>"0IC2pnikvqQoc3mBaqmG9r4eU6xSrfHzJpFVub4o5Iw=", "controller"=>"sessions", "login"=>"codeimpossible", "password"=>"[FILTERED]"}
  [4;35;1mUser Columns (1.6ms)[0m   [0mSHOW FIELDS FROM `users`[0m
  [4;36;1mUser Load (0.2ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`login` = 'codeimpossible') LIMIT 1[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
Redirected to http://blog.codeimpossible.com/admin
Completed in 5ms (DB: 2) | 302 Found [http://blog.codeimpossible.com/session]


Processing Admin::DashboardController#index (for 68.187.213.182 at 2011-04-30 22:01:25) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/dashboard"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 'f') [0m
  [4;35;1mSQL (0.2ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` WHERE (published = 't') [0m
Rendering template within layouts/main
Rendering admin/dashboard/index
Rendered admin/shared/_userbar (0.3ms)
Completed in 5ms (View: 2, DB: 1) | 200 OK [http://blog.codeimpossible.com/admin]


Processing Admin::ManagepostsController#index (for 68.187.213.182 at 2011-04-30 22:01:28) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/manageposts"}
  [4;36;1mPost Load (0.4ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC[0m
Rendering template within layouts/main
Rendering admin/manageposts/index
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
Rendered admin/shared/_userbar (0.1ms)
Completed in 55ms (View: 51, DB: 1) | 200 OK [http://blog.codeimpossible.com/admin/manageposts]


Processing Admin::ManagepostsController#manage (for 68.187.213.182 at 2011-04-30 22:01:33) [POST]
  Parameters: {"action"=>"manage", "authenticity_token"=>"0IC2pnikvqQoc3mBaqmG9r4eU6xSrfHzJpFVub4o5Iw=", "act"=>"unpublish", "controller"=>"admin/manageposts", "posts"=>["107", "106", "105", "104", "103", "102", "101", "100", "99", "98", "97", "96", "95", "94", "93", "92", "91", "90", "89", "88", "87", "86", "85", "84", "83", "82", "81", "80", "79", "78", "77", "76", "75", "74", "73", "72", "71", "70", "69", "68", "67", "66", "65", "64", "63", "62", "61", "60", "59", "58", "56", "57", "55", "54", "53", "52", "51", "50", "49", "48", "47", "46", "45", "43", "44", "42", "41", "40", "39", "38", "37", "36", "35", "34", "33", "32", "29", "30", "31", "28", "27", "26", "25", "24", "23", "22", "21", "20", "19", "18", "17", "15", "16", "14", "13", "12", "11", "10", "8", "9", "7", "6", "5", "4", "3", "2", "1"]}
  [4;36;1mPost Load (0.5ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 107) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.3ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 106) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 105) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 104) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.2ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 103) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 102) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 101) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 100) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 99) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 98) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 97) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 96) [0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 95) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.3ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 94) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 93) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 92) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.2ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 91) [0m
  [4;35;1mSQL (0.4ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 90) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.2ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 89) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 88) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 87) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.2ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 86) [0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 85) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 84) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 83) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 82) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 81) [0m
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.4ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 80) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 79) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.5ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 78) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 77) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 76) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 75) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 74) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.3ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 73) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 72) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 71) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.2ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 70) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.5ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 69) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 68) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 67) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 66) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.2ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 65) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.3ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 64) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 63) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.6ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 62) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 61) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.3ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 60) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 59) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.4ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 58) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 56) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.2ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 57) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.2ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 55) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 54) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 53) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 52) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 51) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 50) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 49) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.2ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 48) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.2ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 47) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 46) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 45) [0m
  [4;35;1mSQL (0.2ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 43) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 44) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 42) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 41) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 40) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.3ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 39) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 38) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 37) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.3ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 36) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.2ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 35) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 34) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 33) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 32) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.2ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 29) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 30) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 31) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 28) [0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 27) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 26) [0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.4ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 25) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 24) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.2ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 23) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.7ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 22) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 21) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 20) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 19) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 18) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.2ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 17) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 15) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 16) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 14) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 13) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 12) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 11) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 10) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 8) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 9) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 7) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 6) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.2ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 5) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 4) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 3) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 2) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 1) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
Redirected to http://blog.codeimpossible.com/admin/manageposts
Completed in 155ms (DB: 23) | 302 Found [http://blog.codeimpossible.com/admin/manageposts/manage]


Processing Admin::ManagepostsController#index (for 68.187.213.182 at 2011-04-30 22:01:33) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/manageposts"}
  [4;35;1mPost Load (0.4ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC[0m
Rendering template within layouts/main
Rendering admin/manageposts/index
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
Rendered admin/shared/_userbar (0.1ms)
Completed in 49ms (View: 47, DB: 0) | 200 OK [http://blog.codeimpossible.com/admin/manageposts]


Processing Admin::DashboardController#index (for 68.187.213.182 at 2011-04-30 22:01:36) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/dashboard"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 'f') [0m
  [4;35;1mSQL (0.2ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` WHERE (published = 't') [0m
Rendering template within layouts/main
Rendering admin/dashboard/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/admin]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing Admin::DashboardController#index (for 68.187.213.182 at 2011-04-30 22:19:38) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/dashboard"}
  [4;36;1mUser Columns (1.9ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Columns (1.2ms)[0m   [0;1mSHOW FIELDS FROM `posts`[0m
  [4;35;1mSQL (0.6ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` WHERE (published = 'f' or published = 0) [0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 't' or published = 1) [0m
Rendering template within layouts/main
Rendering admin/dashboard/index
Rendered admin/shared/_userbar (1.9ms)
Completed in 17ms (View: 4, DB: 4) | 200 OK [http://blog.codeimpossible.com/admin]


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 22:19:42) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.7ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 5ms (View: 2, DB: 1) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#new (for 68.187.213.182 at 2011-04-30 22:19:43) [GET]
  Parameters: {"action"=>"new", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/new
Rendered admin/shared/_userbar (0.1ms)
Completed in 5ms (View: 3, DB: 0) | 200 OK [http://blog.codeimpossible.com/posts/new]


Processing PostsController#create to json (for 68.187.213.182 at 2011-04-30 22:19:45) [POST]
  Parameters: {"format"=>"json", "post_body"=>"\n\t  <p>Your main body should fully realize the ideas you set into motion in the introduction section. Keep your posts short\n\t  and to the point as shorter blog posts are easier to read and remember.</p>\n\t  \n\t  <p>Use a consistent style in your writing, once you've picked a style that suites you and your audience, stick to it.</p>\n\t  \n\t  <p>Be your own editor. Before you publish your post, go back and re-read it. Does it sound like you? Does it make sense? Does it get right to the point?</p>\n\t", "action"=>"create", "authenticity_token"=>"0IC2pnikvqQoc3mBaqmG9r4eU6xSrfHzJpFVub4o5Iw=", "post_title"=>"Your New Posts' Title", "controller"=>"posts", "post_summary"=>"\n\t  Write 2-3 sentences to grab your readers' attention. The ending should act as an introduction into your main body. \n\t"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (1.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Your-New-Posts-Title', '2011-05-01 03:19:45', 'Your New Posts\' Title', '\n	 <p>Your main body should fully realize the ideas you set into motion in the introduction section. Keep your posts short\n	 and to the point as shorter blog posts are easier to read and remember.</p>\n	 \n	 <p>Use a consistent style in your writing, once you\'ve picked a style that suites you and your audience, stick to it.</p>\n	 \n	 <p>Be your own editor. Before you publish your post, go back and re-read it. Does it sound like you? Does it make sense? Does it get right to the point?</p>\n	', '2011-05-01 03:19:45', 0, '\n	 Write 2-3 sentences to grab your readers\' attention. The ending should act as an introduction into your main body. \n	')[0m
  [4;35;1mSQL (1.9ms)[0m   [0mCOMMIT[0m
Completed in 31ms (View: 25, DB: 3) | 200 OK [http://blog.codeimpossible.com/posts.json]


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 22:19:49) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.3ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 5ms (View: 3, DB: 0) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 22:20:03) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (0.7ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 't' or published = 1) ORDER BY created_at DESC LIMIT 0, 5[0m
Rendering template within layouts/main
Rendering posts/index
Completed in 5ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 22:20:34) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (0.6ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 't' or published = 1) ORDER BY created_at DESC LIMIT 0, 5[0m
Rendering template within layouts/main
Rendering posts/index
  [4;35;1mPost Columns (1.7ms)[0m   [0mSHOW FIELDS FROM `posts`[0m
Completed in 39ms (View: 34, DB: 2) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 22:20:36) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (0.7ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 't' or published = 1) ORDER BY created_at DESC LIMIT 0, 5[0m
Rendering template within layouts/main
Rendering posts/index
Completed in 4ms (View: 2, DB: 1) | 200 OK [http://blog.codeimpossible.com/]
  [4;35;1mSQL (0.1ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 22:25:46) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;35;1mUser Columns (2.2ms)[0m   [0mSHOW FIELDS FROM `users`[0m
  [4;36;1mUser Load (0.6ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.0ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (1.4ms)
Completed in 10ms (View: 5, DB: 3) | 200 OK [http://blog.codeimpossible.com/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 22:33:00) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mUser Columns (1.7ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.4ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
Rendering template within layouts/main
Rendering posts/index
  [4;35;1mPost Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `posts`[0m
Rendered admin/shared/_userbar (1.3ms)
Completed in 47ms (View: 35, DB: 4) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 22:33:07) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (0.4ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 0, 5[0m
Rendering template within layouts/main
Rendering posts/index
Completed in 2ms (View: 1, DB: 0) | 200 OK [http://blog.codeimpossible.com/]
  [4;35;1mSQL (0.1ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#destroy (for 68.187.213.182 at 2011-04-30 22:34:14) [DELETE]
  Parameters: {"action"=>"destroy", "_method"=>"delete", "authenticity_token"=>"0IC2pnikvqQoc3mBaqmG9r4eU6xSrfHzJpFVub4o5Iw=", "id"=>"108", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.8ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 108) [0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Destroy (0.2ms)[0m   [0;1mDELETE FROM `posts` WHERE `id` = 108[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
Redirected to http://blog.codeimpossible.com/
Completed in 3ms (DB: 1) | 302 Found [http://blog.codeimpossible.com/posts/108]


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 22:34:14) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.2ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 4ms (View: 3, DB: 0) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#destroy (for 68.187.213.182 at 2011-04-30 22:34:16) [DELETE]
  Parameters: {"action"=>"destroy", "_method"=>"delete", "authenticity_token"=>"0IC2pnikvqQoc3mBaqmG9r4eU6xSrfHzJpFVub4o5Iw=", "id"=>"109", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.3ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 109) [0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Destroy (0.1ms)[0m   [0mDELETE FROM `posts` WHERE `id` = 109[0m
  [4;36;1mSQL (0.9ms)[0m   [0;1mCOMMIT[0m
Redirected to http://blog.codeimpossible.com/
Completed in 4ms (DB: 2) | 302 Found [http://blog.codeimpossible.com/posts/109]


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 22:34:16) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.2ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 2ms (View: 1, DB: 0) | 200 OK [http://blog.codeimpossible.com/]


Processing Admin::DashboardController#index (for 68.187.213.182 at 2011-04-30 22:34:19) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/dashboard"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 0) [0m
  [4;35;1mSQL (0.9ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering admin/dashboard/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 5ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/admin]


Processing Admin::ImportController#index (for 68.187.213.182 at 2011-04-30 22:34:22) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/import"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering admin/import/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 4ms (View: 2, DB: 0) | 200 OK [http://blog.codeimpossible.com/admin/import]


Processing Admin::ImportController#import (for 68.187.213.182 at 2011-04-30 22:34:36) [POST]
  Parameters: {"import_type"=>"wp", "action"=>"import", "authenticity_token"=>"0IC2pnikvqQoc3mBaqmG9r4eU6xSrfHzJpFVub4o5Iw=", "post_date"=>"original", "export_file"=>#<File:/tmp/RackMultipart20110430-25294-10vqz05-0>, "post_type"=>"Published", "controller"=>"admin/import"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.5ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('VB-NET-used-to-write-compilers-', '2007-05-29 05:00:00', 'VB.NET used to write compilers?', 'It\'s apparently <a href=\"http://www.panopticoncentral.net/archive/2007/05/24/20730.aspx\" target=\"_blank\">true</a>. Silverlight\'s JavaScript compiler will be written entirely in Visual Basic .NET. Also of note: the Visual Basic 10 (ORCAS release) compiler is being written in Visual Basic .NET as well.\n\nAll I have to say is:\n\nWhy is this such a big deal?<!--more-->\n\nWith the advent of the .NET CLR developing an application in C++, VB, or C# is simply a syntax preference. The code still gets sent to the CLR and converted into a common machine language. That is the beauty of .NET. One team can code a piece of an enterprise system in VB and another team working soley in C# can use it without any change to the application.\n\nSo when people start screaming \"Oh my god they used VB??!?!\" just look at them and say:\n\nNo, they just liked it\'s syntax.', '2011-05-01 03:34:42', 0, '')[0m
  [4;36;1mSQL (0.6ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('-8220-That-8221-Keyword', '2007-06-18 05:00:00', '&#8220;That&#8221; Keyword', 'Brian Keller <a href=\"http://blogs.msdn.com/briankel/archive/2004/09/23/233212.aspx\" target=\"_blank\">posed a question</a> to the readers of his blog asking what we thought, if there were such a thing, the \"that\" keyword should do in C#. What a fantastic idea! My suggestion - the that keyword would be used to allow access to inherited classes from the base class. <!--more-->IE:\n<pre>\npublic class MyBase\n{\n public MyBase()\n {\n 	//only call CallToMethod() in a specific class\n 	if( typeof(that).ToString().Equals(\"MyChild\") )\n 		that.CallToMethod();\n }\n}\n\npublic class MyChild : MyBase\n{\n public void CallToMethod()\n {\n // more code goes here...\n }\n}</pre>\nYeah I know it\'s really dangerous and would definitely have some overhead associated with it but the functionality would be awesome!', '2011-05-01 03:34:42', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('The-Next-Chapter', '2007-06-22 05:00:00', 'The Next Chapter', 'I will be leaving my current position as a Software Engineer for Cyphermint Inc (<a href=\"http://www.cyphermint.com\" target=\"_blank\">http://www.cyphermint.com</a>) on July 6th after working there for 3 years. I\'ll be moving on to a company named ScerIS (<a href=\"http://www.sceris.com\" target=\"_blank\">http://www.sceris.com</a>) to work on some of their very interesting projects.\n\nMy years at Cyphermint were wonderful. Full of fun, learning and great people. Sure there were some killjoys along the way (and some in the end too) but those types of people are everywhere and shouldn\'t compose the whole view of a company.\n\nI wish all the best to everyone at Cyphermint. They are on the verge of becoming the next \"big thing\" in more ways than one. They wouldn\'t be in the position they are now (several big releases right around the corner) without the talent and dedication of the employees they have. The time simply came for me to move out on my own and discover what I could truly do on my own. I hope you all understand.\n\nIt was a privilege to work with such a talented staff.', '2011-05-01 03:34:43', 0, '')[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Hide-system-tray-in-C-', '2007-06-26 05:00:00', 'Hide system tray in C#', 'In most of our customer-oriented kiosk applications it is necessary to hide the system task bar so that in case of a crash the end user won\'t be able to muck around with the computer. Yes, we restrict the user\'s account via registry edits but the task is still available to them if the application exits.<!--more-->\n\nOr is it?\n\nEnter our nifty little code solution:\n<pre>using System;\nusing System.Runtime.InteropServices;\nclass TaskBarController\n{\n [DllImport(\"user32.dll\")]\n private static extern int FindWindow(string className,\n string windowText);\n\n [DllImport(\"user32.dll\")]\n private static extern int ShowWindow(int hwnd, int command);\n\n public static void HideTaskbar()\n {\n int hwnd = FindWindow(\"Shell_TrayWnd\",\"\");\n ShowWindow( hwnd, 0 );\n }\n public static void ShowTaskbar()\n {\n int hwnd = FindWindow(\"Shell_TrayWnd\",\"\");\n ShowWindow( hwnd, 5 );\n }\n}</pre>\nAnd there you have it. Enjoy!', '2011-05-01 03:34:43', 0, '')[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Tempting', '2007-07-29 05:00:00', 'Tempting', 'If it wasn\'t for the possibility of getting shot, I would accept <a href=\"http://www.careerbuilder.com/JobSeeker/Jobs/JobDetails.aspx?IPath=JRGCM&amp;ff=21&amp;APath=2.21.0.0.0&amp;job_did=J8E27R758MWRHR3QTG9&amp;cbRecursionCnt=1&amp;cbsid=70d72a1c8c2242adaf72875295723fb8-239073695-X3-2\" target=\"_blank\">this job</a>. It\'s hilarious that they are expecting programmers to enter a dangerous war-zone to develop an AJAX application. Mostly because programmers are not known for their \"elf-like\" agility. (most of us rolled a -10 in the AGI column but saved up for INT or CHR).<!--more-->\n\nI wonder if <a href=\"http://blog.megazone.org\" target=\"_blank\">Megazone</a> has seen this? I should forward this off to my old co-workers. At least over in Iraq the possibility of you dying by unfriendly fire is greater. Yeah, I\'m in a bit of a mood tonight, probably just punchy from being tired. Well I know a good way to fix that!\n\n----------------\nListening to: <a href=\"http://www.foxytunes.com/artist/nirvana/track/you+know+you%27re+right\" title=\"\'Nirvana - You Know You\'re Right\' - open on FoxyTunes Planet\">Nirvana - You Know You\'re Right</a>\n<span style=\"font-style:italic;font-size:10px;color:#999999;\">via <a href=\"http://www.foxytunes.com/signatunes/\" title=\"FoxyTunes - Web of music at your fingertips\">FoxyTunes</a></span>', '2011-05-01 03:34:43', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Weekend-reading', '2007-09-01 05:00:00', 'Weekend reading', 'On the way out the door on friday my boss handed me two copies of \"CoDe Magazine\" for me to look at because they had sent him too many copies. I briefly glanced at the covers and saw some interesting things. The very first thing I noticed was that one issue had, on the cover, an image of the Master Chief from Halo3 with \"XNA: Ready for Prime Time?\" in a huge, bold font. The other front page bullets for that issue indicated that the issue focused intensely on XNA and game development. The second thing I noticed was that the other issue included a \"13-step Crash Course for Using LINQ\".\n\nI tried desperately to hide the drool that had started to form at the corners of my mouth as I said \"Sure, I think these might be alright\". So I stuffed them into my backpack like a theif with a fist full of unmarked bills and headed home. I just got done reading both issues and enjoyed their content, albeit one more than the other, so much that I felt compelled to note it here.\n\nI figure I would go over them in order of their publication (one covers July/August, the other September/October).\n\nJuly / August (vol. 8, issue 4)\nSadly this is the issue that I was least impressed with. Not because it was a \"horrible\" publication. it just didn\'t cover as many topics that interested me as the other issue. In fact it only covered one. Linq. Linq is Microsofts\' latest \"wow\" feature for .NET 3.5 (codename: \"Orcas\") and is quite possibly the coolest god damned thing I have ever seen but since this is just a review of a magazine I\'ll save my fanfare for LINQ for another day. The article, for those interested can be found <a href=\"http://www.code-magazine.com/Article.aspx?quickid=0707051\" target=\"_blank\">here</a>.\n\nSeptember / October (vol. 8, issue 5)\nThis issue had a lot to offer that interested me. There was a great write-up featuring <a href=\"http://www.code-magazine.com/Article.aspx?quickid=0709031\" target=\"_blank\">productivity tips SQL 2005</a> which I think every developer should read. Items of note: Pivot, Output Into, CTEs and Recursive Queries. Really, really cool stuff.\n\nThe next part was all about Microsofts\' XNA game development framework. There were two great articles covering XNA \"<a href=\"http://www.code-magazine.com/Article.aspx?quickid=0709041\" target=\"_blank\">XNA: Ready for Prime Time?</a>\" and \"<a href=\"http://www.code-magazine.com/Article.aspx?quickid=0709051\" target=\"_blank\">Introducing XNA Game Studio Express</a>\" both worth reading if you have any interest in game design and programming or if you just want to get a really good grasp on why there is so much resistance to managed code frameworks.\n\nThere was also a great article covering <a href=\"http://www.code-magazine.com/Article.aspx?quickid=0709101\" target=\"_blank\">Lambda Expressions</a> which are another great upcoming feature in .NET 3.5.', '2011-05-01 03:34:43', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Borked-Projects-8220-The-Robotic-Arm-POS-8221-', '2007-10-18 05:00:00', 'Borked Projects - &#8220;The Robotic Arm POS&#8221;', 'At one of my previous jobs we (the engineering team) recieved a project order to create a new POS system for a gaming and entertainment complex in Rhode Island. The catch for this particular project was that the client did not want to replace or update their POS system, they instead wanted us to provide a new \"front end\" for it to allow customers to purchase game-time via credit cards.<!--more-->\n\nSo it was proposed by the client that there would be a dummy terminal in a back room somewhere on the grounds and our front-end would control a robotic arm (I imagined it would be something like the arm from Terminator 2) to manually enter the payment information into the clients\' POS system.\n\nNo. I am not kidding you. To this very day (about 3 years later) this story still brings uproarious laughter from myself and my fellow co-workers and is deemed one of the most \"Borked Projects\" I have ever been a part of.', '2011-05-01 03:34:43', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Don-8217-t-get-ground-up-in-the-rumor-mill', '2007-10-22 05:00:00', 'Don&#8217;t get ground up in the rumor mill', 'Every office has a rumor mill. It\'s part and parcel of the whole office gig. It\'s easy to get caught up in the all the drama that is going on at work \"Did you hear that Josh and Tina are an item now?\", \"I heard we are all going to be working for Herbert next week!\", etc. We are all gossipers. Even those that seem impervious to the gossip will eventually find themselves caught up in it if they are not careful.<!--more-->\n\n<img src=\"http://www.ksl.com/emedia/slc/133/13352/1335293.jpg\" height=\"250\" width=\"250\" /> Basic tips for surviving the rumor mill are pretty simple and follow common sense pretty strictly. First off, just because rumors and gossip are generally more closely associated with women don\'t let this fool you. Men are just as guilty of gossip and in my own experiences just as bad or worse at getting caught up in the rumors flying around. Some people are more easily caught up when they hear something from Jon than if they had heard the same thing from Samantha. Don\'t let this fool you. When it comes to rumors trust no one.\n\nThe rumor mill has no age limit. People of any age can get wrapped up in the rumor mill. Don\'t trust the more experienced ad executive simply because he is older. That doesn\'t mean he has more experience than anyone else with the rumor mill.\n\nWhen you hear a rumor take it with a grain of salt. Remember that game you played in kindergarten where all the kids sat in a circle and one child whispered a phrase to their neighbor and that child whispered what they heard to their neighbor and so on and so on? Remember how the result was completely different than the phrase at the beginning? Well the rumor mill is simply this principle put into practice on a larger (or smaller) scale.\n\nDon\'t react. When someone presents you with a rumor that is particularly inflammatory resist the urge to react in the moment. Take a breath, dismiss yourself from the conversation, go for a walk, get some water or coffee do anything but react. If your team is going to be transferred to Herberts\' reign then it is going to happen. There is nothing you can do about it now the best thing that can be done is to try to establish a working relationship with Herbert or polish your resume.\n\nIt\'s easy to get caught up in the rumor mill but it is not impossible to avoid. Remember to take all rumors with a grain of salt, and to never react to a rumor in the moment and you will discover you have what it takes to survive the office rumor mill.', '2011-05-01 03:34:43', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Gaming-Bioware-KOTOR-MMO-To-Use-Streambase', '2007-10-22 05:00:00', 'Gaming: Bioware KOTOR-MMO To Use Streambase', '<p style=\"text-align:center;\"><img src=\"http://www.uwcsa.com/uwcsa/channels/video_game/page/kotor/kotor_bastila.jpg\" height=\"140\" hspace=\"4\" vspace=\"4\" width=\"240\" /></p>\nOkay, every gamer is right now is saying \"What the $*^% is Streambase, and why do I care???\". Well I\'ll tell you. Streambase is a provider of Complex Event Processing solutions for high-end, high-speed, real-time business needs. Hmmm still not getting through eh? Okay try this on for size.<!--more-->\n\nStreambase provides data monitoring systems that are designed to monitor, track and respond to large amounts of data in real-time. Why is this important to BioWare and their new MMO? BioWare will be using Streambase to accomplish what I can only call the most ambitious undertaking in MMO history. BioWare states that they will be able to monitor server performance and issue fixes in real-time during game-play without the need for server down-time.\n\nLet me say that again. A Star Wars MMO; that won\'t suck rancor nards like galaxies; that will allegedly be online 24/7 (unlike galaxies); did I mention it won\'t suck?\n\nFor more information read the story over at <a href=\"http://www.joystiq.com/2007/04/02/bioware-picks-up-streambase-engine-for-mmo/\" target=\"_blank\">Joystiq</a>, the press release from <a href=\"http://www.streambase.com/Collateral/Documents/English-US/BioWare_Customer_FINAL.pdf\" target=\"_blank\">Streambase</a> and <a href=\"http://www.streambase.com/index.htm\" target=\"_blank\">Streambase</a> website.', '2011-05-01 03:34:43', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('-32-to-be-exact-8230-', '2007-11-01 05:00:00', '#32 to be exact&#8230;', 'Look who made the <a href=\"http://stumblerank.com/index.php?sort=3.1\" target=\"_blank\">top 100 stumblers</a> over at <a href=\"http://www.stumblerank.com\" target=\"_blank\">StumbleRank</a>.\n\n<b>update (09/16/2009): </b> I went through this post and removed the links to stumblerank because it no longer exists and I don\'t want to give links back to the spammy parked domain.', '2011-05-01 03:34:43', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.5ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('RIP-My-WoW-Subscription-01-06-2006-11-03-2007', '2007-11-03 05:00:00', 'RIP: My WoW Subscription 01/06/2006 - 11/03/2007', '<p style=\"text-align:center;\"><img src=\"http://image.guim.co.uk/sys-images/Technology/Pix/pictures/2007/07/25/world_of_warcraft460X276.jpg\" height=\"276\" hspace=\"4\" vspace=\"4\" width=\"460\" /></p>\n\"Last login: June 13, 2007 5:30 PM PDT\". \"Account created on: January 6, 2006 8:04 PM PST\". I haven\'t used my WoW account in such a long time I had forgotten how much I used to love it. But sadly all things come to an end (and with the release of Tabula Rasa and the purchase of a better gaming rig on the way...). Who am I kidding? I\'ll get the new rig and TR for sure. But I\'ll only play it 1/4 as much as I used to play WoW. If that.<!--more--><span></span>\n\nI\'m canceling my WoW account as I type this and I can\'t help but feel a twinge of nostalgia and maybe a little guilt. I missed all the days of running raids until 4am, bitching about guild-mates on ventrillo, trying to make 300 gold in a day on the auction houses. This life just isn\'t for me (and hasn\'t been for about 4 months now). I have to move on. To expand myself as an adult gamer and as a professional (showing up for work is a plus you know).\n\nSo it is with great pain that I announce the passing of Phaelanx, Phaetank, Phaesneak and Phaelock of Maiev and Phaelanx of Arathor (formerly Moonrunner).', '2011-05-01 03:34:43', 0, '')[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.3ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Arizona', '2007-11-20 06:00:00', 'Arizona', '<p style=\"text-align:center;\"><img src=\"http://lh3.google.com/pistalwhipped/RykmT5vujDI/AAAAAAAAAjA/yFZYvMho43o/s400/DSC02110.JPG\" height=\"275\" hspace=\"4\" vspace=\"4\" width=\"450\" /></p>\nT and I took a trip out to Arizona a little while ago and in one word (or less??) it was: \"Paradisiacal\". I started pretty innocently enough. Both of us had a 4 day weekend coming up and we knew we wanted to get away from the area (family stress, house stress, apartment stress, work stress etc) and go someplace where we\'d never been and wouldn\'t know anyone.<!--more-->\n\nEarly rising (good morning at 4am!!), rush to the airport (hello Logan.), plane flight (horrible movie, \"waitress\" or some other nonsense. Ugh.)\n\nWhen we arrived at Phoenix airport we were absolutely starving. We were ready for a burger, some fries, onion rings, a side order of pizza anything we could get our hands on really. However, we completely forgot about the timezone change. Our bodies were saying that it was lunch time but everyone was still serving breakfast. Hungry, we left the terminal and vowed to get lunch ASAP on the way to our hotel.\n\n<img src=\"http://lh5.google.com/pistalwhipped/RykmfZvujMI/AAAAAAAAAkI/dn-wd9NzS3g/s288/DSC02155.JPG\" align=\"left\" height=\"216\" hspace=\"6\" vspace=\"4\" width=\"288\" />The commute was uneventful. We were completely awestruck by the landscape and I couldn\'t believe we seemed so far away from home. We were already starting to relax and forget all the crap we left at home. Except for the cats of course. I set up a web-cam before we left to upload pictures of the cats at intervals to the ftp server we have. The cats must have known about the camera because we were only able to spot <a href=\"http://wiki.pistalwhipped.net/pmwiki.php?n=Bios.Shiva\" target=\"_blank\">Shiva</a> on the next to last day of our trip.\n\nBack to the trip. We arrived at the Carefree Resort around noon-time and our first impression was that the name fit this place very well. We checked in, went to our villa and spent the rest of the day getting familiar with the surrounding area (and the couch).\n\nOn the second day we visited the Out of Africa zoo and got to see some really amazing animals up close. There was a great spotted leopard there that even though it only had three legs it could still completely ravage anyone of the visitors. That leopard was a complete bad-ass. It lost it\'s leg when it was a cub because it tried to smack a lion (yeah, a lion) that was in a cage next to it and the lion mangled it\'s limb so bad that it had to be removed.\n<p align=\"right\"><img src=\"http://lh5.google.com/pistalwhipped/RykmbZvujII/AAAAAAAAAjo/tJc_eaFvgQ4/s288/DSC02132.JPG\" align=\"right\" height=\"216\" hspace=\"4\" vspace=\"4\" width=\"288\" /></p>\nWe also saw a demonstration called \"Tiger Splash\" which was one of the most amazing things I\'ve seen. Zoo personnel running around with Bengal tigers trying to get the tigers to chase them around. The human performers would pretend to be wounded animals (walking on all fours, dragging a leg) and when the tigers would chase them they would run and jump into a 4 foot deep pool that was located in the center of the ring. It was spectacular!\n\nOn our third day we hiked up Pinnacle peak (about 2400 ft up) and took in the view. Another excellent day. The hike wasn\'t strenuous at all and we got to see some really amazing scenery along the way. It felt more like a park than a hiking trail, there were people jogging up the peak as well as entire families just hanging out at the rest areas.\n\nI am completely in love with the state of Arizona and everyone has asked me when we are moving out there. I don\'t know about living there but we are already planning our next visit. Check out a few of the pictures from the trip <a href=\"http://picasaweb.google.com/pistalwhipped/Arizona2007\" target=\"_blank\">here</a>.', '2011-05-01 03:34:43', 0, '')[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Holy-Crap-', '2007-12-10 06:00:00', 'Holy Crap!!', '<p style=\"text-align:center;\"><a href=\"http://www.pistalwhipped.net/up/loads/2007/12/indyskullposter-1.jpg\" target=\"_blank\" title=\"Indiana Jones Movie Poster\"><img src=\"http://www.pistalwhipped.net/up/loads/2007/12/indyskullposter-1.jpg\" alt=\"Indiana Jones Movie Poster\" border=\"0\" height=\"667\" hspace=\"4\" vspace=\"4\" width=\"450\" /></a></p>', '2011-05-01 03:34:43', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Google-8220-Knols-8221-and-the-Readius', '2007-12-15 06:00:00', 'Google &#8220;Knols&#8221; and the Readius', 'The Google buzz machine is in overdrive again with the announcement of \"Knols\" a Wikipedia competitor that is going into private beta. Check out the <a href=\"http://googleblog.blogspot.com/2007/12/encouraging-people-to-contribute.html\" target=\"_blank\">blog posting</a> and <a href=\"http://www.google.com/help/knol_screenshot.html\" target=\"_blank\">screen-shot</a> when you have a chance.\n\n<strong>Bigger news:</strong>\n\nPolymer Vision a phillips spin-off has announced that they have produced the first foldable display. Not only that but they are planning to release these new displays in their new 3g capable <a href=\"http://www.engadget.com/2007/02/19/polymer-visions-readius-rollable-display-gets-face-time/\" target=\"_blank\">device named the \"Readius\"</a>.', '2011-05-01 03:34:43', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Nerd-Sniping', '2007-12-17 06:00:00', 'Nerd Sniping', '<a href=\"http://xkcd.com/356/\" target=\"_blank\" title=\"Nerd Sniping (xkcd.com)\"><img src=\"http://www.pistalwhipped.net/up/loads/2007/12/nerdsniping.jpg\" alt=\"Nerd Sniping\" border=\"0\" height=\"198\" hspace=\"4\" vspace=\"4\" width=\"199\" /></a>', '2011-05-01 03:34:43', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Unix-not-Y2k38-Compatible-', '2007-12-17 06:00:00', 'Unix not Y2k38 Compatible???', '<a href=\"http://blog.apocalypse.org/wp-content/uploads/2006/10/Picture%201-1.png\" target=\"_blank\" title=\"The End of the World\"></a>\n<p style=\"text-align:center;\"><a href=\"http://www.acreativedesktop.com/endofworld.html\" target=\"_blank\" title=\"The End of the World\"><img src=\"http://www.pistalwhipped.net/up/loads/2007/12/picture-1-1.jpg\" alt=\"//www.acreativedesktop.com/endofworld.html\" border=\"0\" height=\"228\" hspace=\"4\" vspace=\"4\" width=\"450\" /></a></p>\nWhere was I when <a href=\"http://www.y2k38.info/\" target=\"_blank\">this was written</a>??? Oh, right. I was a finishing my Sophomore year in High School. Oh well. Any way, apparently the Unix operating system (and I would think any 32-bit operating system) will fail in the year 2038. Well, January 19, 2038 3:14:08 UTC to be precise. <!--more-->\"Why?\" You ask? Well Unix calculates time as the number of seconds since January 1, 1970 12:00:00. Each second is represented as an integer and the maximum value for a 32-bit integer is 2,147,483,647 which, when translated to seconds, equals 1/19/2038 3:14:07.\n\nThe author of the article above believes that 1 of two things will happen as a result of the failure. The software will either crash horribly or will simply roll back the date to 1/1/1970 at midnight. There isn\'t really a whole lot to worry about here though as by the year 2030 most operating systems will be in 64-bit land and probably even in 128-bit where the problem will be set to re-occur only 290 billion years in the future plus or minus a billion. The article is a pretty interesting read and will satisfy the geek in you for a little while.', '2011-05-01 03:34:43', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Happy-Holidays', '2007-12-23 06:00:00', 'Happy Holidays', '<p style=\"text-align:center;\"><img src=\"http://www.pistalwhipped.net/up/loads/2007/12/full351757space_hopper_6.jpg\" alt=\"santa &amp; batman\" border=\"0\" height=\"322\" hspace=\"4\" vspace=\"4\" width=\"440\" /></p>\n I\'ll be going dark for the next couple of days (sorry I\'ve been watching a lot of spy movies over the weekend) and more than likely won\'t have time to post an update so Happy Holidays to everyone out there and I\'ll see you all back here after the break!', '2011-05-01 03:34:43', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('runat-8221-server-8221-why-Why-', '2007-12-26 06:00:00', 'runat=&#8221;server&#8221; why??? Why!?!', '<p style=\"text-align:center;\"><img src=\"http://www.pistalwhipped.net/up/loads/2007/12/frustration2-thumb.jpg\" alt=\"copyright (c) www.esl-lesson-plan.com 2007\" height=\"287\" width=\"354\" /></p>\nI know I\'m not the first .net programmer to ask this question and I don\'t think I\'ll be the last. Why, oh why must we constantly include the runat=\"server\" attribute in our custom and pre-compiled web control declarations? To me it seems like this is unnecessary bloat that could be re-tooled to save developers more time and reduce headaches caused by forgetting it\'s inclusion.<!--more-->\n\nI\'m not asking for the runat=\"server\" attribute to be removed. Not at all. I\'m just stating that I think it was implemented in an inconvenient way and should be re-thought and re-designed. A blogger named <a href=\"http://www.mikeschinkel.com/\" target=\"_blank\">Mike Schinkel</a> posed <a href=\"http://www.mikeschinkel.com/blog/whyrunatserverforaspnet/\" target=\"_blank\">the same question</a> and a commenter replied:\n<blockquote>I understand your point, but the importance of [runat=\"server\"] is more for consistency and extensibility. If the developer has to mark some tags some ways (ie an \"asp:\" prefix) and in other cases using runat, then it creates more confusion. Also, this simplifies what is sent directly to the user agent as a Response.Write and what needs to be parsed by the ASP.NET engine. What if some user agent of the future has a name collision with one of the ASP.NET tags, it would be difficult otherwise to tell ASP.NET to ignore a tag.</blockquote>\n<strong>\"..is more for consistency and extensibility.\"</strong>\n<blockquote>\"Consistency is the last refuge of the unimaginative.\"\n- Oscar Wilde</blockquote>\nI\'m not sure why this person chose to argue consistency as one of his main points but it\'s a poor choice. He may as well have just said \"it is just done this way\". The runat attribute is required on all custom, pre-compiled or otherwise included web controls so why must it be specifically declared? Think about it in programming terms. If you have a literal string or integer littered throughout a class or function how likely would it be for you to replace that with a declared variable? I would do it 99% of the time.\n\n<strong>\"...this simplifies what...needs to be parsed by the ASP.NET engine.\"</strong>\n\nOkay, apparently they (Microsoft) have never heard of Regular Expressions? Why must we specifically tell the ASP.NET engine which controls are server controls when the work is already done via the Page\\Controls section of the web.Config when we include a control library? This seems overly redundant to me and reeks of poor implementation. The runat=\"server\" attribute is more like a legacy feature from 1.0 that for one reason or another (probably it\'s deep integration with the compiler and rendering engine) has not been removed yet.', '2011-05-01 03:34:43', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Don-8217-t-Forget-SQL-2008-Virtual-Event', '2008-01-03 06:00:00', 'Don&#8217;t Forget: SQL 2008 Virtual Event', 'Hey this is just a reminder to everyone, don\'t forget that the SQL 2008 Virtual Event is open for registration. You can do so over at <a href=\"http://events.unisfair.com/rt/sql~jan08/?code=solidqweb\" target=\"_blank\">http://events.unisfair.com/rt/sql~jan08/?code=solidqweb .</a>\n\nTopics include:\n<ul>\n	<li>Developing Data-Centric Applications with SQL Server 2008</li>\n	<li>Getting a Handle on Data Cleansing in SSIS</li>\n	<li>Performance Tuning</li>\n	<li>Reporting Services with SQL Server 2008</li>\n	<li>SQL Server Virtualization</li>\n</ul>\nThe even starts on Jan 24th and runs from 11am to 4:15pm EST. Register now!', '2011-05-01 03:34:43', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('I-don-8217-t-think-I-have-that-kind-of-time', '2008-01-05 06:00:00', 'I don&#8217;t think I have that kind of time', '<a href=\"http://www.pistalwhipped.net/bl/og/../../up/loads/2008/01/waiting.jpg\" title=\"Waiting\">\n<p style=\"text-align:center;\"><img src=\"http://www.pistalwhipped.net/up/loads/2008/01/waiting.jpg\" alt=\"Waiting\" border=\"0\" height=\"244\" width=\"418\" /></p>\n\n</a>\n\nSo I got my new Dell PC late friday night and it is awesome. Vista is not the greatest operating system and I would much rather have XP pro or Media Center 2k5 on here but it works and it works <strong>fast</strong>. The dual-core 5ghz really shows on this thing. Except, apparently when I\'m transferring files from my older PC to the new one. I have about 9gb of photos on my old pc that I am still in the process of moving over and judging from the screen shot above, I\'ll be in the process of moving over for a long time.', '2011-05-01 03:34:43', 0, '')[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('What-a-battle-8217-switchEditors-is-not-defined-8217-in-WordPress', '2008-02-04 06:00:00', 'What a battle: &#8217;switchEditors is not defined&#8217; in WordPress', 'Okay, so the blog looks like it is back up and running. The front-end has been up for about 2-3 hours now but the admin section has been a royal pain in the ass to get back to a livable state. What happened was that earlier today I noticed that several of my toolbar items had disappeared from my edit page (most notably the \"More\" page break button) and I could no longer toggle between Visual and Code view.\n\nAfter <a href=\"http://wordpress.org/search/switchEditors+is+not+defined?forums=1&amp;bugs=1\" target=\"_blank\">researching</a> <a href=\"http://wordpress.org/search/switchEditors+is+not+defined?forums=1\" target=\"_blank\">the</a> <a href=\"http://wordpress.org/support/topic/145002\" target=\"_blank\">problem</a> <a href=\"http://wordpress.org/support/topic/117860?replies=2\" target=\"_blank\">it</a> <a href=\"http://mu.wordpress.org/forums/topic.php?id=5701&amp;page\" target=\"_blank\">looked</a> like I had my work cut out for me. To make a long story short I ended up doing all of the following steps:\n<ol>\n	<li>Upgraded my wordpress installation</li>\n	<li>down graded my wordpress installation</li>\n	<li>added / removed a new MCE</li>\n	<li>added / removed another MCE</li>\n	<li>edited about 5 -6 wordpress php files</li>\n	<li>reverted those 5 - 6 wordpress php files</li>\n	<li>upgraded word press again</li>\n</ol>\nUntil, finally, I gave up and implemented the ugliest hack ever (I am not sure why wordpress seemingly \'forgot\' my toolbar settings) <a href=\"http://wordpress.org/support/topic/145002\" target=\"_blank\">which I discovered over at this site</a> (last post to the thread). If anyone has figured out how to fix this (in such a way that it doesn\'t feel so klooged together) then please speak up and let me know.', '2011-05-01 03:34:43', 0, '')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Jabba-the-Cat', '2008-02-19 06:00:00', 'Jabba the Cat', '<p align=\"left\">&nbsp;</p>\n<p style=\"text-align:center;\"><img src=\"http://pistalwhipped.files.wordpress.com/2008/03/jabbacat2.jpg\" alt=\"Jabba The Cat\" /></p>', '2011-05-01 03:34:43', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.4ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('FIXED-Broken-Visual-Button-No-8220-More-8221-Tag-Button', '2008-02-20 06:00:00', 'FIXED: Broken Visual Button &amp; No &#8220;More&#8221; Tag Button', 'So recently <a href=\"http://wordpress.org/support/topic/148796\" target=\"_blank\">I had some issues with my wordpress installation</a> and <a href=\"http://www.pistalwhipped.net/bl/og/2008/02/04/what-a-battle-switcheditors-is-not-defined-in-wordpress/\" target=\"_blank\">was forced to go through some pretty insane steps to rectify the problems</a> I was having. The main issues were that my \"Split post with More tag\" button was missing and the \"Code\" tab in the MCE no longer worked. I fixed both of these issues by performing the following edits:\n\n<!--more-->\n\n1. look for a line that equals:\n<blockquote>&lt;?php\n$my_drafts = get_users_drafts($user_ID);</blockquote>\n2. Just before this line paste:\n<blockquote>&lt;script src=\"&lt;?php echo get_option(\'siteurl\') ?&gt;/wp-includes/js/tinymce/plugins/wordpress/editor_plugin.js\" type=\"text/javascript\"&gt;&lt;/script&gt;</blockquote>\nThis fix, apparently, only solved my problems for posting a new article. When I saved a draft and later brought it up for editing my previous problems reared their ugly heads once again. This is due to wordpress using different pages for editing drafts and starting a new article, which seems like an odd choice to me. Why wouldn\'t you save these kinds of hassles by using one page to handle both requests? Okay, I\'m starting to ramble, back to the problem.\n\nIn order to fix the same problems I was having in my post-new.php file in the post.php file the edits are essentially the same (one additional new line must be added) they just occur in different areas.\n\n1. In the post.php file locate the line that reads:\n<blockquote>case \'edit\':</blockquote>\n2. After that line locate a line that reads:\n<blockquote>wp_enqueue_script(\'prototype\');</blockquote>\n3. just after that line paste:\n<blockquote>wp_enqueue_script(\'interface\');</blockquote>\n4. after the line you just pasted locate a line that looks like:\n<blockquote>require_once(\'admin-header.php\');</blockquote>\n5. paste the following code after the line above:\n<blockquote>?&gt;\n&lt;script src=\"&lt;?php echo get_option(\'siteurl\') ?&gt;/wp-includes/js/tinymce/plugins/wordpress/editor_plugin.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;?php</blockquote>\nNow save the files and upload them to your wp-admin directory and you should now be able to edit via the MCE problem free. I am not sure why these edits must be made and also why this isn\'t something that others have had to encounter as well. My search on WordPress.org\'s support site yielded few results so if anyone out there has had these problems and solved them another way please drop a comment.\n\n<em><strong>Update:</strong></em> I completely missed the Page.php and Page-New.php files. Here are the steps to correct the problems with those files.\n\nFor the Page.php file:\n\n1. find the line that equals:\n<blockquote>require_once(\'admin-header.php\');</blockquote>\n2. after this line paste:\n<blockquote>?&gt;\n&lt;script src=\"&lt;?php echo get_option(\'siteurl\') ?&gt;/wp-includes/js/tinymce/plugins/wordpress/editor_plugin.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;?php</blockquote>\nFor the Page-New.php file:\n\n1. find the line that equals:\n<blockquote>&lt;?php if ( (isset($_GET[\'posted\']) &amp;&amp; $_GET[\'posted\'])  || isset($_GET[\'saved\'])  ) : ?&gt;</blockquote>\n2. before this line paste:\n<blockquote>&lt;script src=\"&lt;?php echo get_option(\'siteurl\') ?&gt;/wp-includes/js/tinymce/plugins/wordpress/editor_plugin.js\" type=\"text/javascript\"&gt;&lt;/script&gt;</blockquote>', '2011-05-01 03:34:43', 0, '')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.4ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('8-Best-Firefox-Plugins', '2008-02-21 06:00:00', '8 Best Firefox Plugins', '<p style=\"text-align:center;\"><img src=\"http://pistalwhipped.files.wordpress.com/2008/03/firefox.jpg\" alt=\"FireFox Logo\" /></p>\nI\'ve been using Firefox since version 1.5. The main feature that drew me to the open source browser was the that it supported user-generated plugins. I downloaded FF and stumbleupon and I was hooked. Since then I\'ve tried dozens of plugins and some have made me wonder how I used the internet before they came along (like stumbleupon and googlepedia) while some have made me wonder simply \"why?\".\n\n<!--more-->\n\nThe list below is comprised of the former type of plugin. These are the plugins that I could not imagine getting through my day-to-day routine without.\n\n1. StumbleUpon (<a href=\"https://addons.mozilla.org/en-US/firefox/addon/138\" target=\"_blank\">download</a>)\nI honestly cannot remember which site or person turned me on to SU but whomever did is evil. SU is the most addictive experience I have been a part of since World of Warcraft. It is the perfect marriage of user generated content within an online community and it symbolizes Web 2.0 perfectly.\n\n2. Google Reader Notifier (<a href=\"https://addons.mozilla.org/en-US/firefox/addon/3977\" target=\"_blank\">download</a>)\nThe premise for this plugin is simple. If you have a Google Reader account this plugin will scan your incoming articles and alert you to how many you have and in what folder they are stored.\n\n3. GooglePedia (<a href=\"https://addons.mozilla.org/en-US/firefox/addon/2517\" target=\"_blank\">download</a>)\nI\'m not sure why this plugin isn\'t offered by Google. It will take your google search query and run it against Wikipedia and embed the most relevant article into the search results page. This plugin can slow down the loading of the results page (but it can be disabled easily by clicking the \'hide googlepedia link\').\n\n4. Morning Coffee (<a href=\"https://addons.mozilla.org/en-US/firefox/addon/2677\" target=\"_blank\">download</a>)\nFor me this plugin is more like after dinner cocktail. I use this plugin more at night to catch up on google reader, twitter, the blog, gmail and other websites without having to remember them.\n\n5. CustomizeGoogle &amp; GooglePreview (<a href=\"https://addons.mozilla.org/en-US/firefox/addon/743\" target=\"_blank\">download</a>) &amp; (<a href=\"https://addons.mozilla.org/en-US/firefox/addon/189\" target=\"_blank\">download</a>)\nI probably should have included all the google-based plugins together but oh well. CustomizeGoogle is perfect at removing unwanted ads from the search results page while GooglePreview does an excellent job at showing me the page I am about to navigate to beforehand.\n\n6. FoxyTunes (<a href=\"https://addons.mozilla.org/en-US/firefox/addon/219\" target=\"_blank\">download</a>)\nWhat can I say, this plugin will handle Windows Media Player and iTunes but it will also handle more obscure media sources like Pandora, MusikCube, Las.fm and even Xbox Media Center. Plus it will embed your \"currently listening to\" in your blog or forum posts.\n\n7. Download Statusbar (<a href=\"https://addons.mozilla.org/en-US/firefox/addon/26\" target=\"_blank\">download</a>)\nWhen I downloaded Firefox I was very happy that it eliminated the annoying download status window that plagues IE to this very day. But I eventually grew tired of having to hide and show this window to check on long downloads. Enter the Download Statusbar plugin. This baby creates a small, unobtrusive taskbar within FF that displays your current (and past) downloads. It will even color-code them by download speed!\n\n8. Firebug (<a href=\"https://addons.mozilla.org/en-US/firefox/addon/1843\" target=\"_blank\">download</a>)\nEvery web developer needs this plugin. I wish with every ounce of my soul that IE had a plugin like this. Firebug has solved many a javascript/css/html nightmare for me (even those I encountered only in IE). This plugin can cause some sites to run slowly but it can be disabled very easily.', '2011-05-01 03:34:43', 0, '')[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Perception-is-reality', '2008-03-03 06:00:00', 'Perception is reality', 'From Coding Horror: <a href=\"http://www.codinghorror.com/blog/archives/001058.html\" title=\"Actual Performance, Perceived Performance\" target=\"_blank\">A really interesting article</a> that gets into depth about why it is important for you to understand how users perceive performance in your application vs how your application actually performs.  The article explains why file copying in Windows Vista seems to take longer than in Windows XP. I actuality Vista is faster (it\'s file copy algorithm has been updated to make copying files a lot faster than XP but Vista introduces some features that cause users to perceive it\'s performance as slower.\n\nA really interesting read.', '2011-05-01 03:34:43', 0, '')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('C-Extension-Methods', '2008-03-20 05:00:00', 'C# Extension Methods', 'So over the last few days I\'ve been screwing around with C# extension methods in Visual C# 2008 Express and I have to say they are fast becoming my favorite addition to the .NET framework. What started me on extensions was the fact that in Perl you can do the following with string manipulation:\n\n<!--more-->\n\n[sourcecode language=\"python\"]\n#!/usr/bin/perl\n# set a string variable\n$var= \"=\";\n# repeat it\nprint($var x 7);\n[/sourcecode]\n\n--------- output ---------\n=======\n\nWhich is a relatively easy syntax compared to what you would have to do in C#. I was able to replicate this feature of Perl easily with the following code in C#:\n\n[sourcecode language=\"csharp\"]\npublic static class StringExt\n{\n public static string Replicate(this string s, int times)\n {\n string hold = s;\n for (int i = 1; i <= times - 1; i++)\n {\n hold += s;\n }\n\n return hold;\n }\n}\n\n//replicate a string a number of times\n\nConsole.WriteLine( \"=\".Replicate(7) );[/sourcecode]\n\n--------- output ---------\n=======\n\nNot bad!', '2011-05-01 03:34:43', 0, '')[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Wordpress-2-5-released-', '2008-03-31 05:00:00', 'Wordpress 2.5 released!', '<a href=\"http://pistalwhipped.wordpress.com/2008/03/31/wordpress-25-released/wordpressorg/\" target=\"_blank\" rel=\"attachment wp-att-121\" title=\"WordPress.org\"><img src=\"http://pistalwhipped.files.wordpress.com/2008/03/wordpressorg.png\" alt=\"WordPress.org\" border=\"0\" height=\"270\" width=\"428\" /></a>\n\nI am so excited about this release of wordpress. Whats new? load-time improvements, built-in Gravatar and gallery support (YES!!!), built-in plugin upgrade feature oh, yeah and the entirely new admin interface and customizable dashboard screen. What am I most excited about? Well aside from the already mentioned bitchin\' admin interface I\'m really excited about the code improvements (more detailed comments and database optimizations FTW).\n\nWhen can wp.com users (like yours truly) expect some 2.5 action? Within the next week or so you should see the new interface in your admin consoles.', '2011-05-01 03:34:43', 0, '')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Wp-com-hosted-blogs-now-on-2-5', '2008-04-04 05:00:00', 'Wp.com hosted blogs now on 2.5', 'What a great way to end the week. I logged in to my dashboard tonight to prep a post for tomorrow and found that my hosted wp.com blog has now been upgraded to WordPress 2.5. Excellent! Right now I am really digging the new look of the admin section (full-screen editing ftw!) and I can\'t wait to see how the blog performs with the new performance enhancements.\n\nExpect a lot more posts about WP 2.5 over the next couple of days.', '2011-05-01 03:34:43', 0, '')[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('WordPress-2-5-Day-1-Thoughts', '2008-04-06 05:00:00', 'WordPress 2.5 Day 1 Thoughts', 'I\'ve been really excited about WordPress 2.5 being released and was really depressed when I left my web host because I didn\'t think they would be upgrading anytime soon. I was really wrong. About a week after it was released to the public WP 2.5 was installed on all hosted WP.com accounts and I\'ve been a happier blogger ever since.\n\n<!--more-->\n\nI\'m not going to talk a lot about the new look as I think others have covered it enough and most of us are of the same opinion: it rocks. Instead I\'d like to talk about the changes that I am most excited about.\n<h3><strong>Galleries</strong></h3>\nI\'ve set up photo galleries on many platforms, PhpNuke, Nucleus CMS, WP, Greymatter and MovableType to name a few. Out of all of those, I had the least trouble with wordpress. However I still had to download a plugin that wasn\'t supported by wordpress and I wasn\'t sure if it would be around after six months.\n\nThe gallery function in WP 2.5 is excellent. My only gripe is that it seems to take a while for my uploaded pictures to show up in the gallery tab but I assume this is just due to excessive load on the server.\n<h3>Writing</h3>\nThe new editor is excellent. I am very happy with the full-screen mode. It allows me to focus on what I am typing which makes editing and reviewing that much easier. When not in fullscreen mode the UI of the writing page is just like the rest of wordpress. It just feels right.\n<h3>Speed</h3>\nWordpress 2.5 <em>feels</em> faster. I\'d have to have my old 2.3.3 version of WP back to do a comparison (please no!) but 2.5 just feels faster to me. All the pages respond snappily and posting doesn\'t take as long as it used to.\n\nThe WP team has definitely set the bar for all other blog platforms and they\'ve set it pretty damn high. <a title=\"Katz Web Design Review of WordPress 2.5\" href=\"http://katzwebdesign.wordpress.com/2008/04/04/wordpress-dot-com-finally-updates-to-2-point-5-a-review/\" target=\"_blank\">Katz Web Design</a> asked \"<em>who would want to use Blogger.com?</em>\" and I think that is the perfect question. After experiencing WP 2.5 who would use any other blog software? Anyone? Bueller? Bueller?', '2011-05-01 03:34:43', 0, '')[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Our-roommates', '2008-04-06 05:00:00', 'Our roommates', 'Just testing out this new gallery system, posting some pictures of our two roommates: Manny (the large all black cat-in-the-box) and Shiva (the White, Grey and Black lazy girl on the pillow).\n\n[gallery] ', '2011-05-01 03:34:43', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Care-about-your-code', '2008-04-06 05:00:00', 'Care about your code', '<a title=\"Jeff Perrins blog\" href=\"http://devlicio.us/blogs/jeff_perrin/default.aspx\" target=\"_blank\">Jeff Perrin</a> posted <a title=\"Self Concious Development\" href=\"http://devlicio.us/blogs/jeff_perrin/archive/2008/04/04/self-conscious-development.aspx\" target=\"_blank\">a great one-liner</a> today:\n<blockquote>Write code as if you care what others think about what you’ve written.</blockquote>\nI couldn\'t agree with this sentiment more. I do this at work all the time. I worry about what my peers will think when they look at the code I\'m writing. And you know what? It really helps me to take extra steps to ensure that the code I write is code that I wouldn\'t worry about handing off to a fellow co-worker.\n\nI think all developers should take Jeff\'s advice and embrace self conscious development.', '2011-05-01 03:34:43', 0, '')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Converting-a-Security-Identifier-from-binary-to-string', '2008-04-07 05:00:00', 'Converting a Security Identifier from binary to string', 'Just in case you ever want to convert a binary representation of a Windows Security Identifier (SID) to it\'s friendlier string version:\n\nImagine we have a binary sid that is:\n<pre>0x010500000000000515000000F2EBB9149329116C5E3528360E040000</pre>\nThat doesn\'t look too inviting does it? Lets break it out into segments for easier reading.\n<pre>0 [0x01] \n1 [05] \n2 [000000000005] \n3 [15000000] \n4 [F2EBB914] \n5 [9329116C] \n6 [5E352836] \n7 [0E040000]</pre>\nSegments 0 through 2 are used by Windows to validate the SID. 0 is the version number of the SID; currently, all Windows operating systems use \"1\" as the version. 1 tells us that there are 7 segments in this SID (number of dashes minus 2). Segment 2 states that this sid has a top level authority of 5 which equals <strong>SECURITY_NT_AUTHORITY</strong>. (for a better description of what each security authority does please see <a title=\"Well-known SIDs\" href=\"http://msdn2.microsoft.com/en-us/library/aa379649(VS.85).aspx\" target=\"_blank\">this KB article</a>)\n\nSegments 3 through 6 are little-endian 32-bit integers that describe the issuer of the SID. 7 is a 32-bit little-endian integer called the \"Relative ID\". This value is the id of the user on the machine that issued the SID. It is important to remember that these values are stored as little-endians because this will factor in when we translate them into the final SID.\n\nthe first part of the sid is the easiest to translate. In our example sid above the first 3 segments become \"S-1-5\" because every sid is prefixed with \"S\" and we drop segment 3 as it is only used in validation. The next part is where we translate the machine id and user id and this can be confusing when done for the first time. Since the values are stored in little-endian format we have to reverse the order of the bits so:\n<ul>\n	<li><strong>15000000 </strong>becomes 00000015 which translates to (hex to dec) 21</li>\n	<li><strong>F2EBB914 </strong>becomes 14b9eb2f which translates (hex to dec) to 347728882</li>\n	<li><strong>9329116C</strong> becomes 6c112993 which translates (hex to dec) to 1813064083</li>\n	<li><strong>5E352836</strong> becomes 3628355E which translates (hex to dec) to 908604766</li>\n</ul>\nNow we have our machine identifier and our SID is now\n<pre>S-1-5-21-347728882-1813064083-908604766</pre>\nAll we have to do now is translate the user id which follows the same process as the machine id so:\n<ul>\n	<li><strong>0E040000</strong> becomes 0000040e which translates (hex to dec) to 1038</li>\n</ul>\nSo we are all done and our final sid is:\n<pre>S-1-5-21-347728882-1813064083-908604766-1038</pre>', '2011-05-01 03:34:43', 0, '')[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Enumerate-windows-users-groups', '2008-04-08 05:00:00', 'Enumerate windows users&#039; groups', 'The code below will enumerate which groups a domain / local user belongs to.\n\n[sourcecode language=\"csharp\"]\n\nprivate static string GetUserGroups(string strUser)\n{\n string groups = \"\";\n DirectoryEntry de = null;\n try\n {\n\n string entryName = String.Format(\"WinNT://{0},user\",\n strUser.Replace(\"\\\\\", \"/\"));\n\n de = new DirectoryEntry(entryName);\n\n object oGroups = de.Invoke(\"Groups\");\n foreach (object o in (IEnumerable)oGroups)\n {\n DirectoryEntry group =\n new DirectoryEntry(oGroups);\n groups += group.Name + \",\";\n }\n }\n catch (Exception)\n {\n throw;\n }\n return groups;\n}\n\n[/sourcecode] ', '2011-05-01 03:34:43', 0, '')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.3ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Red-Pepper-Omelette', '2008-04-20 05:00:00', 'Red Pepper Omelette', '[gallery]\n\nThis recipe serves 2 people and is an excellent Sunday morning breakfast treat.\n\nIngredients:\n<ul>\n	<li>2 Red Peppers</li>\n	<li>1/2 Yellow Pepper (Roughly Chopped)</li>\n	<li>1/2 Orange Pepper (Roughly Chopped)</li>\n	<li>1 Ham Steak (1/4\")</li>\n	<li>2 Eggs</li>\n	<li>1/4 Onion (Roughly Chopped)</li>\n	<li>6 Asparagus Stalks (cut into small bite-sized pieces)</li>\n	<li>2 tablespoons Olive Oil</li>\n	<li>1/2 cup sliced Asiago cheese</li>\n	<li>1 teaspoon salt</li>\n	<li>1 teaspoon pepper</li>\n</ul>\nBegin by cooking the ham steak over low-medium heat. You will want to brown it on both sides (5-6 minutes on each side). Sauté the asparagus, onion, yellow and orange peppers in heated olive oil along with the salt and pepper for 5-7 minutes. The asparagus should still be crisp.\n\nRemove the tops and centers of the red peppers taking care not to pierce or damage the sides of them. These will serve as your bowls for the dish.\n\nAt this point it is safe to start the eggs. I scrambled mine with a little butter and salt but you may want to use a sunny-side-up presentation which will work well too. Check the ham and after it has browned on both sides remove it from the heat and begin cubing it.\n\nWhen the eggs are just about done it will be time to start plating. You will start by layering the ingredients in the following order (bottom to top) in each red pepper: Vegetables, Ham, Asiago cheese and finally the eggs. Garnish with a sprig of thyme and you are all set. Enjoy!', '2011-05-01 03:34:43', 0, '')[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('From-one-Noob-to-another', '2008-05-18 05:00:00', 'From one Noob to another', 'I\'m relatively new to the world of professional software development. I got my start hacking away in Visual Basic back in 1995 and didn\'t do any sort of development for money until 2004. Yeah I\'ve only been a software developer for 4 years now. It\'s sort of scary being a noob in real life. There is a lot to learn: the culture, what to say, what to do and most importantly what not to say and what not to do.\n\nThe hardest lesson I\'ve had to learn is to not be afraid of the words \"<em>I don\'t know</em>\". I used to assume I knew the answer to everything or that I was expected to know the answer. I was wrong. Nobody has all the answers and those people that seem to either A) are being asked the right questions or B) are making it up.\n\nIt\'s hard looking your boss in the face and saying that you don\'t know the answer to whatever he/she is asking you but it\'s even harder to say it later or worse: when he/she finds out on their own.\n\nAnother thing I\'ve learned that you never say \"yes\" under pressure. Ever. If someone comes to you to ask you for something and you are occupied or in a rush then simply say so. Say \"I\'m really busy right now, give me some time to come up with an accurate assessment\".\n\nIf the person needed the estimate 5 minutes ago then qualify your response: \"I\'ll need more time to get you an accurate assessment but my best guess right now would be...\". This can really save you some stress further down the line.\n\nAlso, Read. Read everything. Read blogs, MSDN Articles, newsgroups, magazines (\"Code\" is pretty good) and most importantly books. Programming books have almost fallen off the list of a programmers best learning tools but not entirely. I\'ve learned almost as much from books as I have from actually writing code. If you are unsure about exactly where to start <a title=\"Recommended reading for Developers\" href=\"http://www.codinghorror.com/blog/archives/000020.html\" target=\"_blank\">Jeff Atwood has a really good reading list</a>.', '2011-05-01 03:34:43', 0, '')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Useful-Code-Object-Enumerate', '2008-05-22 05:00:00', 'Useful Code: Object.Enumerate', 'I write a lot of javascript at my job and I often find myself in a horrible debugging situation where something isn\'t working right and I need a way to find out what properties and methods an object has quickly. I\'ve found the following code very helpful in determining this.\n\n[sourcecode language=\"jscript\"]\nObject.Enumerate = function(o,t) {\n var type = typeof t === \'undefined\' ? null : t;\n for(var key in o)\n {\n var value = o[key];\n\n // if the user did not pass a\n // type then \"alert\" each member\n if(type == null ||\n typeof value === type)\n {\n alert( key + \" is a \" +\n (typeof value));\n }\n }\n};\n[/sourcecode]\n\nThis is a really simple method that will take an object and (optionally) a string representation of a type (\"number\", \"object\", \"function\" or \"string\") and will display the members that match those types (or if no type is passed it will display each member and it\'s type).\n\n[sourcecode language=\"jscript\"]\n//basic object for testing\nvar x = {\n    int: 1,\n    str: \"\",\n    func: function() {\n\n    },\n    obj: {\n        str2: \"\"\n    }\n};\n\n// alerts each member of \'x\' and it\'s type\nObject.Enumerate( x);\n\n//alerts \"func is a function\"\nObject.Enumerate(x, \'function\');\n[/sourcecode]\n\nThis code is really similar to how prototype generates JSON information and can easily be modified to return various types of data back to the requestor.\n\nNote this code isn\'t perfect, for instance it doesn\'t account for Arrays which are typed as objects in javascript. Also it doesn\'t do any sort of recursion so it will only return top-level members.\n\nBut even so this is still the most used script in my library and I make sure I have it in all my projects. Hopefully it helps someone else.', '2011-05-01 03:34:43', 0, '')[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Useful-Code-Object-isArray-', '2008-05-29 05:00:00', 'Useful Code: Object.isArray()', 'When you need to find out the type of an object in JavaScript you would just do the following:\n\n[sourcecode language=\'jscript\']\nvar x = 1;\nalert(typeof x);\n[/sourcecode]\n\nWell what if x were an array? With x as an array a typeof incorrectly returns \"object\" as the type. Well that is just plain wrong. Enter the isArray() method.\n\n[sourcecode language=\'jscript\']\nObject.isArray = function(o) {\n return o && o.constructor === Array;\n};\n[/sourcecode]\n\nGranted it\'s not as simple as typeof but it does correctly identify array objects and is something every JavaScript developer should have in their <a href=\"http://www.hanselman.com/blog/GarageSalesAndGarageSaleQualityCode.aspx\" target=\"_blank\">code garage</a>.', '2011-05-01 03:34:43', 0, '')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Best-Practices-Are-Crap', '2008-05-30 05:00:00', 'Best Practices Are Crap', '<span class=\"entry-author-name\">Derik Whittaker</span> wrote <a title=\"What the &amp;@$#* is a \'Best Practice\' anyway?\" href=\"http://devlicio.us/blogs/derik_whittaker/archive/2008/05/30/what-the-amp-is-a-best-practice-anyway.aspx\" target=\"_blank\">a great article on best practices</a> and how \"best practice\" is essentially a bunch of bullshit:\n<blockquote>About the only thing [Best Practice] means is \'I have found that doing XYZ in ABC way works the best for me\'.  But just because it works for you, or even works for a group of people that does not mean it is \'Best Practice\'.</blockquote>\nI\'ve never really thought about it but this is 160% correct. Even now, at my current job we are reviewing Spiral, Agile, TDD and other SDLCs in order to conform to \"best practices\".\n\nThankfully my boss understands that what works for some may not work for all and if something isn\'t working we won\'t have time to try to screw with it. We\'ll have to move on and find something that fits better. This is exactly how \"best practices\" should be treated. As suggestions on how to handle software development.\n\nThere is no \"one ring to rule them all\" in our world. There are many rings each has a different fit to it and needs to be tried on to see where it fits best.', '2011-05-01 03:34:43', 0, '')[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Get-me-a-bucket-before-I-Plurk-', '2008-06-04 05:00:00', 'Get me a bucket before I Plurk!', '<em><a title=\"Plurk\" href=\"http://www.plurk.com\" target=\"_blank\">Plurk</a> is the latest micro-blogger site following in the footsteps of Twitter, Jaiku and Pownce. I heard a lot of talk about it on twitter and thought I would check it out. </em>\n\nYes, I signed up for <a title=\"My Plurk Page\" href=\"http://www.plurk.com/user/pistalwhipped\" target=\"_blank\">a plurk account</a> the other day and gave it quick run through. I didn\'t like it.\n\nRight of the bat the UI is really, really unattractive to me. I really hate side scrolling and Plurk makes you do an awful lot of it. How does their timeline UI work when you have <span style=\"text-decoration:line-through;\">Scobl-ish</span> Leo Laporte-ish numbers of followers?\n\nFinding and adding a friend on Plurk is not easy. Where the hell is the search? Currently you can only find new friends by importing them from another social networking site or by emailing them an invite. Fail.\n\nThe emoticons are not good, they look cheap and childish. I always disable them in any software that uses them but in Plurk I can\'t get away from them.\n\nThe ability to share youtube videos and flickr pictures is great although I don\'t like being limited to only youtube for video. This is much better than uploading a file (as in Pownce) since it allows me to use data from one service within another. And I like that.\n\nI have some smaller gripes but these are basically gripes that I have will all web 2.0 sites:\n<ul>\n	<li>No Open ID Support.</li>\n	<li>No G/Wavatar support</li>\n	<li>Limited or no data portability</li>\n</ul>\nWill I switch? No. Although Plurk has attractive features like sharing videos and pictures from other services and a mobile interface I still can\'t get over the timeline UI or the lack of search. I expect that Plurk will be revisiting their UI relatively soon and hopefully their name along with it.', '2011-05-01 03:34:43', 0, '')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('June-25th', '2008-06-25 05:00:00', 'June 25th', 'Some cool facts about June 25th.\n<ul>\n	<li>Mozambique celebrates their Independence Day</li>\n	<li>George A. Custer made his last stand at the battle of little bighorn in 1876</li>\n	<li>William \"The Father of the U.S. Airborne\" Lee died</li>\n	<li>George Orwell is born in 1903</li>\n	<li>Kim Campbell becomes the first female prime minister of Canada</li>\n	<li>in 1940 France officially surrenders to Nazi Germany</li>\n	<li>\"The Diary of Anne Frank\" is published</li>\n	<li>Elena Cornaro Piscopia becomes the first woman to receive a doctorate in philosophy in 1678</li>\n	<li>The Korean War begins in 1950</li>\n	<li>Anthony Bourdain is born in 1956</li>\n	<li>\"Our World\" is broadcast by satellite to 400 million viewers world-wide in 1967</li>\n</ul>', '2011-05-01 03:34:43', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Blogging-the-destupidifier', '2008-06-30 05:00:00', 'Blogging: the destupidifier', '<blockquote>The man who makes no mistakes does not usually make anything - William Connor Magee</blockquote>\nMore often than not I decide to not post something here because I worry about looking stupid. Fact is, I am stupid (and I write <a href=\"http://www.codinghorror.com/blog/archives/000099.html\" target=\"_blank\">shitty code with bugs</a> :D ) but I\'ve found that blogging helps me think things out.\n\nWhich is why I\'ve started a blog with my Sister and older brother over at <a title=\"The Family Blog\" href=\"http://barbozabloggers.com\" target=\"_blank\">BarbozaBloggers.com</a>. Don\'t worry I\'m not leaving Pistalwhipped! behind I\'m just thinking through different topics and decided that another blog would be a better venue.\n\nBlogging over at BB will also allow me to eliminate a lot of the bloggers block that I encounter with this blog.\n\nWhat I\'m hoping is to have one site stimulate discussion for the other allowing both to grow by feeding off of each others content.\n\nWe\'ll see how it turns out eh?  Oh, also: I get to hang out with my family which is a huge bonus.\n\nEDIT: i realized the other day that I forgot to include the link to Jeff Atwoods post. I\'ve updated the post to include it as it took on a whole different tone without it. :D', '2011-05-01 03:34:43', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Firefox-3-Select-multiple-lines-of-text', '2008-07-06 05:00:00', 'Firefox 3: Select multiple lines of text', 'I never knew this but Firefox 3 has a new feature that allows you to select multiple lines of text. Just use the ctrl key (cmd on Macs) while selecting text as you normally would.\n\nIf you find it isn\'t working check that you have firebug disabled as it is known to interfere with this feature.\n\nEnjoy!', '2011-05-01 03:34:43', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('And-I-can-t-even-fold-paper-into-a-crane-', '2008-07-21 05:00:00', 'And I can&#039;t even fold paper into a crane...', '[youtube=http://www.youtube.com/watch?v=e45J0SCXO5s&amp;eurl]\n\n*sigh*', '2011-05-01 03:34:44', 0, '')[0m
  [4;36;1mSQL (0.8ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.3ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('iTunes-doesn-t-grok-synching-', '2008-07-21 05:00:00', 'iTunes doesn&#039;t grok &quot;synching&quot;', 'I got an iPod Touch few weeks ago and I have to say that I am really happy with it. It has some hangups, like <em>how come I can\'t use it\'s WiFi connection to download new podcasts</em>, or <em>why can\'t I save a mp3 file locally from it\'s safari browser</em>, but for the most part it is a great piece of tech. The 2.0 firmware added a lot more worth with the App Store applications.\n\nHowever iTunes is still less than stellar. iTunes is like being chaperoned on your first date. If you want to hang out with the iPod, iTunes is going to tag along.\n\niTunes\' slow, ugly, and cluttered UI hasn\'t changed since the last time I used it ( version 6 dot something) and although finding and downloading podcasts has improved, how iTunes synchronizes to the iPod has not.\n\nWhen I connect my iPod to my pc iTunes loads and begins synchronizing my data. However, if I download new content iTunes ignores it and does not synch it.\n\nEven if I have specified that all types of that content are to be synched I will have to manually trigger iTunes to synchronize.\n\nThis is very bad from an end-user perspective. All developers writing software that synchronizes to/from an external datasource listen up: a user should not have to tell the software when to synch.\n\nA user should be given the option to manually synch or to completely disable auto-synching but by default the system should synch new content \"automagically\".\n\nDon\'t make end-users tell your software it\'s ok to do what it is supposed to do because we don\'t want the hassle.', '2011-05-01 03:34:44', 0, '')[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.4ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Code-comments-respect', '2008-07-22 05:00:00', 'Code comments = respect', 'I was browsing around Code Project the other day, I subscribe to their most recent submissions feed to watch for interesting samples, and I saw a unique take on a logging system.\n\nIt used IL replacement, much like TypeMock Isolator, to allow developers to enable/disable the logger without having to compile any code.\n\nIn theory, I haven\'t tried it out yet, you would be able to add this logging system to any project without coding anything.\n\nI downloaded the code and it\'s huge. 5 assemblies, over 2000 lines and there is some COM stuff in there. I notice two things. First it\'s all in c++. This is not a bad thing it\'s just not my first language.\n\nSo I start looking around for some comments to let me know what the heck is going on in this code.\n\nAnnnnnnd... hmmmm thats odd.\n\nThere are <strong>no</strong> comments. Not one. I checked the author notes on the original submission article to see if this was an error and there was an updated link.\n\nNope. Nothing. It takes me a minute but near the bottom of the post I see why there are no comments.\n\nThe author writes:\n<blockquote>\"I like to think I write self-documenting code so I tend to not have any comments in my code.\"</blockquote>\nI instantly deleted the code from my system. My thought is if the author of this code didn\'t think it was worthy of some kind of explanation then I am certainly not going to waste my time with it.\n\nComments aren\'t just some \"nice to have\" thing. They show that you actually care about what you are putting out there and they show your thought process throughout the codes execution. If you don\'t care about that then why would I?\n\nI\'m not saying that every line, function call and variable needs a comment but any programmer worth his salt should put some form of documentation into his/her code. It\'s a sign of respect.\n\nSo my fellow developers let\'s respect each other enough to document what we put out into the world. What do you say?', '2011-05-01 03:34:44', 0, '')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('DateTime-to-Friendly-Date', '2008-09-08 05:00:00', 'DateTime to &quot;Friendly&quot; Date', 'I really like it when an application presents dates in a friendly \"n Hours Ago\" format. Mostly because I\'m lazy and hate to do extra brain-work. <a title=\"Pretty Date.js\" href=\"http://ejohn.org/blog/javascript-pretty-date/\" target=\"_blank\">John Resig created \"pretty date\"</a> and it\'s insanely useful. It also plugs into JQuery very easily.\n\nBut on the project I am working on it made more sense to provide this functionality within the database. So I created a pretty date function for SQL.\n\n[sourcecode language=\"SQL\"]\nCREATE FUNCTION dbo.GetFriendlyDateTimeValue\n(\n	@CompareDate DateTime\n)\nRETURNS nvarchar( 48 )\nAS\nBEGIN\n	DECLARE @Now DateTime\n	DECLARE @Hours int\n	DECLARE @Suff nvarchar(256)\n	DECLARE @Found bit\n\n	SET @Found = 0\n	SET @Now = getDate()\n	SET @Hours = DATEDIFF(MI, @CompareDate, @Now)/60\n\n	IF @Hours <= 1\n	BEGIN\n		SET @Suff = \'Just Now\'\n		SET @Found = 1\n		RETURN @Suff\n	END\n\n	IF @Hours < 24\n	BEGIN\n		SET @Suff = \' Hours Ago\'\n		SET @Found = 1\n	END\n\n	IF @Hours >= 8760 AND @Found = 0\n	BEGIN\n		SET @Hours = @Hours / 8760\n		SET @Suff = \' Years Ago\'\n		SET @Found = 1\n	END\n\n	IF @Hours >= 720 AND @Found = 0\n	BEGIN\n		SET @Hours = @Hours / 720\n		SET @Suff = \' Months Ago\'\n		SET @Found = 1\n	END\n\n	IF @Hours >= 168 AND @Found = 0\n	BEGIN\n		SET @Hours = @Hours / 168\n		SET @Suff = \' Weeks Ago\'\n		SET @Found = 1\n	END\n\n	IF @Hours >= 24 AND @Found = 0\n	BEGIN\n		SET @Hours = @Hours / 24\n		SET @Suff = \' Days Ago\'\n		SET @Found = 1\n	END\n\n	RETURN Convert(nvarchar, @Hours) + @Suff\n\nEND\n[/sourcecode] ', '2011-05-01 03:34:44', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Palindrome-Batch', '2008-09-09 05:00:00', 'Palindrome Batch', 'This was originally <a href=\"http://stackoverflow.com/questions/52002/how-to-check-if-the-given-string-is-palindrome#52031\" target=\"_blank\">posted by Pam over on StackOverflow</a> but I thought it was too awesome and had to share it, just in case you want validate a palindrome from the command line one day.\n\nEDIT: I removed the code and provided a link to the comment at StackOverflow. You can check out Pams\' blog here: <a href=\"http://pm-db.blogspot.com/\" target=\"_blank\">http://pm-db.blogspot.com/</a>', '2011-05-01 03:34:44', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Dear-Intarwebz-', '2008-09-10 05:00:00', 'Dear &quot;Intarwebz&quot;', '<a title=\"just. another. browser.\" href=\"http://www.google.com/chrome\" target=\"_blank\">It\'s called \"Chrome\"</a>. It happens to be made by Google. It\'s <strong>just. another. browser.</strong> Are we done? Can we move on as a society?\n\nEDIT: ok, so Chrome is fast. Really fast. I loaded <a href=\"http://nerget.com/rayjs/rayjs.html\" target=\"_blank\">Oliver Hunt\'s JavaScript Ray Tracer</a> in FireFox 3.0.3 and it took 30.393 seconds to complete a render. Under Chrome the render took less than 6.5 seconds.', '2011-05-01 03:34:44', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Prototype-to-C-Try-These-', '2008-10-01 05:00:00', 'Prototype to C#: Try.These()', 'The <a href=\"http://www.prototypejs.org\" target=\"_blank\">prototype javascript library</a> has a class (Try) and function called these(). This function accepts an array of functions as it\'s sole argument and it will execute each function in the array, in the order they are added, and return the result from the first function that executes without error. If none of the functions executes successfully undefined is returned.\n\nFor example:\n\n<pre><code class=\"prettyprint\">\nvar i = Try.These(\n function() { return 9 / 0; },\n function() { return 1; }\n);\n</code></pre>\n\nIf we ran the sample above i would equal 1 because the first function would encounter a division by zero error. However:\n\n<pre><code class=\"prettyprint\">\nvar h = 0;\nvar i = Try.These(\n function() { return 9 / h; },\n function() { return 1 / h; }\n);\n</code></pre>\n\ni will equal undefined in this example.\n\nWith the .Net framework\'s generics library we can achieve roughly the same results. We won\'t be able to assign an undefined value to the result but we can play around with the default keyword. :D\n\n<pre><code class=\"prettyprint\">\npublic class Try\n{\n public static T These(params Func[] delegates)\n {\n for (int i = 0; i &lt;= delegates.Length - 1; i++)\n {\n try\n {\n return (T)delegates[i]();\n }\n catch\n {\n\n }\n }\n return default(T);\n }\n}\n</code></pre>\n\nSo for example:\n\n<pre><code class=\"prettyprint\">\nstatic void Main(string[] args)\n{\n int i = 0;\n int y = Try.These(\n delegate() {\n int x = 0;\n return i / x;\n },\n\n delegate() {\n return ++i;\n });\n\n Console.Write(\"y is \" + y.ToString());\n}\n</code></pre>\n\nWill output\n\n<code>y is 0</code>', '2011-05-01 03:34:44', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Jquery-MVC-Web-Dev-Heaven', '2008-10-02 05:00:00', 'Jquery + MVC = Web Dev Heaven', 'So <a href=\"http://www.hanselman.com/blog/jQueryToShipWithASPNETMVCAndVisualStudio.aspx\" target=\"_blank\">Jquery is going to become part of Asp.net MVC</a>. First off, congrats to <a href=\"http://jquery.com/\" target=\"_blank\">the Jquery team</a>. They\'ve put out a really awesome product. Second, congrats to Microsoft for catching every .Net developer completely by surprise, proving, again, that they are listening to the community.\n\nI never really got into the microsoft javascript libraries that shipped with the ajax control toolkit because I found that I could do things much faster using external javascript libraries .\n\nIt will be interesting to see what Microsoft contributes back to the Jquery community in later updates to the ASP MVC product.', '2011-05-01 03:34:44', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Jeff-Johnson-Grandfather-of-the-Tree-View', '2008-10-05 05:00:00', 'Jeff Johnson: Grandfather of the Tree View', '<blockquote><span>Think of it as a hi-tech version of Woody Allen\'s statement that life is what happens to you while you\'re out doing something else. </span></blockquote>\nThe above excerpt was written by Jeff Johson, the creator of the Xtree file management software in his quasi-blog post title \"<a href=\"http://www.jeffreycjohnson.com/xtreehistory.html\" target=\"_blank\">An Unapologetic History of XTree</a>\" written in 1991, six years after Xtree 1.0 was released.\n\nJeff was the lead developer on the Xtree software project that originally started out as an in-house tool but would soon become one of the most popular applications ever released for the DOS operating system.\n\nWhat set Xtree apart from every other application was how it showed you where your files were located.\n<blockquote><span>Among the subjects discussed were how the program would represent the DOS directory structure on-screen, and what the screen might look like. I drew a picture of this outline on a white board. It looked like a tree that needed water. It was a swell picture but no one thought it could be done. Impossible, they said.</span>\n\nFamous last words.  </blockquote>\nXtree was the first application to use what we now call the Tree View it was created and shipped a full ten years before <a href=\"http://www.patentstorm.us/patents/5689662/claims.html\" target=\"_blank\">Microsoft would patent the idea and claim it as theirs</a>. Although never officially credited, Jeff Johnson created of one of the most widely used UI components since the button.\n\nSadly, Executive Systems, the makers of Xtree, were aquired by Central Point Software in 1993. Symantec bought Central Point Software in 1994 and stopped all production of Xtree in 1995.\n\nJeff never recieved any compensation from Microsoft when they added file manager to Windows and, in 1992 he contracted the flu and his health began to decline. Although he has not gotten any better he does plan to work on another file manager when his health improves.\n\nHis article is a must-read for anyone that used Xtree and a strongly suggested read for anyone that develops software professionaly. Next time you open folder view in Windows Explorer, think of Jeff Johnson and all the talented people at Executive Systems.\n\nI know I will.', '2011-05-01 03:34:44', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('How-I-got-into-programming', '2008-12-05 06:00:00', 'How I got into programming', 'I know exactly why I got into programming. I\'m not so sure when it happened but I do know why.\n\nI was always obsessed with understanding how things worked. I <strong>had</strong> to know. Everything had to be taken apart and then put back together, whenever my dad or mom would throw out some piece of computer hardware or other machinery I would ask to see it before they did.\n\nThen I would retreat to my room and take whatever it was apart and see how it did what it did. Even if I didn\'t really understand what was going on with whatever I was taking apart in the end it was still fun and exciting. Transformers were, of course, my favorite toys.\n\nI think it was late 1995 / early 1996 when my dad bought me a copy of Visual Basic 4.0 at one of our local computer shows. I remember being really excited because I would finally figure out how programs like WordPerfect, xTree, Windows, and Commander Keen really worked.\n\nUnfortunately my copy of Visual Basic never really showed me how Windows or Commander Keen worked but it kept me occupied for that whole summer and opened me up to a whole world of new things to figure out.\n\nI know exactly why I got into programming. I\'m not so sure when it happened but at least I know why.', '2011-05-01 03:34:44', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('2000-2008-What-I-ve-Learned', '2008-12-08 06:00:00', '2000 - 2008 What I&#039;ve Learned', 'I\'ve always wanted to write an end-of-the-year summary post that would explain some of the lessons I learned during that year. For one reason or another I\'ve never done this and I figured that it was time to start. So to make up for my slacking I assembled a list of some of the lessons I\'ve learned over the last 8 years.\n<ul>\n	<li>Never under any circumstances store a password in plain-text.</li>\n	<li>Do not insert unfiltered strings into a query. Ever.</li>\n	<li>Users aren\'t stupid. They are clever. Like foxes. Like foxes with augmented AI Skynet brains. They will do things you would never think of in 1 x 10^1000 years.</li>\n	<li>Develop and test on the same platform / permissions level that your app will run under. Trust me, this will save you serious future debugging time.</li>\n	<li>And on that note: Test, test, test, test.</li>\n	<li>Regular expressions work 90% of the time but you only really need them 10% of the time.</li>\n	<li>If something doesn\'t feel right it probably isn\'t. If you can fix it fast do it, otherwise root out code smell and refactor in your down-time.</li>\n	<li>XXXX technology isn\'t always the answer. Be pragmatic. Solve problems as easily as possible. We exist to reduce and handle complexity in non-complex ways.</li>\n	<li>Open source is a good thing.</li>\n	<li>Contribute to or start an open source project. Extra XP and a good resume bullet.</li>\n	<li>Did I mention test, test, test, test.</li>\n	<li>Only re-invent what you absolutely have to. Would you rather spend a week implementing and testing your own GridView or install a commercial control in a day?</li>\n	<li>It\'s not the hours you put in, it\'s what you do with them. Refactor your own development process. If you spend 1/2 a day doing something, odds are you can improve that time.</li>\n	<li>\"It works on my machine\" is ok if, and only if, you are coding for your machine.</li>\n	<li>Nobody makes bug-free software. Learn from the bugs you make now and you\'ll make newer more interesting ones.</li>\n	<li>Oh, and Test, test, test, test.</li>\n</ul>\nThe items on the list above are definitely not things I knew coming into software development. They are all things I\'ve had to learn the hard way, usually by falling completely on my face. The first two especially.\n\nWe all make mistakes, it\'s part of learning. All I hope is that this list prevents someone from making the same mistakes I made so they can go on and make their own, newer, more complicated, and more interesting mistakes.', '2011-05-01 03:34:44', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Build-Inno-Setup-Script-When-In-Release-Mode', '2008-12-15 06:00:00', 'Build Inno Setup Script When In Release Mode', 'I use Inno Setup as an installer for all my windows-based projects. Often-times I want to build the installer when I build the project from within Visual Studio but only when I build the \"Release\" configuration.\n\nHere is the post-build script that will accomplish this:\n\n<code>c:\ncd\\\nIF Release==$(ConfigurationName) \"C:\\Program Files\\Inno Setup 5\\Compil32.exe\" /cc &lt;PATH_TO_ISS_FILE&gt;\n</code>', '2011-05-01 03:34:44', 0, '')[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.3ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Test-everything-', '2009-01-29 06:00:00', 'Test everything.', 'I learned a lot about backups and DR last night. I was uploading about 10gb of ISO images to our file server at home and I started to notice a lot of dialog boxes appearing in my RDP window (the server is a headless box).\n\nThe messages were saying that Windows couldn\'t read XXXX file because the file or folder was corrupt.\n\nI waited for my transfers to finish and tried to run chkdsk. No luck. Chkdsk couldn\'t initialize on the drive in question. Uh oh. I rebooted and crossed my fingers.\n\nAfter a while the server came back online and I went back in over RDP. I immediately noticed that 80gb of data had been cleared from the drive! Now I was starting to panic. The 80gb of data included almost everything we use including:\n\n \n<ul>\n	<li>Software Downloads</li>\n	<li>Our in-house SVN Repository</li>\n	<li>Code files from years past (not in SVN)</li>\n	<li>All of our Music</li>\n	<li>All of our Pictures</li>\n	<li>Various Documents (tax documents, important medical stuff etc)</li>\n</ul>\n \n\n<span> </span>\n\nBasically everything you wouldn\'t want to lose right? \n\n<em>\"No problem\"</em>, I thought. I\'ve been meaning to wipe this machine and get back to a fresh install for a while. So I reformatted the main drive and began re-installing Windows.\n\nWhile this was going on I downloaded our backups from Mozy Home, retrieving our documents, pictures, music, everything. Or so I thought.\n\nAfter Windows was done I started by re-creating all the shares on the cleared drive. I began installing SVN from scratch, setting up our repositories again and getting ready to re-check-in my code from my main pc.\n\nDuring this process I started moving directories around on my main pc and got confused about what folders had what in them and I eventually ended up deleting all the code on that machine in one key stroke. I immediately knew what I had done but I kept my cool.\n\n<em>\"It\'s still cool. I have the backups. I\'ll be a day behind but I\'ll have my code\"</em>.\n\nSo I restore the backup from the Mozy download and start browsing the repository from my main pc. One problem though, I\'m not seeing any code newer than 12/07/2008. This can\'t be. I wrote a nightly backup script!\n\nAfter checking the script I realized my problem. Yes, I had written the backup script to run nightly and yes, it was running every night but it wasn\'t overwriting the old backup data because the files were protected. \n\nNow at this point I am beyond devastated. I\'ve just committed the cardinal sin in computers. I assumed my backups would work and never fully tested them. I am, for lack of a better term, completely screwed.\n\nSince then I\'ve run a whole slew of data recovery tools on both machines with no luck. My data is gone. A good month and a half of up-till-4am coding sessions completely gone.\n\nTest all the time and test everything. Don\'t just assume things will work because they most likely won\'t when you need them the most.\n\n \n\nUpdate: I thought this was really pretty funny: <a href=\"http://stackoverflow.com/questions/84556/whats-your-favorite-programmer-cartoon/110481#110481\">http://stackoverflow.com/questions/84556/whats-your-favorite-programmer-cartoon/110481#110481</a>', '2011-05-01 03:34:44', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.3ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Introducing-The-JavaScript-Object-Query-Library', '2009-02-10 06:00:00', 'Introducing The JavaScript Object Query Library', '<blockquote><em>So, yeah I originally started writing this article back in september when I was about mid-way through JSOQ. Some things have changed since then and I\'ve tried to keep the post up-to-date. Enjoy!</em>\n\n<em>Also, another similar library has come out recently: <a href=\"http://www.codeplex.com/jsinq\" target=\"_blank\">JSINQ</a> which is a really feature-rich LINQ to Object implementation in Javascript. Really bad-ass stuff.</em></blockquote>\nThe Elevator Pitch:\n\nJSOQ is an open-source pet project of mine that lets you easily access the data that you need from large collections in JavaScript. It was developed over a two week period in September of 2008 and is currently at version 1.1.\n\nEveryone probably just shrugged and said \"so??\" Well let me show you. \n\nLets assume that you have the following JSON string from another web application like, say <a title=\"Twitter search results in JSON\" href=\"http://search.twitter.com/search.json?q=codeimpossible\" target=\"_blank\">twitter search results</a> for example:\n\n<pre class=\"brush:javascript\">\n{\"results\":[\n{\n\"text\":\"Just another day at the office\",\n\"to_user_id\":null,\n\"from_user\":\"codeimpossible\",\n\"id\":1194587890,\n\"from_user_id\":1316793,\n\"iso_language_code\":\"en\",\n\"profile_image_url\":\"www.path.to.image.us\",\n\"created_at\":\"Tue, 10 Feb 2009 05:47:33 +0000\"\n},\n{\n\"text\":\"@spolsky thats easy! http:\\/\\/tinyurl.com\\/2z42bs\",\n\"to_user_id\":1357501,\n\"to_user\":\"spolsky\",\n\"from_user\":\"codeimpossible\",\n\"id\":1194582705,\n\"from_user_id\":1316793,\n\"iso_language_code\":\"en\",\n\"profile_image_url\":\"www.path.to.image.us\",\n\"created_at\":\"Tue, 10 Feb 2009 05:44:51 +0000\"\n}\n]} \n</pre>\n\nIn the sample above we only have two results but JSOQ has been tested to work with collections of tens of thousands of items.\n\nThe JSON object we have here is perfectly fine if we watned to show a whole bunch of data to the end user, but what if I only wanted to show the search results after a certain date? Or what if I only wanted the text from each message that was typed to this \"spolsky\" character?\n\nTo accomplish this in \"straight\" javascript I\'d be looking at writing a lot of loops and if/else code and then I would still have all these extra properties that I don\'t even need.\n\nJSOQ allows me to query a javascript object or collection of objects using a specified criteria and return only the properties/methods I want.\n\nSo lets go with the second option. Let\'s get all the .text members from all the messages that were sent to the \"spolsky\" user.\n\n<pre class=\"brush:javascript\">\nvar search_results = eval(our_json_result);\nvar result = null;\nwith(jsoq) {\n    result = From(search_results.results)\n                .query(\'text\')\n                .where(function(i) {\n                    return i.to_user === \"spolsky\";\n                });\n}\n</pre>\n\n \n\nAnd now our result object is filled with a bunch of other objects that would look something like:\n\n<pre class=\"brush:javascript\">\n{\n    text: \"@spolsky thats easy! http:\\/\\/tinyurl.com\\/2z42bs\"\n}\n</pre>\n\n \n\nPretty simple eh? For more information on JSOQ please check back here in the near future or contribute to <a title=\"JSOQ Google Code Page\" href=\"http://code.google.com/p/jsoq/\" target=\"_blank\">the google code repository</a>.', '2011-05-01 03:34:44', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Meeting-Sketches', '2009-02-10 06:00:00', 'Meeting Sketches', '[gallery orderby=\"rand\"] ', '2011-05-01 03:34:44', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.4ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Testing-JsonResult-in-Asp-net-MVC', '2009-03-16 05:00:00', 'Testing JsonResult in Asp.net MVC', 'So lately I\'ve been working on a project using Asp.net MVC and TDD to build a web 2.0 application. It\'s a twitter-like application that I started a while ago but due to <a href=\"\" title=\"Test Everything!\">my failure to test everything</a> I lost about 99% of my work and had to start over from scratch.\n\nBut this was sort of a good thing because it gave me a chance to revisit a lot of things that I wasn\'t very happy with the first time around. I just got done adding the ability for users to post new messages via AJAX.\n\nIn the first version of the application a user would type their status into a textbox, click submit and the page would refresh with their new message at the top of their user wall. Although functional this wasn\'t exactly very \"web 2.0\"-ish.\n\nMy controller will have an action called Index that takes two parameters, the message the users is posting and the tags associated with that message. m_UserService, and m_MessageService are private objects, that interact with the database.\n\n<pre class=\"prettyprint\"><code>\n[Authorize]\n[AcceptVerbs(HttpVerbs.Post)]\npublic ActionResult Index(string message, string[] tags)\n{\n\n	var messageOwner = this.m_UserService\n		.GetByUserName(User.Identity.Name);\n\n	var messageObj = new Message()\n	{\n		Owner = new User()\n		{\n			Identifier = messageOwner.Identifier,\n			UserName = messageOwner.UserName,\n			Email = messageOwner.Email,\n			RealName = messageOwner.RealName,\n			IsModerator = messageOwner.IsModerator\n		},\n		Body = message,\n		CreatedOn = DateTime.Now,\n		IsReply = message.StartsWith(\"@\")\n	};\n\n	this.m_MessageService.Post(messageObj);\n\n	return Json(messageObj);\n}\n</code></pre>\n\nThe JsonResult will be serialized/deserialized by the MVC framework when the code is run in a web project or IIS but I need to be able to test this as part of our build process.\n\n<i>* NOTE: For those of you who might be thinking \"how do we get around the authorization\"? I\'ll answer that in a later post (or you can <a href=\"http://www.hanselman.com/blog/ASPNETMVCSessionAtMix08TDDAndMvcMockHelpers.aspx\">check out Scott Hanselmans blog for the solution</a>).</i>\n\nIdeally I wanted to do something like the following in my test:\n\n<pre class=\"prettyprint\"><code>\n	Assert.AreEqual(\"some text\", jsonObject.someproperty);\n</code></pre>\n\nBut since C# is a type-safe language this isn\'t easily doable. However, utilizing an extension method and the JavaScriptSerializer in System.Web.Script.Serialization we can come pretty close:\n\n<pre class=\"prettyprint\"><code>\n	Assert.AreEqual(\"some text\", jsonObject[\"someproperty\"]);\n</code></pre>\n\nHere is the code I used to achieve this (This code depends on <a href=\"http://code.google.com/p/moq/\">Moq v3.0.108.5 which you can download here</a>):\n\n<pre class=\"prettyprint\"><code>\nusing System;\nusing System.Text;\nusing System.Web;\nusing System.Web.Script.Serialization;\nusing System.Web.Mvc;\n\nusing Moq;\n\npublic static class JsonResultExtensions\n{\n\n	public static T Deserialize&lt;T>(this JsonResult json,\n		Controller controller)\n	{\n\n		var jsonSB = new StringBuilder();\n\n		var httpResponseMock =\n			new Mock&lt;httpResponseBase>();\n\n		httpResponseMock.Setup(mock => {\n			mock.Write(It.IsAny&lt;string>());\n		}).Callback&lt;string>((s) => {\n			jsonSB.Append(s);\n		});\n\n		var httpContextMock = new Mock&lt;httpContextBase>();\n\n		httpContextMock.Setup(mock => mock.Response)\n			.Returns(httpResponseMock.Object);\n\n		controller.ControllerContext\n			.HttpContext = httpContextMock.Object;\n\n		jsonResult.ExecuteResult(\n			controller.ControllerContext);\n\n		return new JavaScriptSerializer()\n			.Deserialize&lt;T>(jsonSB.ToString());\n	}\n}\n</code></pre>\n\n<strong>Update: Doh! I forgot to post a sample of how this extension is used in my unit tests, I\'ve included a sample snippet below. Thanks to Ryan \'cause his comment made me realize I\'d left this out!</strong>\n\n<pre class=\"prettyprint\"><code>\nvar viewResult = controller.Index() as JsonResult;\nvar jsonData =\n viewResult.Deserialize&lt;IDictionary&lt;string, object&gt;&gt;(controller);\n\nAssert.AreEqual(\"this is a test message\", jsonData[\"MessageBody\"]);\n</code></pre>', '2011-05-01 03:34:44', 0, '')[0m
  [4;35;1mSQL (0.3ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.5ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Works-on-my-machine-weekly-project-1', '2009-04-05 05:00:00', 'Works on my machine weekly project #1', '<a href=\"http://www.box.net/shared/hacsh3b3s4\" target=\"_blank\">Download the source code mentioned in this blog post.</a>\n\n \n\n<img class=\"alignleft\" title=\"works-on-my-machine-starburst\" src=\"http://wpup.codeimpossible.com/2009/06/works-on-my-machine-starburst.jpg\" alt=\"works-on-my-machine-starburst\" />I\'m a hopeless code junkie. I love to write code. Most people do one thing for work and then another for their hobby. My girlfriend for instance works as an IT / Systems Engineer  and her other thing is photography.\n\n<em>My</em> other thing is writing <strong>more</strong> code. I never did this with any of my previous jobs (save dish washer... I did wash dishes when I was at home but I wasn\'t trying out new, cooler ways to wash them).\n\n... So where was I? Oh, right code junkie. So, I really like to write code and what I\'ve decided to do is start a new small project each week and try to use some new chunk of .Net or a new library and I\'ll post the end results of my efforts here for you all.\n\nAll of these projects will be offered under the CodeImpossible \"works on my machine\" code quality guarantee. But I\'ll never post something that flat-out doesn\'t work.\n\nSound good? Cool, let\'s kick it off - as the first entry into this space I\'d like to present <strong>TweetCommander</strong>.\n\nTweetCommander is a small .Net v3.5 console application that lies in wait, watching a twitter account for any new Direct Messages from another user (we\'ll call this person the \"owner\").\n\nWhen a direct message from the owner is found, TweetCommander will check to see if it contains certain text, and depending on that text, will perform a series of actions on the machine it is running on.\n\nTweetCommander will support three commands: \"current_screenshot\", \"exit\", and \"set_interval\".\n<ul>\n	<li>Sending \"current_screenshot\" will tell TweetCommander to take a screen capture of the Windows desktop, upload it to TwitPic, and then send the url for that image to the owner user in a Direct Message.</li>\n	<li>Sending \"exit\" will cause TweetCommander to exit</li>\n	<li>The \"set_interval\" is followed by a number that represents the number of seconds TweetCommander should wait between requests for new direct messages from twitter. This is more to avoid the API limit than anything else.</li>\n</ul>\n<strong>Settings</strong>\nTweetCommander will need to store the Twitter ID for the last successfully processed Direct Message somewhere so we aren\'t constantly processing the same commands over and over again. The end user won\'t need to be aware of this value but it\'s worth mentioning anyway.\n\nWe\'ll also need to store the wait interval so we don\'t lose this information if we need to restart TweetCommander for whatever reason.\n\nOkay, so here is the settings file I have so far:\n\n<img class=\"aligncenter size-full wp-image-348\" title=\"tweet_mon_console_settings\" src=\"http://wpup.codeimpossible.com/2009/04/tweet_mon_console_settings.jpg\" alt=\"tweet_mon_console_settings\" width=\"473\" height=\"170\" />\n\n<strong>Working with Twitter</strong>\nAll right so now we need to be able to interact with Twitter. Now, I don\'t want to write my own API library so I\'ll <a href=\"http://code.google.com/p/tweetsharp\" target=\"_blank\">go out and get the latest copy of TweetSharp</a> which will give me a nice, readable interface to twitter\'s API. After getting this built I\'ll be able to get the most recent direct messages using the following code:\n\n<pre class=\"prettyprint\"><code>\nvar directMessages = FluentTwitter.CreateRequest()\n	.AuthenticateAs(\n		TWITTERACCOUNT_USERNAME,\n		TWITTERACCOUNT_PASSWORD)\n	.DirectMessages()\n	.Received()\n	.Since(Properties\n		.Settings\n		.Default\n		.LastProcessedCommandID)\n	.AsJson()\n	.Request()\n	.AsDirectMessages();\n</code></pre>\n\nThats pretty freakin\' sweet I must say. Tweet# really takes the brain work out of working with twitter and there is no way to look at that code and <strong>not</strong> understand what it is doing immediately. Epic win.\n\nTo get this running on your machine, just<a href=\"http://www.box.net/shared/hacsh3b3s4\" target=\"_blank\"> grab the source from my box.net folder</a>, and change these values at the top of the Program.cs file:\n\n<pre class=\"prettyprint\"><code>\n// this is our \"owner account\" we will only act upon direct messages\n// send from this user\nprivate static string TWITTEROWNER  = \"codeimpossible\"; \n\n// this is our listener accounts username\nprivate static string TWITTERACCOUNT_USERNAME = \"someuser\";\n\n// this is our listener accounts password\nprivate static string TWITTERACCOUNT_PASSWORD = \"somepassword\";\n</code></pre>\n\n<em>Note: The solution file for this contains a reference to a compiled version of  the Tweet# library that contains </em><a href=\"http://code.google.com/p/tweetsharp/issues/detail?id=36\"><em>a quick patch I made for an issue that affects uploading an image to Twitpic</em></a><em>. However this issue has been fixed officially in the most recent source.</em>', '2011-05-01 03:34:44', 0, '')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('W-O-M-M-weekly-post-2', '2009-04-10 05:00:00', 'W.O.M.M. weekly post #2', '<img class=\"alignleft\" title=\"works-on-my-machine-starburst\" src=\"http://wpup.codeimpossible.com/2009/06/works-on-my-machine-starburst.jpg\" alt=\"works-on-my-machine-starburst\" />Due to me being insanely sick this week I\'m going to be changing up the format for the Works On My Machine weekly project post for this week.\n\nInstead of presenting a project that I\'ve worked on I\'d like to highlight some .Net OSS projects / source code that I\'ve been working with / looking at lately.\n\n \n<ul>\n	<li><a href=\"http://code.google.com/p/morelinq/\" target=\"_blank\">The More Linq project</a> - An extension library for LinqToObjects run by Jon Skeet.</li>\n	<li><a href=\"http://www.musikcube.com/\" target=\"_blank\">MusikCube</a> - Awesome music player that uses SqlLite to allow \"smart playlists\" (eg. show me all songs that were added this week that have fewer than 4 stars and have been played less than 10 times).</li>\n	<li><a href=\"http://code.google.com/p/moq/\" target=\"_blank\">Moq</a> - IMHO the best mocking framework for .net development.</li>\n	<li>Scott Hanselman posted some code on his website a while back about <a href=\"http://www.hanselman.com/blog/TheWeeklySourceCode35ZipCompressingASPNETSessionAndCacheState.aspx\" target=\"_blank\">how to Zip Compress your Session and Cache data</a> in Asp.net.</li>\n</ul>\nFeel free to send me any code that you come across and I\'ll feature it in a future post.', '2011-05-01 03:34:44', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.4ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('W-O-M-M-weekly-post-3-HtmlHelper-Gravatar', '2009-04-18 05:00:00', 'W.O.M.M. weekly post #3 - HtmlHelper.Gravatar', '<img class=\"alignleft\" title=\"works-on-my-machine-starburst\" src=\"http://wpup.codeimpossible.com/2009/06/works-on-my-machine-starburst.jpg\" alt=\"works-on-my-machine-starburst\" />Long story short: I <b>hate</b> re-inventing the wheel. If there is a free service that does something I need I will try my hardest to get that service into whatever I am working on. I\'m currently working on an Asp .Net MVC project that needs Avatars (you know, those funny little pictures next to peoples names on Twitter). Enter <a href=\"http://www.gravatar.com\">Gravatar</a>.\n<br />\nGravatar is an awesome service for anyone looking to add avatars to their apps. It\'s free, incredibly simple to implement, and removes a lot of the hassle around getting avatar support into your web/windows app.\n\nAdding Gravatar support to an application is pretty simple. Can you get a users email address? Can you MD5 said email address? Can you make an HTTP GET? BANG. You sir, or madam, can have Gravatars.\n\nThis week for the W.O.M.M. code sample I\'d like to show how I integrated gravatar support into an Asp .Net MVC application.\n\n<h3>How Gravatar Works In A Nutshell</h3>\nGravatar is a free service where you sign up and link images to one or more email addresses that you provide.\n\nOnce you link an image to an email address, any application that supports getting an image over the internet can show your Gravatar by making a request to a special URL. This URL is generated by combining an MD5 hash of your email address with some other parameters and the end result is a link to your Gravatar image.\n\nIE: the link to my Gravatar on the right of this page is:\n\n<code>\nhttp://www.gravatar.com/avatar/15559d868ec27b8583f42116a6b96c14?s=140\n</code>\n\nSo 15559d868ec27b8583f42116a6b96c14 is the hash of my email address - don\'t worry it\'s a one-way hash. The \"s\" parameter is the size of the image that I want, in this case 140 pixels.\n\nThat is pretty much it as far as how the system works, but if you want to read more, check out <a href=\"http://en.gravatar.com/site/implement\">Gravatar\'s implementation documentation</a>.\n\n<h3>The Goal</h3>\nWhat I wanted was an HtmlHelper extension method that I could use in my view pages to create an IMG tag with the correct Gravatar URL. After <a href=\"http://en.gravatar.com/site/implement/url\">looking at the documentation on Gravatars \"How the URL is constructed\" page</a>, I decided my helper extension should support the following:\n\n<b>Avatar Size (the \"s\" parameter)</b><br />\nWhen making a Gravatar URL you can specify a specific size for the Gravatar image. The size can be anything from 1 to 512 pixels, but the default is 80.\n\n<b>Default Avatars (the \"d\" parameter)</b><br />\nIf the email address you are using doesn\'t have any Gravatars setup, Gravatar will generate one for you by default. You can choose from 3 predefined Gravatar types or you can include a URL to a custom avatar of your own. The predefined Gravatar types are Identicon, Wavatar, and Monsterid.\n\n<b>Rating (the \"r\" parameter)</b><br />\nThis wasn\'t a requirement for what I was working on, but you can designate the maximum \"rating\" of the avatars that Gravatar will generate. The accepted values are \"g\", \"pg\", \"r\", and \"x\" and they are inclusive, so specifying \"r\" will allow \"g\" and \"pg\" rated Gravatars to be generated. Gravatars that are rated \"x\" will be returned as one of the predefined avatars above. The default rating is \"g\".\n\n<h3>The Code</h3>\nOkay, so now I know what I need to support. Now it\'s just a matter of getting the code to do this. Let\'s take a look at the class file I used to get this done.\n\n<pre class=\"prettyprint\"><code>\nnamespace System.Web.Mvc\n{\n using System;\n using System.Web.Routing;\n using System.Web.Security;\n\n public enum GravatarDefaultTypes\n {\n Identicon,\n Wavatar,\n Monsterid,\n Custom\n }\n\n public static class GravatarExtension\n {\n		public static string Gravatar(\n			this HtmlHelper hh,\n			string emailAddress,\n			int size,\n			GravatarDefaultTypes defaultType,\n			string customImageUrl,\n			RouteValueDictionary htmlAttributes)\n {\n var tagBuilder = new TagBuilder(\"img\");\n string url = \"http://www.gravatar.com/avatar/{0}?d={1}&s={2}\";\n\n	 // thanks to jon galloway for this one-liner!\n // http://www.eggheadcafe.com/aspnet/how-to/141740/adding-gravatars-to-your.aspx\n string hash = FormsAuthentication\n				.HashPasswordForStoringInConfigFile(emailAddress, \"MD5\");\n string defImg = defaultType.ToString().ToLower();\n\n if (defaultType == GravatarDefaultTypes.Custom)\n {\n defImg = System.Web\n					.HttpUtility\n					.UrlEncode(customImageUrl);\n }\n\n url = String.Format(\n url,\n hash.ToLower(),\n defImg,\n size.ToString());\n\n tagBuilder.MergeAttributes(htmlAttributes);\n tagBuilder.MergeAttribute(\"src\", url);\n\n return tagBuilder.ToString(TagRenderMode.Normal);\n }\n }\n}\n</code></pre>\n\nSo you can see I\'m not storing the hash of the email address, instead I am going to pass in the unaltered string. I didn\'t want to have another piece of data to update when the user changed their email address so the Gravatar() method takes an email address and encodes it using a call to FormsAuthentication.HashPasswordForStoringInConfigFile(), which is awesome ( Thanks Jon, you rock!).\n\nAlso, I\'m not sure if this is a no-no or what, but I did put the extension class under the System.Web.Mvc namespace. This was mainly a convenience (read: laziness) thing and can be easily changed.\n\nAlright so we have some code now, let\'s take a look at how it can be used in our views.\n\n<pre class=\"prettyprint\"><code>\n &lt;%= Html.Gravatar(\n 	Model.Email, // the email address\n 	50, // size, in pixels of the avatar\n 	GravatarDefaultTypes.Identicon,\n 	null,\n 	new RouteValueDictionary(new {\n 		style = \"vertical-align: middle;\"\n 	})\n )%> <br />\n <b> &lt;%= Model.UserName %> </b>\n</code></pre>\n\nLet\'s see how that looks.\n\n<img src=\"http://wpup.codeimpossible.com/2009/04/user-avatar.png\" alt=\"user-avatar\" title=\"user-avatar\" width=\"84\" height=\"81\" class=\"size-full wp-image-378\" />\n\nBooyah, avatar support in 55 lines of code. As always, if I screwed up or there is a better way to do this, please let me know.', '2011-05-01 03:34:44', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.3ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Wordpress-com-SyntaxHighlighter-How-To-Remove-Indent', '2009-04-21 05:00:00', 'Wordpress.com SyntaxHighlighter - How To Remove Indent', 'I post a lot of source code on my blog and lately I\'ve been having a lot of trouble trying to remove the left-padding from my source code blocks.\n\nMy problem comes from the <a href=\"http://code.google.com/p/syntaxhighlighter\">SyntaxHighlighter</a> stylesheet that WP.com uses and how it specifies the padding-left for the ordered-lists underneath the .dp-highlighter div tag:\n\n<pre class=\"prettyprint\"><code>\n.dp-highlighter ol\n{\n list-style: decimal; /* for ie */\n background-color: #fff;\n margin: 0px 0px 1px 45px !important; /* problem */\n padding: 0px;\n color: #5C5C5C;\n}\n</code></pre>\n\nThe use of the !important declaration is what is messing me up. The SyntaxHighlighter stylesheet is included at the end of the page html source and my custom css is at the top, so even though the SyntaxHighlighter styles have a lower higher <a href=\"http://www.stuffandnonsense.co.uk/archives/css_specificity_wars.html\">css specificity</a> - my styles will never override them because <a href=\"http://www.w3schools.com/css/css_intro.asp\" target=\"_blank\">CSS is processed top-down</a>.  <em>from \"CSS Introduction\" @ w3schools:</em>\n<blockquote><strong>What style will be used when there is more than one style specified for an HTML element?\n</strong>\nGenerally speaking we can say that all the styles will \"cascade\" into a new \"virtual\" style sheet by the following rules, where number four has the highest priority:\n<ol>\n	<li>Browser default</li>\n	<li>External style sheet</li>\n	<li>Internal style sheet (inside the &lt;head&gt; tag)</li>\n	<li>Inline style (inside an HTML element)</li>\n</ol>\nSo, an inline style (inside an HTML element) has the highest priority, which means that it will override a style declared inside the &lt;head&gt; tag, in an external style sheet, or in a browser (a default value).</blockquote>\nAt this point I began thinking that it was pointless to try any more and that I should just accept that my code blocks would forever be indented by 45 pixels.\n\nHowever, I\'m way too stubborn to admit defeat, and after spending a night reading about css specificity and trying some crazy hacks of my own, I realized that my problem was simple. <strong>I just wanted the code to be farther to the left</strong>.\n\nSo my solution was equally simple (<a href=\"http://en.wikipedia.org/wiki/Occam\'s_razor\">Occam\'s Razor</a> baby!): tell the outer container to allow overflow and position the child relatively and to offset it by the distance I wanted. I did this by applying to the outer div ( the \".dp-highlighter\" div ) the following style:\n\n<pre class=\"prettyprint\"><code>\nDIV.dp-highlighter {\noverflow:auto;\npadding:10px;\n}\n</code></pre>\n\nAnd added this style to the OL tag within the .dp-highlighter div:\n\n<pre class=\"prettyprint\"><code>\n.dp-highlighter ol {\nposition:relative;\nleft:-45px;\n}\n</code></pre>', '2011-05-01 03:34:44', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.3ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Debugging-Syntax-Error-from-a-bad-WebResource-axd-request', '2009-04-24 05:00:00', 'Debugging &quot;Syntax Error&quot; from a bad WebResource.axd request', '\"Syntax Error, Line: 2, Char: 0\". How many of you out there have seen this error while working on a web project?\n\nUsually it\'s because of a forgotten semi-colon or parenthesis in some external javascript file. But sometimes it\'s something more sinister... Something darker, dirtier and just a little bit more evil.\n\nAfter seeing the error message, I opened up Internet Explorer\'s options dialog and unchecked the following options:\n<ul>\n	<li>Disable script debugging (Internet Explorer)</li>\n	<li>Disable script debugging (Other)</li>\n</ul>\n<p style=\"text-align: center;\"><img class=\"aligncenter size-full wp-image-456\" title=\"Internet Explorer Options Dialog\" src=\"http://wpup.codeimpossible.com/2009/04/internet_explorer_options_2.jpg\" alt=\"Internet Explorer Options Dialog\" width=\"415\" height=\"521\" /></p>\n\nI then closed IE, returned to Visual Studio, stopped and re-started debugging (ctrl+shift+F5), and watched Solution Explorer as my page began to load.\n<p style=\"text-align: center;\"><img class=\"aligncenter size-full wp-image-442\" title=\"Solution Explorer Debugging Internet Explorer\" src=\"http://wpup.codeimpossible.com/2009/04/solution_explorer.png\" alt=\"Solution Explorer Debugging Internet Explorer\" width=\"309\" height=\"265\" /></p>\n\nOh! That\'s not good. See the WebResource.axd request that has the same icon as the Default.aspx file? That means that a bad request was sent for an embedded resource and - most likely recieved a 404 page back instead of the javascript file, which caused our syntax error.\n\nOk, so how do we figure out which WebResource reference caused the problem? Well, the only way that I have come up with so far, is to manually copy and paste each WebResource.axd url from the html source of the page to the address bar and navigate there. The pages that give return a file download are ok and the ones that don\'t will return a 404 page in the browser.\n\nAfter finishing this long process of elimination, I found the resource request that was causing my headache:\n<pre class=\"brush:html\">/WebResource.axd?d=MaCiPhUUtdXNj16OOucV5e5lHCBZO...SNIP...</pre>\nSo how do we figure out which resource has embedded this troublesome URL into our html source? I found the solution to that in <a href=\"http://blogs.msdn.com/irenak/archive/2006/11/03/sysk-233-how-to-decrypt-an-asp-net-encrypted-data.aspx\">Irena Kennedy\'s blog post on \"How to Decrypt an ASP.NET Encrypted Data\"</a>:\n<blockquote>Please note, that the code below should not be used in production code! It’s only meant for debugging and troubleshooting, and it may break in future versions of the .NET framework if DecryptString private method changes.\n<ol>\n	<li>Add a web page (e.g. DecryptData.aspx) to your web application. For the code to work, it must run in the same appdomain as the web application that created your encrypted string.</li>\n	<li>Add a text box where you will type in the encrypted string.</li>\n	<li>Add a label where you’ll display decrypted results.</li>\n	<li>Add a button.</li>\n	<li>In code-behind on button click event, add the following code:</li>\n</ol>\n</blockquote>\n<pre class=\"prettyprint\"><code>\nSystem.Reflection.BindingFlags bf =\n System.Reflection.BindingFlags.NonPublic |\n System.Reflection.BindingFlags.Static;\n\nSystem.Reflection.MethodInfo DecryptString = \n typeof(System.Web.UI.Page).GetMethod(\"DecryptString\", bf);\n\nDecryptedData.Text = DecryptString.Invoke(\n null, \n new object[] { EncryptedData.Text } ) as string;\n\n</code></pre>\nAfter I created this page, I pasted the WebResource.axd URL (everything up to the &amp;t=) into the DecryptedData textbox on my DecryptData.aspx page, clicked the Decrypt button, and saw that one of my custom aspx controls was responsible. I then corrected the resource path and the page loaded as it should.\n\nSee the screenshot below for an example of the DecryptData page, or <a href=\"http://www.box.net/shared/uc9aea3999\" target=\"_blank\">download the DecryptData .ASPX and Codebehind from my box.net folder</a>.\n<p style=\"text-align: center;\"><a href=\"http://wpup.codeimpossible.com/2009/04/decryption_page.png\" target=\"_blank\"><img class=\"aligncenter size-medium wp-image-445\" title=\"DecryptData page\" src=\"http://wpup.codeimpossible.com/2009/04/decryption_page.png?w=300\" alt=\"DecryptData page\" width=\"300\" height=\"219\" /></a></p>', '2011-05-01 03:34:44', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Link-Post-for-April', '2009-04-30 05:00:00', 'Link Post for April', 'So here it is, the end of another month and I wanted to post some interesting, and helpful links (mostly so I can find them again) as well as point out some interesting bloggers/twitterers (tweeters?) that you should be following if you aren\'t already.\n<ul>\n	<li><a href=\"http://blogs.msdn.com/jnak/archive/2009/04/20/installing-the-windows-azure-tools-and-sdk-the-easy-way.aspx\">The easy way to install Windows Azure SDK and Tools</a></li>\n	<li><a href=\"http://www.streetviewfun.com/2009/star-wars-graffiti/\" target=\"_blank\">Street View Fun: Star Wars graffiti</a></li>\n	<li><a href=\"http://blogs.msdn.com/irenak/archive/2006/11/03/sysk-233-how-to-decrypt-an-asp-net-encrypted-data.aspx\" target=\"_blank\">Decrypting Asp .Net Encrypted Data</a></li>\n	<li><a href=\"http://community.bartdesmet.net/blogs/bart/archive/2009/04/23/linq-to-objects-debugging.aspx\" target=\"_blank\">Debugging Linq To Objects</a></li>\n	<li>Get ELMAH going in your MVC app via (<a href=\"http://haacked.com/archive/2007/07/24/securely-implement-elmah-for-plug-and-play-error-logging.aspx\" target=\"_blank\">Phil Haack</a>, <a href=\"http://www.hanselman.com/blog/ELMAHErrorLoggingModulesAndHandlersForASPNETAndMVCToo.aspx\" target=\"_blank\">Scott Hanselman</a>, and <a href=\"http://danswatik.com/index.php/2009/04/23/how-to-get-elmah-to-work-with-aspnet-mvc-handleerror-attribute/\" target=\"_blank\">Dan Swatik</a>)</li>\n	<li><a href=\"http://rentzsch.com/notes/programmersDontLikeToCode\" target=\"_blank\">Programmers Don\'t Like To Write Code</a></li>\n	<li><a href=\"http://haacked.com/archive/2009/04/22/scripted-db-views.aspx\" target=\"_blank\">Use IronRuby to script your MVC Views</a></li>\n	<li><a href=\"http://msdn.krugle.com/\" target=\"_blank\">Search MSDN with Krugle</a></li>\n</ul>\nBloggers you should read / follow if you aren\'t already:\n<ul>\n	<li>Steve Harman -  <a href=\"http://stevenharman.net/\" target=\"_blank\">blog</a> / <a href=\"http://twitter.com/stevenharman\" target=\"_blank\">twitter</a></li>\n	<li>Scott C Reynolds -  <a href=\"http://scottcreynolds.com/\" target=\"_blank\">blog</a> / <a href=\"http://twitter.com/scottcreynolds\" target=\"_blank\">twitter</a></li>\n	<li>Brad Wilson -  <a href=\"http://bradwilson.typepad.com/\" target=\"_blank\">blog</a> / <a href=\"http://twitter.com/bradwilson\" target=\"_blank\">twitter</a></li>\n</ul>', '2011-05-01 03:34:44', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Link-Post-For-May', '2009-05-31 05:00:00', 'Link Post For May', '<ul>\n	<li><a href=\"http://blog.chromium.org/2009/05/extensions-at-google-io.html\">Google talks about what extensions will look like in Chrome</a></li>\n	<li><a href=\"http://googleblog.blogspot.com/2009/05/went-walkabout-brought-back-google-wave.html\">Google announces Wave</a></li>\n	<li><a href=\"http://bing.com\">Microsoft shows off Bing</a></li>\n	<li><a href=\"http://www.usabilitypost.com/2009/05/29/the-1kb-css-grid-part-1/\">The 1k CSS Grid</a></li>\n	<li><a href=\"http://encosia.com/2009/05/20/automatically-minify-and-combine-javascript-in-visual-studio/\" target=\"_blank\">Automatically Minify and Combine JavaScript code in Visual Studio</a></li>\n	<li><a href=\"http://blogs.msdn.com/webdevtools/archive/2009/04/28/updated-nunit-templates-for-asp-net-mvc-1-0-rtm.aspx\" target=\"_blank\">Visual Studio NUnit Templates for Asp MVC</a></li>\n	<li><a href=\"http://blog.stackoverflow.com/2009/05/the-stack-overflow-trilogy/\" target=\"_blank\">Coming Soon: SuperUser.com</a></li>\n</ul>\nThis months list of devs to follow (<a href=\"http://herdingcode.com\" target=\"_blank\">Herding Code</a> edition):\n<ul>\n	<li>Jon Galloway - <a href=\"http://weblogs.asp.net/jgalloway/\" target=\"_blank\">blog</a> / <a href=\"http://twitter.com/jongalloway\" target=\"_blank\">twitter</a></li>\n	<li>Kevin Dente - <a href=\"http://weblogs.asp.net/kdente/\" target=\"_blank\">blog</a> / <a href=\"http://twitter.com/kevindente\" target=\"_blank\">twitter</a></li>\n	<li>Scott Koon - <a href=\"http://www.lazycoder.com/\" target=\"_blank\">blog</a> / <a href=\"http://twitter.com/Lazycoder\" target=\"_blank\">twitter</a></li>\n	<li>K Scott Allen - <a href=\"http://odetocode.com/blogs/scott/default.aspx\" target=\"_blank\">blog</a> / <a href=\"http://twitter.com/OdeToCode\" target=\"_blank\">twitter</a></li>\n</ul>', '2011-05-01 03:34:44', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.7ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('W-O-M-M-4-Asp-MVC-Route-Attributes', '2009-06-22 05:00:00', 'W.O.M.M. #4 - Asp MVC Route Attributes', '<a href=\"http://www.box.net/shared/1q4bq5scuz\" target=\"_blank\">Download the source code mentioned in this blog post.</a>\n\n<img class=\"alignleft\" title=\"works-on-my-machine-starburst\" src=\"http://wpup.codeimpossible.com/2009/06/works-on-my-machine-starburst.jpg\" alt=\"works-on-my-machine-starburst\" />\n\nA few weeks ago <a href=\"http://itc.conversationsnetwork.org/audio/download/ITC.SO-Episode54-2009.05.20.mp3\">on the StackOverflow podcast</a>, something Jeff said got me thinking. Jeff was discussing how the stackoverflow team implemented their route mappings:\n\n<em>\nThose routes are... the way we implemented them are actually like decorators. Attributes on the methods. <cite>- Jeff Atwood (stackoverflow episode #54)</cite>\n</em>\n\nThis instantly piqued my interest and I completely zoned out for the rest of the podcast: caught up in working out the details of how I could do this for my own Asp.net MVC projects. \n\nComing up with the actual attribute code was easy; writing the code to set up all the Routes using only data defined in by the attribute was tricky.\n\nBeing new to attributes, and reflection in general, it took me a few hours until I had a very basic demo working. However, I was really starting to like where it was going.\n\n<p class=\"right side-note callout-green\">\nAs a side note: There are lot of \"helper\" classes and objects in the route attribute project (it feels cluttered to me) and the reason I did this was to make the code in AssemblyExtensions.GetRoutes() easier to read.\n</p>\n\nAfter a few nights of <a href=\"http://twitter.com/digitalBush/status/2121662803\" target=\"_blank\">Mtn Dew and convenience-store cherry-pie</a> I finished the rough code, tests and demo project (included in this blog post) and I was starting to realize that:\n\n<ol>\n	<li>Using the attributes is more declaritive and it feels cleaner</li>\n	<li>Having your route information right above your actions is incredibly useful</li>\n	<li>I had no more need to switch back and forth between your controller and the Global.asax.cs</li>\n</ol>\n\n<h2>How does it work?</h2>\nAll of the real work for the RouteAttribute is done in the AssemblyExtensions class. This class uses extension methods to augment the System.Reflection.Assembly class with two methods: GetControllers() and GetRoutes().\n\nGetRoutes is the only method that is used by other classes, I made GetControllers public for unit testing.\n\n<h3>GetRoutes()</h3>\nGetRoutes\' first order of business is to make a list of data that it will need to build out all the routes for the assembly it was passed. After thats done GetRoutes will loop through the collected route data, build up each route and add it to the dictionary that will eventually be returned.\n\n<pre class=\"prettyprint\"><code>\nnamespace CodeImpossible.Mvc.Routing\n{\n public static class AssemblyExtensions\n {\n\n public static BindingFlags ActionFlags = \n BindingFlags.Instance | \n BindingFlags.Public |\n BindingFlags.DeclaredOnly;\n\n public static IList&lt;ControllerMetaData&gt; GetControllers(this Assembly assembly)\n {\n var controllers = assembly.GetTypes().ToList().FindAll(type =>\n {\n var isValidController = type.IsClass &&\n type.IsPublic &&\n type.IsSubclassOf&lt;Controller&gt;();\n\n var hasValidActions = type.GetMethods(ActionFlags).ToList().Any(m =>\n {\n var valid = false;\n if (m.ReturnParameter != null && m.ReturnParameter.ParameterType == typeof(ActionResult))\n {\n valid = m.GetAttributesOfType&lt;RouteAttribute&gt;().Count > 0;\n }\n\n return valid;\n });\n\n return isValidController && hasValidActions;\n }).Select&lt;Type, ControllerMetaData&gt;((t) => new ControllerMetaData(t)).ToList();\n\n return controllers;\n }\n\n public static IDictionary&lt;string, Route&gt; GetRoutes(this Assembly assembly)\n {\n var Routes = new Dictionary&lt;string, Route&gt;();\n\n var data = (from c in assembly.GetControllers()\n from a in c.GetActions()\n from r in a.Data\n select new\n {\n ControllerName = c.Name, \n ActionName = a.Name, \n RouteData = r, \n RouteParams = a.Params\n }).ToList();\n\n foreach (var r in data)\n {\n var route = new Route(r.RouteData.RoutePath, new MvcRouteHandler());\n route.Constraints = new RouteValueDictionary();\n route.Defaults = new RouteValueDictionary(new { \n controller = r.ControllerName, \n action = r.ActionName \n });\n\n if (r.RouteData.RequireRouteParams && r.RouteParams.Count() == 0)\n {\n throw new MissingRouteParameterException(\"Unknown\", r.RouteData.RoutePath);\n }\n\n var missingParams = new List&lt;ParameterMetaData&gt;();\n\n if (r.RouteData.RequireRouteParams)\n {\n missingParams = (from p in r.RouteParams\n where r.RouteData.RoutePath.IndexOf(\"{\" + p.Name + \"}\") == -1\n select p).ToList();\n }\n\n if (missingParams.Count > 0)\n {\n var param = missingParams.First();\n throw new MissingRouteParameterException(param.Name, r.RouteData.RoutePath);\n }\n\n foreach (var param in r.RouteParams)\n {\n if (param.Data != null)\n {\n if (param.Data.DefaultValue != null)\n {\n route.Defaults.Add(param.Name, param.Data.DefaultValue);\n }\n\n if (param.Data.Constraint != null)\n {\n route.Constraints.Add(param.Name, param.Data.Constraint);\n }\n }\n }\n\n Routes.Add(r.RouteData.Name ?? r.RouteData.RoutePath, route);\n }\n\n return Routes;\n }\n }\n}\n</code></pre>\n\n<h2>Getting the Routes into the RouteTable</h2>\nSlapping route attributes onto your classes and methods is all well and good but it doesn\'t mean anything unless we can get those routes into the RouteTable object easliy. Originally I had the code to add the routes looking something like\n<pre class=\"prettyprint\"><code>\nvar routes = Assembly.GetCurrentExecutingAssembly().GetRoutes();\n\nroutes.ForEach(r => RouteTable.Add(r));\n</code></pre>\n\nThis, although pretty easy, wasn\'t as readible as I wanted. So I added some extension methods to the RouteTable class:\n<pre class=\"prettyprint\"><code>\nRouteTable.Routes.IncludeRoutesFromAssembly();\n</code></pre>\n\nI think both of these are much clearer than doing:\n<pre class=\"prettyprint\"><code>\nRouteTable.Routes.MapRoute(\"Root\",\n \"\",\n new { controller = \"Test\", action = \"GetItem\", id = 1 });\n\nRouteTable.Routes.MapRoute(\"Search\",\n \"Search/{id}\",\n new { controller = \"Test\", action = \"Search\", id = 1 });\n//.. SNIP ...\n</code></pre>\n\n<h2>Using the RouteAttribute and RouteParamAttribute</h2>\nIn the controller \"TestController\" below there are three actions: Index, FindByText, and GetItem. Using the RouteAttribute and RouteParamAttribute makes it pretty clear that the routes for FindByText and GetItem are the same but use different RouteContraints. \n\nSo a request for /Test/Search/Hello will go to FindByText while /Test/Search/1 will go to GetItem. Also notice how GetItem has a default value of 2 for the id argument.\n<pre class=\"prettyprint\"><code>\npublic class TestController : Controller\n{\n\n [Route(RoutePath = \"Test\")]\n public ActionResult Index()\n {\n\n return View();\n }\n\n [Route(RoutePath = \"Test/Search/{query}\")]\n public ActionResult FindByText(\n [RouteParam(Constraint=\"[a-zA-Z]{1,}\")]\n string query)\n {\n\n return View();\n }\n\n [Route(RoutePath = \"Test/Search/{id}\")]\n public virtual ActionResult GetItem(\n [RouteParam(Constraint=@\"\\d{1,}\", DefaultValue=2)]\n int id)\n {\n\n return View();\n }\n}</code></pre>\nThere is support for binding multiple routes to the same action; just add another Route attribute:\n<pre class=\"prettyprint\"><code>\n[Route(\"Products/Search/{id}\")]\n[Route(\"Products/{id}\")]\npublic ActionResult GetProductById(int id)\n{\n return View();\n}\n</code></pre>\n\n<h2>Downsides or things I haven\'t gotten to yet</h2>\nJust some gotchas that I think people might raise issue with.\n\n<strong>All of your controllers must inherit from the System.Web.Mvc.Controller class</strong>\nThis isn\'t really a big deal because if you are using Asp.net MVC then you really should inherit from the Controller class, but for those of you using FubuMVC or another MVC framework this should be easy to change.\n\n<strong>Attributes can be ugly</strong>\nI know a few people out there are against attributes but I think that this is a more than acceptable use because it made the code much easier to understand.\n\n<strong>Reflection can be slow</strong>\nHonestly, when I first started working on this demo I was sort of turned off by the use of Reflection myself. After weighing the possible performance loss against the gains in both readability and maintenance I decided this was definitely worth it. I haven\'t performance tested this code so, as always YMMV.\n\nAs always, if I screwed up or there is a better way to do this, please let me know in the comments.\n\n<a href=\"http://www.box.net/shared/1q4bq5scuz\" target=\"_blank\">Download the source code mentioned in this blog post.</a>', '2011-05-01 03:34:44', 0, '')[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Link-post-for-June', '2009-07-02 05:00:00', 'Link post for June', '<ul>\n	<li><a href=\"http://www.jankoatwarpspeed.com/examples/AdvancedDocking/#\" target=\"_blank\">jQuery Docking</a></li>\n <li><a href=\"http://jsbeautifier.org/\" target=\"_blank\">Javascript Beautifier</a></li>\n <li><a href=\"http://code.google.com/p/google-diff-match-patch/\">Google Diff-Match-Patch library ported to C#</a></li>\n</ul>\n\nThis months list of devs to follow (the GAC pack edition)\n\n<ul>\n <li>Chad Moran <a href=\"http://www.chadmoran.com/\">blog</a> / <a href=\"http://twitter.com/chadmoran\">twitter</a></li>\n <li>Scott C Reynolds <a href=\"http://www.scottcreynolds.com/\">blog</a> / <a href=\"http://twitter.com/scottcreynolds\">twitter</a></li>\n <li>Jeremy D Miller <a href=\"http://codebetter.com/blogs/jeremy.miller/\">blog</a> / <a href=\"http://twitter.com/jeremydmiller\">twitter</a></li>\n <li>Sara Chipps <a href=\"http://girldeveloper.com/\">blog</a> / <a href=\"http://twitter.com/SaraJChipps\">twitter</a></li>\n <li>Scott Galloway <a href=\"http://www.mostlylucid.net/\">blog</a> / <a href=\"http://twitter.com/scottgal\">twitter</a></li>\n <li>Erik Porter <a href=\"http://erikporter.com/\">blog</a> / <a href=\"http://twitter.com/humancompiler\">twitter</a></li>\n <li>Tim Barcz <a href=\"http://devlicio.us/blogs/tim_barcz/\">blog</a> / <a href=\"http://twitter.com/timbarcz\">twitter</a></li>\n <li>Tobin Titus <a href=\"http://www.tobint.com/\">blog</a> / <a href=\"http://twitter.com/tobint\">twitter</a></li>\n</ul>', '2011-05-01 03:34:44', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Tracking-Net-Service-Requests-in-Fiddler', '2009-08-17 05:00:00', 'Tracking .Net Service Requests in Fiddler', 'Earlier today I had to debug a function in our code that was calling an external webservice at a clients\' site. The webservice returns a list of items and the code on our end is supposed to place them in ascending order based on each items Order property.\n\nThe client pointed that the our order wasn\'t matching up with what they were seeing internally so I spoke with their developer who suggested that we make sure that the request wasn\'t being cached on my machine.\n\nI opened up Fiddler locally and was surprised to see that the none of the request/response data for the connection to the webservice was showing up. \n\nFiddler, for those that don\'t know is a really excellent Http tracing application that allows you to see what kind of http traffic is going in and out over your network connection. You can <a href=\"http://www.fiddler2.com/fiddler2/\">download fiddler here</a>.\n\nThankfully, Fiddler runs a simple proxy service which you can point your service requests to in .net using:\n\n<pre class=\"prettyprint\"><code>\nif (System.Environment.MachineName.ToLower().Equals(\"MyMachineName\"))\n{\n service.Proxy = new System.Net.WebProxy(\"http://localhost:8888\");\n}\n</code></pre>\n\nAfter adding that code we were off and debugging our .Net service requests in Fiddler!', '2011-05-01 03:34:44', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('W-O-M-M-5-Project-Euler-Problem-2', '2009-09-11 05:00:00', 'W.O.M.M. #5 Project Euler - Problem 2', '<img class=\"alignleft\" title=\"works-on-my-machine-starburst\" src=\"http://wpup.codeimpossible.com/2009/06/works-on-my-machine-starburst.jpg\" alt=\"works-on-my-machine-starburst\" />\n\n<a href=\"http://projecteuler.net/\">Project Euler</a> is an awesome website that I found out about a while back via <a href=\"http://stackoverflow.com/questions/4002/code-katas\">this question on StackOverflow</a>. Basically, it\'s a website that poses a ton of programmer related challenges and it keeps track of the problems that you solve.\n\nThe problems start out relatively easy (Add all the natural numbers below one thousand that are multiples of 3 or 5.) and progress all the way to insane (Caradano Triplets and Covex Holes).\n\nI\'m on the easy side, I just started working through them tonight and thought it would be cool to post how I build the solution to each problem as I complete them.\n\n<a href=\"http://projecteuler.net/index.php?section=problems&id=2\">Problem 2</a> is pretty easy:\n\n<i>\"Find the sum of all the even-valued terms in the Fibonacci sequence which do not exceed four million.\"</i>\n\nSo first things first, I\'ll need to pick a language to use to solve this. I chose javascript simply because it was something I knew I could get running pretty quickly. \n\nNext I\'ll need some variables. (note: if you\'re not familiar with Fibonacci numbers <a href=\"http://en.wikipedia.org/wiki/Fibonacci_number\">Wikipedia has an awesome article on them</a>.)\n\n<pre><code class=\"prettyprint\">\nvar start = 1, end = 4000000, current = 1, previous = 1, sum = 0, temp = 0;\n</code></pre>\n\nThat should do. I\'ve got my start variable (dropping the 0 in favor of more readable code), my end counter, and my \"where-am-i\" variables: current, previous, temp and my sum variable.\n\nObviously we\'ll need some kind of loop. How about a while loop?\n\n<pre class=\"prettyprint\"><code>\nwhile( current <= end )\n{\n	\n}\n</code></pre>\n\nCool. Now when the loop is running I\'ll need a way to keep track of the current value, the previous value and I need to add the current value to the sum. So....\n\n<pre class=\"prettyprint\"><code>\nwhile( current <= end )\n{\n temp = current;\n current = current + previous;\n sum += current;	\n previous = temp;\n}\n</code></pre>\n\nAnd there we hav... Oh Wait!\n\nI overlooked a pretty important part of the problem description: <b><i>\"sum of all the even-valued terms\"</i></b>!!!\n\nSo given this new(ish) piece of info my solution end sup being:\n\n<pre class=\"prettyprint\"><code>\nvar start = 1, end = 4000000, current = 1, previous = 1, sum = 0, temp = 0;\n\nwhile( current <= end )\n{\n	temp = current;\n	current = current + previous;\n	\n	if( current%2 == 0 )\n		sum += current;\n	\n	previous = temp;\n}\n\nalert(sum);\n</code></pre>', '2011-05-01 03:34:44', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Dear-Sql-management-studio-just-let-me-save-my-database-table-', '2009-09-16 05:00:00', 'Dear Sql management studio, just let me save my database table!!', 'If you\'re like me, you recently upgraded to Sql Server 2008 (or just installed the Management Studio). If you\'re really like me you found the \"Saving changes is not permitted\" dialog that pops up every time you try to save a modified table annoying. \n\nYou may not have found it annoying enough to investigate but I sure did. I don\'t remember Management Studio 2005 complaining when I changed a table and saved it. Why the change in 2008?\n\nWell, anyway, here\'s your chance to get rid of that dialog once and for all.\n\nIn Sql Management Studio, go to <b>Tools</b> -> <b>Options</b>, expand down the <b>Designers</b> node, and select <b>Table and Database Designers</b>. In the <b>Table Options</b> section uncheck <b>Prevent saving changes that require table re-creation</b> and you\'re done! \n\nYou can now change your database tables hassle free!', '2011-05-01 03:34:44', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('The-Jsoq-Console', '2009-11-14 06:00:00', 'The Jsoq Console', 'During <a href=\"http://codeimpossible.com/2009/02/10/introducing-the-javascript-object-query-library\">the first round of development for JSOQ</a> I needed a faster way to test than unit-tests alone could provide. What I needed was a dirt-simple page that I could run in a browser, enter some JavaScript code, click a button and see it execute. \n\nI built the initial JSOQ Console (which is still included with the JSOQ source code) in about 20 minutes and it increased my productivity by 10x.\n\nIt was much faster to test JSOQ functions with the JSOQ Console than it had been with unit-tests. As a result I was able to prototype new functionality in about 1/2 the time.\n\nI\'ve finally moved <a href=\"http://codeimpossible.com/jsoq\">v0.2 of the Jsoq Console</a> to my blog here so you can use it to quickly test out your own JavaScript code!\n\nHow it works is pretty straight forward. If you\'ve got a snippet of JavaScript, be it jQuery (for the moment jQuery is the only external library that is supported but that will change soon), JSOQ or any other javascript code, you can run it with the JSOQ Console.\n\nJust navigate to <a href=\"http://tinyurl.com/jsoqconsole\">http://tinyurl.com/jsoqconsole</a> or <a href=\"http://codeimpossible.com/jsoq\">http://codeimpossible.com/jsoq</a> for those of you that like to type, paste your code into the textarea at the top of the page, press \"Run\" and your code will run!\n\nSo enjoy! If you get confused there are also samples that will show you how to use the more \"advanced\" features. Also, drop a comment or share the console with others if you thought it was useful!', '2011-05-01 03:34:45', 0, '')[0m
  [4;36;1mSQL (2.0ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('W-O-M-M-Project-Euler-3', '2009-11-25 06:00:00', 'W.O.M.M. Project Euler #3', '<img class=\"alignleft\" title=\"works-on-my-machine-starburst\" src=\"http://codeimpossible.com/wp-content/uploads/2009/06/works-on-my-machine-starburst.jpg\" alt=\"works-on-my-machine-starburst\" />\n\nHere we are with another excellent installment in the \"Works On My Machine\" series where I post some code, some thoughts and hopefully show you something interesting/cool/new.\n\nToday I\'m going to talk briefly about Project Euler problem #3. Problem 3 asks you to find the largest <a href=\"http://en.wikipedia.org/wiki/Prime_factor\">prime factor</a> of the number 600,851,475,143.\n\nMy solution is pretty simple but it works:\n<pre class=\"prettyprint\"><code>\nvar getLargestPrimeFactor = function(num)\n{\n var factors = [];\n for ( var f = 2; f &lt; num; f++ )\n {\n if( num%f == 0 )\n {\n factors.push(f);\n num = num /f;\n }\n }\n factors.push(num);\n return factors[factors.length-1];\n};\n\nalert( getLargestPrimeFactor(600851475143));\n</code></pre>\n<a title=\"Try this code!\" href=\"http://beta.jsvudo.com/76cc38\" target=\"_blank\">Try this code!</a>\n\nYou may have noticed that there isn\'t a check for a factors <del>optimus</del> primeness anywhere in there.\n\nThats because the <code>getLargestPrimeFactor()</code> function is dividing the number by it\'s smallest factor, and the smallest factor for any number is always prime so when we run out of factors we\'ve got the largest prime factor. Yeah, that\'s pretth cool IMO.\n\nI read the discussion threads for problem 3 after I solved it and I was surprised that hardly anyone removed the prime checks from their code.\n\nSo, problem 3 is in the bag and I feel pretty good about coming up with the prime check optimization (or lack thereof). A small bit of proof that I know what I\'m doing. Sometimes :D', '2011-05-01 03:34:45', 0, '')[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.4ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('JavaScript-Performance-Re-match', '2009-12-02 06:00:00', 'JavaScript Performance Re-match', 'Back in 2007 <a href=\"http://codinghorror.com\" title=\"Jeff Atwood\'s blog\">Jeff Atwood</a> ran the top 4 web browsers through the <a href=\"http://www2.webkit.org/perf/sunspider-0.9/sunspider.html\" title=\"SunSpider JavaScript Benchmark\">SunSpider JavaScript Benchmark</a> and <a href=\"http://www.codinghorror.com/blog/archives/001023.html\" title=\"The Great Browser JavaScript Showdown\">posted his findings</a>. It\'s been close to 2 years since then and I was curious to see how FireFox 3.5, IE8, IE7 (in Compatibility Mode) and Google Chrome 4.0.249.11 would fair. \n\nSo I did pretty much the same thing Jeff did and here is what I found:\n\n<img src=\"http://codeimpossible.com/wp-content/uploads/2009/12/JavaScript-Performance.png\" alt=\"JavaScript Performance Graph\" title=\"JavaScript Performance Graph\" class=\"alignnone size-medium wp-image-704\" />\n\n<small><em>* System specs: Windows 7 64-bit on a Dual-Core 2.53ghz CPU with 4gb of RAM with no browser extensions</em></small>\n\n<ol>\n<li>Chrome kicks some serious butt over everyone else with <strong>the entire test suite running to completion in under 1 second!!</strong></li>\n<li>FireFox 3.5 has some serious improvements coming in at just over 1.5 seconds total, which is about 1/10 the time it took FireFox 2.0</li>\n<li>Internet Explorer 8 and Internet Explorer 7 (compat mode) are still bringing up the rear but they had a better showing than the 20+ seconds IE7 took when Jeff ran the test</li>\n</ol>\n\n<strong>Surprises?</strong>\nThe only thing I found surprising about the results was that if you removed the string test from both IE runs then IE8 in compatibility mode beats IE8 running normally. That doesn\'t seem right to me and I seriously hope JavaScript performance is something that gets addressed in IE9. And by \"addressed\" I mean \"fixed by replacing Trident with WebKit\".\n\nSo, what do these results <em>actually</em> mean? Well I guess it depends. If you use your browser to read blogs and check your gmail then you shouldn\'t really care about these numbers. However, if you\'re a web developer you should be paying strong attention to these numbers and how far they\'ve come in <em>just 2 years</em>.\n', '2011-05-01 03:34:45', 0, '')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Wolfram-Alpha-as-a-nutrition-calculator', '2009-12-03 06:00:00', 'Wolfram Alpha as a nutrition calculator', 'Turns out, <a href=\"http://www.wolframalpha.com/\">Wolfram Alpha</a> is really handy if you get curious about how many calories are in the lunch you packed for work. Check it out: \n\n<ul>\n <li><a href=\"http://www.wolframalpha.com/input/?i=1+apple+%2B+1+orange\">1 apple + 1 orange</a></li>\n <li><a href=\"http://www.wolframalpha.com/input/?i=2+slices+of+pepperoni+pizza+%2B+1+orange\">2 slices of pepperoni pizza + 1 orange</a></li>\n <li><a href=\"http://www.wolframalpha.com/input/?i=1+chocolate+chip+cookie+%2B+1+ham+and+cheese+sandwich+%2B+20oz+diet+coke\">1 chocolate chip cookie + 1 ham and cheese sandwich + 20oz diet coke</a></li>\n</ul>\n', '2011-05-01 03:34:45', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.3ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Google-DNS-30-seconds-may-save-you-10-or-more', '2009-12-05 06:00:00', 'Google DNS: 30 seconds may save you 10% or more', 'Being an uber geek means many things. Late-night code-a-thons just-because, intense debates about zombies vs. pirates vs ninjas (zombies ftw!) or <a href=\"http://en.wikipedia.org/wiki/Han_shot_first\">Greedo shooting first</a>, and a desire to have everything running as fast and efficiently as possible. \n\nIf you agree with that last sentiment, and you follow everything Google does then you\'re probably wondering if Google\'s new <del datetime=\"2009-12-05T02:57:13+00:00\">plans to eventually dominate the entire internet</del> <a href=\"http://code.google.com/speed/public-dns/\">free domain name server lookup service</a> is going to offer you any performance benefits. Well I was wondering the same thing and here is how I determined that it was a good idea to switch.\n\n<ol>\n	<li><a href=\"http://swmirror.org/drupal/?q=node/93\" target=\"_blank\">Download the DNS Performance Test application</a>, extract the zip archive to a folder on your system and run the executable</li>\n	<li>The app will start and randomize it\'s list of URLs. After this is done just click start and switch to the Stats tab</li>\n	<li>I let the app run for ~500 results to get a good sample of data. After you\'re satisfied with the number of results click the stop button and note the \"Average Query Time\"</li>\n	<li>Follow <a href=\"http://code.google.com/speed/public-dns/docs/using.html\">Googles directions for switching your DNS over</a> and then repeat steps 1-3 above</li>\n</ol>\n\nAfter I did those steps I had an average of 213ms for my ISPs DNS and 190ms for Googles. So in my case Google is definitely faster; a 12% increase in DNS lookup performance. So it looks like I\'ll be switching over. As for you, well, your mileage may vary. \n\nDid you switch to google? Stay with your current provider? Or maybe you went with OpenDNS? Let me know how it worked out for you in the comments.\n\n\n\n\n\n', '2011-05-01 03:34:45', 0, '')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.4ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Microsoft-Net-Framework-Public-Classes-Data-Dump', '2009-12-08 06:00:00', 'Microsoft .Net Framework Public Classes Data Dump', 'I\'ve wrapped up work on <a href=\"http://codeimpossible.com/jsoq\">v0.4 of the Jsoq Console</a>, and the insanely strenuous release cycle for v0.1 of <a href=\"http://whatdidijusteat.com\">WhatDidIJustEat.com</a> so I\'m starting another side project tonight.\n\nEver been working with a programming language you\'re not 100% familiar with and find yourself wondering:\n\n<blockquote><em>Is this function a built-in function or in some included library?<br />\nWhat assembly is this class in again?<br />\nCan I name my class XXXX without conflicting with another class?<br /></em></blockquote>\n\nI\'ve had these questions recently and found myself annoyed and frustrated to no end (PHP, I\'m looking at you) so I\'ve decided to build a system to keep track of this stuff for me :D. \n\nThe first thing on my list (because it was the easiest) was to do a data dump of all the public classes in the .Net Framework, including the ones in my GAC, and store some metadata for each one in a database table. I\'ve just finished this step and thought that this data might be useful, so I\'m posting it here. \n\nCurrently the fields included in the data dump are:\n\n<code>\n[namespace] = The namespace that the class exists in (ex: System.Collections.Generic)\n[class_name] = The name of the class (ex: StringBuilder)\n[assembly_fullname] = The display name of the assembly (ex: mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089)\n[assembly_file] = The full file path to the assembly (ex: C:\\Windows\\Microsoft.NET\\Framework\\v2.0.50727\\System.dll)\n[framework_name] = The framework that uses this class, for this dump they will all be \'Microsoft .Net\'\n[framework_version] = The framework version that uses this class (ex: v.2.0.50727)\n</code>\n\nThe .sql file takes about 18 seconds to run to completion on my AMD Athlon X2 2.53ghz machine with 4gb of RAM.\n\nIf you\'re curious about how I generated the .sql file, below is the code I used to find all the classes. It\'s not pretty but then again it was just meant to get the data into the database. Just paste the code into a new console app and run it in a command window like so:\n\n<code> [application_name].exe &gt; c:\\classes.sql</code>\n\nOr, you can <a href=\"http://www.box.net/shared/u8vsuy9lz1\">download the .sql file I\'ve generated</a> (it will also create the table you need to store the data).\n\n<pre class=\"prettyprint\"><code>\nstatic void Main(string[] args)\n{\n	var dictionary = new Dictionary<string, string>(){\n		{ \"v2.0.50727\", @\"C:\\Windows\\Microsoft.NET\\Framework\\v2.0.50727\" },\n		{ \"v3.0\", @\"C:\\Windows\\Microsoft.NET\\Framework\\v3.0\" },\n		{ \"v3.5\", @\"C:\\Windows\\Microsoft.NET\\Framework\\v3.5\" },\n		{ \"v???\", @\"c:\\windows\\assembly\\gac\" }\n	};\n\n	var types = new List<Type>();\n\n\n	foreach (var pair in dictionary)\n	{\n		var path = pair.Value;\n\n		var assemblies = Directory.GetFiles(path, \"*.dll\", SearchOption.AllDirectories);\n\n		foreach (string file in assemblies)\n		{\n			try\n			{\n				Assembly asm = Assembly.LoadFile(file);\n\n				foreach (Type t in asm.GetTypes())\n				{\n					if (t.IsPublic)\n					{\n						Console.WriteLine(String.Format(\n							\"INSERT INTO Classes (\" +\n								\"[namespace], \" +\n								\"class_name, \" +\n								\"assembly_fullname, \" +\n								\"assembly_file, \" +\n								\"framework_name, \" +\n								\"framework_version\" +\n							\") \" +\n							\"VALUES (\" +\n								\"\'{0}\', \" +\n								\"\'{1}\', \" +\n								\"\'{2}\', \" +\n								\"\'{3}\', \" +\n								\"\'Microsoft .Net\', \" +\n								\"\'{4}\'\" +\n							\")\",\n							String.IsNullOrEmpty(t.Namespace) ?\n								\"GLOBAL\" :\n								t.Namespace,\n							t.Name\n								.Replace(\"`1\", \"<T>\")\n								.Replace(\"`2\", \"<T1,T2>\")\n								.Replace(\"`3\", \"<T1,T2,T3>\"),\n							t.Assembly.FullName,\n							t.Assembly.Location,\n							pair.Key == \"v???\" ?\n								t.Assembly.GetName().Version.ToString() :\n								pair.Key\n						));\n					}\n				}\n			}\n			catch { }\n		}\n	}\n}\n</code></pre>\n\nIf you found this useful, let me know in the comments!\n', '2011-05-01 03:34:45', 0, '')[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('this-year-new-Year-this-year-Resolutions-', '2010-01-05 06:00:00', 'this.year = new Year(); this.year.Resolutions =', 'I\'ve spent the last few days going over what I want to accomplish this year, what I think I definitely could do, what might challenge me and what is just this side of impossible. Whenever I\'ve made my resolutions known in the past its always been in a passing conversation with a friend of family member. I never wrote them down or tried to keep track of them once the conversation was over so this year I decided to post them publicly to give me that extra bit of motivation, and also I\'ll be able to check back here throughout the year and see how I\'m measuring up.\n\nThese are in no particular order.\n\n<strong>I need to grow more as a professional.</strong> Last year I went to my first conference (MSDEVCON) and it was a total blast. I met a lot of truly awesome and intelligent people and learned a billion things that I didn\'t know before. After that I attended Stack Overflows Dev Days in Boston and it was the same experience all over again. This year My goal is to start attending more conferences/events (as many as I can afford with time and $$$) to grow myself as a professional.\n\n<strong>Make more mistakes. </strong>I made my fair share of mistakes in 2009 and (more importantly) I learned a lot from them: about myself, my skills, and what I am capable of. I\'m addicted. I\'m going to put myself more out in the open and make some more mistakes so I can learn a lot more in 2010.\n\n<strong>I need to lose at least 25lbs this year.</strong> I\'ve let myself go over the past few years and it\'s time to take my health more seriously. 25lbs probably doesn\'t sound like a lot and honestly it\'s a lot less than I need to lose but I\'ve never been good at staying fit so hopefully I achieve this goal relatively early and am able to keep the weight off the rest of the year.\n\n<strong>No more sugary drinks, especially soda.</strong> I\'m looking at you Mt. Dew. I\'m not sure what happened but between the end of the year work rush and the holiday (fr)antics I\'ve been downing soda like it\'s going out of style. Time for that to end.\n\n<strong>Eliminate debt.</strong> This goal is a bit lofty but my goal is to eliminate 80% of all my debts this year. This is going to be a tough one to pull off, what with the recent job change and our new house but it\'s needed.\n\n<strong>Finish </strong><em><strong>something</strong></em><strong>. </strong>I started <a href=\"http://code.google.com/p/myrkat\" target=\"_blank\">way</a> <a href=\"http://code.google.com/p/jsoq\" target=\"_blank\">too</a> <a href=\"http://codeimpossible.com/jsoq\" target=\"_blank\">many</a> <a href=\"http://whatdidijusteat.com\" target=\"_blank\">side</a> projects last year, and I finished... none. Not one project I started in 2009 saw what I would call a 1.0 release. Time to crap or get off the pot. I aim to crap. My goal will be to promote at least 2 of the projects I started in 2009 to a 1.0 release this year.\n\n<strong>More play.</strong> Tamara and I didn\'t get a vacation last year and we are dying for some time away. This is going to be tough with all my debt elimination going on but the more debt I get rid of the more I can save.\n\n<strong>More sleep.</strong> Tamara reminds me all the time how little sleep I get ( about 4-5 hours a night at most ) and it really started to show during the holidays. I simply ran myself into the ground. Time to recharge and see what I can really do.', '2011-05-01 03:34:45', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.3ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Solving-document-ready-is-not-a-function-and-other-problems', '2010-01-13 06:00:00', 'Solving &quot;$(document).ready is not a function&quot; and other problems', 'Has this ever happened to you: you\'ve been working on a customer\'s site, writing some really awesome jQuery flashy, fadey, scrolly, interactivey thing, you deploy it, and everything is awesome. The customer rejoices and the customer\'s customers rejoice. Rejoicing is had by everyone. \n\nAnd then you get an email one day:\n\n<blockquote>\n\"Everything is broken. We\'ve kidnapped your dog. Fix our site or you\'ll never see Spartacus again.\"</blockquote>\n\nAnd before you have time to wonder why you ever named your dog \"Spartacus\" to begin with (i mean <strong>come. on.</strong>), you\'re off in debug hell. You load the site and see all sorts of weird errors:\n\n<code>“$().ready is not a function”</code>\n\n<code>“$(document) doesn’t support this property or method”</code>\n\nOr my personal favorite: \n\n<code>“null is null or not an object”</code>\n\nYou open up FireFox, activate FireBug, load the console, and type “alert($)”, press run, and instead of seeing the expected jQuery function:\n\n<pre class=\"prettyprint\"><code>\nfunction (E, F) {\n return new (o.fn.init)(E, F);\n}\n</code></pre>\n\nYou instead get:\n\n<pre class=\"prettyprint\"><code>\nfunction $(element) {\n if (arguments.length > 1) {\n for (var i = 0, elements = [], length = arguments.length; i < length; i++) {\n elements.push($(arguments[i]));\n }\n return elements;\n }\n if (Object.isString(element)) {\n element = document.getElementById(element);\n }\n return Element.extend(element);\n}\n</code></pre>\n\nOr even:\n\n<pre class=\"prettyprint\"><code>\nfunction $(id) {\n return document.getElementById(id);\n}\n</code></pre>\n\n<strong>DOH!</strong> Looks like another javascript library has been loaded and has overwritten the <code>$()</code> shortcut for jQuery. Woe is I. Why can’t we all just get along?!? \n\nWell, we can’t stop people from including their favorite javascript libraries, but what we can do is prevent our code from suffering as a result. We’ll need a nice, big beefy, bodyguard to make sure our code isn’t messed with while it’s out clubbing with Prototype, Scriptaculous or even MooTools (who invited <em>him</em>??!?).\n\nHere’s what our bodyguard function will look like\n\n<pre class=\"prettyprint\"><code>\n( function($) {\n\n} ) ( jQuery );\n</code></pre>\n\nSo what this does is call our anonymous function and pass the <code>jQuery</code> object. This will scope ‘$’ to within our little function so we won’t step on anyone else’s toes (and they won’t bump into us while we’re on the dance floor and spill our drink everywhere). Okay, I think I\'ve taken the clubbing metaphor far enough.\n\nBasically this will allow our code to run and use the <code>$</code> shortcut for JQuery as if it were loaded without any of these other libraries on the page. \n\nHere is what the completed code would look like:\n\n<pre class=\"prettyprint\"><code>\n&lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.4.1/jquery.min.js\" type=\"text/javascript\"&gt;\n&lt;/script&gt;\n\n&lt;script src=\"http://ajax.googleapis.com/ajax/libs/prototype/1.6.1.0/prototype.js\" type=\"text/javascript\">\n&lt;/script&gt;\n&lt;script src=\"http://ajax.googleapis.com/ajax/libs/scriptaculous/1.8.3/scriptaculous.js\" type=\"text/javascript\">\n&lt;/script&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n( function($) {\n // we can now rely on $ within the safety of our “bodyguard” function\n $(document).ready( function() { alert(\"nyah nyah! I’m able to use \'$\'!!!!\"); } );\n} ) ( jQuery );\n\n//this will fail\n$(document).ready( function() { alert(\'fail?\'); } );\n&lt;/script&gt;\n</code></pre>\n\nI love using this simple self-calling anonymous function style when working with jQuery because it saves me from typing <code>jQuery()</code>, which really does look a lot more ugly than using the <code>$()</code> shortcut. It also protects my code from any scoping issues and lets the code function normally when <a href=\"http://docs.jquery.com/Core/jQuery.noConflict\">jQuery is put into no conflict mode</a>. \n\nMy opinion, if you\'re doing work in jQuery on sites that you don\'t control 100%, you should be using this method to protect your code and your clients.\n\n<strong>Updated: changed link for jquery to use 1.4.1 at the google CDN (tsk, tsk, tsk I was using the googlecode.com link)</strong>', '2011-05-01 03:34:45', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Using-jQuery-on-an-Iframe', '2010-03-04 06:00:00', 'Using jQuery on an Iframe', 'The other day I had to alter the stylesheets in a child IFrame when a user selected an item from a drop-down. My first draft was pretty ugly, it ivolved getting the DOM from the child IFrame (by getting it\'s <a href=\"http://www-archive.mozilla.org/docs/dom/domref/dom_frame_ref5.html\">contentWindow</a> or <a href=\"http://www-archive.mozilla.org/docs/dom/domref/dom_frame_ref4.html\">contentDocument</a> property) then getting the <head> of the DOM and looping over all the child items... yuck!\n\nI coded up this jQuery extension method which will return a jQuery-wrapped DOM instance for any of the matched IFrames.\n\n<pre class=\"prettyprint\"><code>\n(function($) {\n $.fn.extend({\n dom: function () {\n var $this = $(this);\n var getDom = function(o) {\n if( !o || (!o.contentWindow && !o.contentDocument) ) {\n return null;\n }\n \n var doc = (o.contentWindow || o.contentDocument);\n \n return doc.document || doc;\n };\n \n var dom = getDom($this[0]);\n \n return dom === null ? $this : $(dom);\n }\n });\n})(jQuery);\n</code></pre>\n\nSo with this, getting the styles for a child IFrame is as easy as:\n\n<pre class=\"prettyprint\"><code>\n$(\'iframe\').dom().find(\'head link\').each(function(index, item) {\n alert(item.href);\n});\n</code></pre>\n\n<em>Unfortunately, this code will only work if your IFrame is hosting content that is on the same domain as its parent.</em>', '2011-05-01 03:34:45', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.4ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('W-O-M-M-6-enumerateOver-', '2010-03-07 06:00:00', 'W.O.M.M. #6 - enumerateOver()', '<img class=\"alignleft\" title=\"works-on-my-machine-starburst\" src=\"http://codeimpossible.com/wp-content/uploads/2009/06/works-on-my-machine-starburst.jpg\" alt=\"works-on-my-machine-starburst\" />\n\nI\'ve been focusing more and more on <a href=\"http://bitbucket.org/codeimpossible/jsoq\"> my port of Ling-to-Objects, Jsoq</a> the past few weeks. It\'s still in really early stages and I\'m not quite sure about it\'s actual usefulness but I\'m learning a lot about JavaScript and having a ton of fun along the way!\n\nJsoq deals with arrays a lot. About 95% of it\'s use cases involve either looping through, altering, or creating arrays. Having a ton of <code>for</code> loops in my code just seems so... not right. For loops have always seemed dirty to me. They just aren\'t elegant enough. \n\nHere is your normal, average, everyday <code>for</code> loop in Javascript.\n\n<pre class=\"prettyprint\"><code>\nvar array = \"1,2,3,4,5,6,7,8,9,10\".split(\',\');\n\nfor(var i = -1, l = array.length; ++i &lt; l;) {\n alert(array[i]);\n}\n</code></pre>\n\nThis works. It\'s reliable and gets the message across. But what if we needed to loop over an array and get all the items that matched a condition? Using a <code>for</code> loop the code could look something like:\n\n<pre class=\"prettyprint\"><code>\nvar array = [ 1, 2, 3, 4, 5, 1, 2, 3, 4 ];\nvar results = [];\nvar condition = function(i) { return i%2 == 0; };\n\nfor(var itt = -1, len = array.length; ++itt &lt; len;) {\n	if( condition(array[itt]) ) {\n		results.push(array[itt]);\n	}\n}\n</code></pre>\n\nThis does work, I\'ve written code like this many times before, and while <em>technically</em> there isn\'t anything wrong with it I think there is still room for improvement.\n\nJsoq is going to be handling arrays all over the place so the solution to this problem <em>needs</em> to be simple.\n\nHere\'s what I need:\n<ul>\n	<li>to loop over an entire collection and perform an action on each item.</li>\n	<li>If that action produces a result, the item is to be pushed into an array and returned to after the loop is done</li>.\n	<li>Also: it needs to be readable, someone else coming along should be able to determine what this thing is doing without too much difficulty. So I had my work cut out for me. </li>\n</ul>\n\nA few hours later I had a decent function that I could use to replace a lot of the <code>for</code> loops I had. After some more refactoring I was able to wipe them all out and replace them with calls to <code>enumerateOver()</code>. Here is the latest version from source control:\n\n<pre class=\"prettyprint\"><code>\nfunction enumerateOver(collection, work) {\n	var result = [], val = [];\n	\n	if (isArray(collection)) {\n		try {\n			for (var i = -1, l = collection.length; ++i < l;) {\n				result = work(collection[i], i);\n				if (typeof result !== \"undefined\" && result != null) {\n					val.push(result);\n				}\n			}\n		}catch (e) {\n			if (e != jsoq.$break) throw(e);\n		}\n		\n		if (val.length > 0) {\n			return val;\n		}\n	}else {\n		try {\n			val = work(collection, 0);\n		}\n		catch (e) {\n			if (e != jsoq.$break) throw(e);\n		}\n		if (typeof val !== \'undefined\') {\n			return val;\n		}\n	}\n	return result == null ? [] : result;\n}\n</code></pre>\n\nAnd here is the code to replace the <code>for</code> loops above, re-written to use <code>enumerateOver()</code>\n\n<pre class=\"prettyprint\"><code>\nvar results2 = enumerateOver(array, function(i, c) {\n return i%2 == 0;\n});\n</code></pre>\n\nSo by implmenting this function I was able to come up with a more readable, testable and streamlined codebase. Is this suitable for everyone? Definitely not, but I did it for a few reasons:\n\n<ol>\n	<li>Like I mentioned before. I\'ve never been at ease with <code>for</code> loops and being able to replace them all with calls to a single function was a huge win for me</li>\n	<li>The normal use-case didn\'t fit right. I needed to not only iterate over arrays but also return the results of work performed on those items. Doing this the \"regular\" way just wouldn\'t work (see previous reason)</li>\n	<li>I thought this was a fun problem to solve</li>\n</ol>\n\nIf you have any feedback, good, bad, or indifferent add a comment!', '2011-05-01 03:34:45', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Lessons-Learned', '2010-03-10 06:00:00', 'Lessons Learned', 'lessons learned this morning: \na) Even if it\'s simple code you \"know\" will work you <strong>must</strong> test it. No excuses. \nb) In programming, nothing happens by \"magic\". There is a tangible reason that that thing that should be working isn\'t.\nc) Don\'t assume something couldn\'t be true simply because it doesn\'t make any sense.', '2011-05-01 03:34:45', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('PAX-East-in-Pictures', '2010-04-02 05:00:00', 'PAX East in Pictures', '[gallery link=\"file\" order=\"DESC\"] ', '2011-05-01 03:34:45', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Migrating-Asp-net-MVC-Projects-from-MVC-1-0-to-2-0', '2010-04-06 05:00:00', 'Migrating Asp.net MVC Projects from MVC 1.0 to 2.0', 'The<a href=\"http://haacked.com/archive/2010/03/11/aspnet-mvc2-released.aspx\" target=\"_blank\"> Asp.net Mvc 2.0 RTM came out last month</a> and a lot of people are converting their projects over. If you\'re just starting to manually move your projects over then stop what you are doing, <a href=\"http://weblogs.asp.net/leftslipper/archive/2010/03/10/migrating-asp-net-mvc-1-0-applications-to-asp-net-mvc-2-rtm.aspx\" target=\"_blank\">download and run the Mvc Converter</a>. It will save you eons of time and frustration.\n\nIf you are like me, however, and started porting your project over manually and are now knee deep in WTFBBQ sauce then follow the steps below and your project should be up and running in no time.\n\n1. Back up your project. Just in case.\n\n2. Open your project file(s) inside your favorite text editor (one with a decent find/replace system). Open the Find &amp; Replace dialog and find <code>\"603c0e0b-db56-11dc-be95-000d561079b0\"</code>, replacing it with <code>\"F85E285D-A4E0-4152-9332-AB1D724D3325\"</code>. My project turned up 1 result.\n\n3. Open the Web.Config files in the root of the project and the root of the /Views folder. Open the Find &amp; Replace dialog again, this time searching for <code>\"System.Web.Mvc, Version=1.0.0.0\"</code> and replacing it with <code>\"System.Web.Mvc, Version=2.0.0.0\"</code>.\n\n4. Add the following BindingRedirect to the bottom of the root Web.Config, just before the &lt;/Configuration&gt; node.\n\n<pre class=\"prettyprint\"><code>\n&lt;runtime&gt;\n &lt;assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\"&gt;\n &lt;dependentAssembly&gt;\n &lt;assemblyIdentity name=\"System.Web.Mvc\" publicKeyToken=\"31bf3856ad364e35\"/&gt;\n &lt;bindingRedirect oldVersion=\"1.0.0.0\" newVersion=\"2.0.0.0\"/&gt;\n &lt;/dependentAssembly&gt;\n &lt;/assemblyBinding&gt;\n&lt;/runtime&gt;\n</code></pre>\n\n5. Open the solution in Visual Studio and replace the references to System.Web.Mvc 1.0 with the 2.0 assembly.\n6. Finally, and only if you really need them, open a new MVC 2.0 project and copy all the files in the /Scripts folder to your project. \n\nEnjoy your freshly migrated project!', '2011-05-01 03:34:45', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Comments-stink-', '2010-07-16 05:00:00', 'Comments stink!', 'I\'ve been thinking about the whole <a href=\"http://memeagora.blogspot.com/2008/11/comments-code-smell.html\" target=\"_blank\">Comments-as-a-code-smell argument</a> for a very long time. When I first heard this idea, I was in the comments are definitely needed side of the argument.\n\n<em>\"Who could hate comments so much that they would label them as a code smell?\"</em> I thought.\n\nWell, I had an epiphany the other day.\n\n<strong>I\'ve never seen a block of code that actually needed a comment. Ever.</strong>\n\nIf you have a section of code that feels too complex, instead of adding a comment do any/all of the following and you can, in almost every case, reduce the need for comments by 100%:\n<ol>\n	<li>add a sourcecontrol commit comment</li>\n	<li>do a simple refactor (<a href=\"http://www.industriallogic.com/xp/refactoring/composeMethod.html\" target=\"_blank\">Compose Method</a> ftw people),</li>\n	<li>use more descriptive variable/function/class/whatever names.</li>\n</ol>\nIf you do all of these things and the code you are working on still seems too complex, you may have bigger problems with your overall architecture/design and adding a comment isn\'t going to help. In this case it\'s time to go back to the drawing board.\n\nAlso, everytime you commit a changeset into sourcecontrol that contains a section of code commented out god kills a kitten. Please think of the kittens.', '2011-05-01 03:34:45', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Installing-Assemblies-to-GAC-with-PowerShell', '2010-07-21 05:00:00', 'Installing Assemblies to GAC with PowerShell', 'I just finished my first ever powershell script and I\'m pretty proud of it - even though <a href=\"http://weblogs.asp.net/adweigert/archive/2008/10/31/powershell-install-gac-gacutil-for-powershell.aspx\">I did borrow a good portion of it</a>.\n\nWe\'re starting a pretty long-term project at work - it\'s scheduled for a final deliverable date set in July of 2011 - and with our small(er) dev team I\'m pretty certain more hands than my own will be working on this over the course of the entire project.\n\nThis new project is going to have a few external dependencies (Moq, StructureMap, possibly MvcTurbine) and I wanted a quicker and friendlier way for a new developer coming into the project to get up-to-speed environment wise. I originally started with a batch file. I know, I know. It\'s my comfort zone. Too many years of not having something like powershell at my finger-tips.\n\nAfter about 10 minutes of fighting with batch language limitations <a href=\"http://twitter.com/codeimpossible/statuses/19095201324\">I decided to move on and try my hand at using powershell</a> to help automate the developer environment setup.\n\nSo I borrowed some code from Adam Weigerts blog to bypass the need for the gacutil (and the .Net Framework SDK, a whopping 100mb download!). Once I had this, I just had to come up with the code to recurse over all the .dll files that are stored in sub-folders within a \"Source Dependencies\" folder. \n\nFrom concept to finish I think this took me about an hour to come up with, I\'m no programming super soldier so anyone who is doing windows development should be able to throw together a powershell script to automate their common, repetitive and annoying tasks.\n\nThe code is included below, I\'ll be adding to it as the project goes on, pushing in some other environment setup features (dev db creation/sync would be the next feature for this). Now that I\'ve taken a swing at PowerShell I\'m really happy with it and I really am sorry it took so long for me to use it.\n\nIf you\'re still automating things with Batch files, you\'re missing out. Big.\n\n<pre><code class=\"prettyprint\" style=\"width:560px; overflow: auto; display: block;\">\nBEGIN {\n Clear-Host\n $ErrorActionPreference = \"Stop\"\n \n if ( $null -eq ([AppDomain]::CurrentDomain.GetAssemblies() |? { $_.FullName -eq \"System.EnterpriseServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" }) ) {\n [System.Reflection.Assembly]::Load(\"System.EnterpriseServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\") | Out-Null\n }\n\n $publish = New-Object System.EnterpriseServices.Internal.Publish\n}\n \nPROCESS {\n $files=get-childitem \".\\Source Dependencies\" *.dll -rec|where-object {!($_.psiscontainer)}\n foreach( $file in $files ) {\n $assembly = $file.fullname \n if ( -not (Test-Path $assembly -type Leaf) ) {\n throw \"The assembly \'$assembly\' does not exist.\"\n }\n \n if ( [System.Reflection.Assembly]::LoadFile( $assembly ).GetName().GetPublicKey().Length -eq 0 ) {\n throw \"The assembly \'$assembly\' must be strongly signed.\"\n }\n \n Write-Output \"Installing: $assembly\"\n \n $publish.GacInstall( $assembly )\n }\n}\n</code></pre>', '2011-05-01 03:34:45', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Get-databases-in-sql-backup-plan-with-sql', '2010-07-22 05:00:00', 'Get databases in sql backup plan with sql', 'I helped Tamara figure this out the other day and thought others might want to know. She needed to know which databases would be backed up when a given backup plan was executed. The server was a sql 2000 server and the machine she was using didn\'t have enterprise manager installed.\n\n<pre style=\"display: block; overflow: auto: width: 550px;\"><code class=\"prettyprint\">\n SELECT \n *\n FROM \n msdb.dbo.sysdbmaintplans\n LEFT JOIN msdb.dbo.sysdbmaintplan_databases\n ON msdb.dbo.sysdbmaintplan_databases.plan_id = msdb.dbo.sysdbmaintplans.plan_id\n WHERE\n msdb.dbo.sysdbmaintplans.plan_name = \'PUT YOUR PLAN NAME HERE\'\n</code></pre>\n\n\nSo if anyone out there finds themselves needing to know which databases will be backed up by a given backup plan, and for whatever reason you don\'t have Sql Management Studio or Enterprise Manager then this should work.', '2011-05-01 03:34:45', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.3ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Test-that-CouchDB-is-running-in-PowerShell', '2010-08-04 05:00:00', 'Test that CouchDB is running in PowerShell', 'I mentioned previously that I am working on <a href=\"http://codeimpossible.com/2010/07/21/installing-assemblies-to-gac-with-powershell/\" target=\"_blank\">a dev environment setup script</a> for a long-term project at work. The goal of this script is to get a developer\'s machine ready to work on the project, installing dependencies, creating dev/test databases, etc.\n\nSince our project will be using <a href=\"http://couchdb.apache.org/\" target=\"_blank\">CouchDB</a> my script should create/update a few databases when it is run (this part is coming soon!). But before that can happen the script needs to check for the presence of an active CouchDB instance. \n\nSince CouchDB has a completely HTTP-based API we can test for its existence by opening up our <a href=\"http://www.google.com/chrome\" target=\"_blank\">favorite browser</a> and visiting <a href=\"http://localhost:5984\" target=\"_blank\">http://localhost:5984</a>. This gives us:\n\n<pre>\n{\"couchdb\":\"Welcome\",\"version\":\"1.0.0\"}\n</pre>\n\nSo my script is going to need to do an HTTP GET on the url above and compare it to the <a href=\"http://en.wikipedia.org/wiki/Json\" target=\"_blank\">JSON</a> response that CouchDB should send back. Now normally, I might want this check to be less strict, maybe only checking that <code>{\"couchdb\":\"Welcome\"</code> was returned, but in this case I want the specific version number as well so this check will be fine going forward.\n\nIf I don\'t get the response I expect I\'ll want the script to fail out immediately; No sense in continuing with the environment setup if one of the key components is missing!\n\n<pre style=\"\"><code class=\"prettyprint\">\n$futonurl = \"http://localhost:5984\"\n$resp_couchdb = [string](new-object System.Net.WebClient).DownloadString($futonurl)\n\nif( $resp_couchdb.Trim() -eq \"{\"\"couchdb\"\":\"\"Welcome\"\",\"\"version\"\":\"\"1.0.0\"\"}\" ) {\n Write-Output \"CouchDB 1.0 Found!\"\n # here we can continue setting up our test/dev document stores\n} else {\n throw(\"CouchDB v1.0 must be installed and running to continue...\")\n}\n</code></pre>\n\nAlthought this script is pretty simple, it shows that PowerShell is not just MS-Batch 2.0. PowerShell lets me leverage .Net to do heavy lifting from the command-line that I wouldn\'t be able to do without creating a few console applications.', '2011-05-01 03:34:45', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Spot-the-bug', '2010-08-27 05:00:00', 'Spot the bug', 'What is wrong with the code below?\n \nSafe Assumptions:\n<ol>\n	<li><code>_dictionary</code> is a valid non-null <code>Dictionary&lt;object,object&gt;</code></li>\n	<li><code>_dictionary</code> contains items that will match the passed expression</li>\n	<li>This code compiles with no warnings or errors</li>\n	<li>This code <strong>will</strong> throw an exception at runtime.</li>\n</ol>\n\n<pre style=\"display: block; overflow: auto: width: 550px;\"><code class=\"prettyprint\">\npublic IList&lt;TModel&gt; GetAllByCriteria&lt;TModel&gt; ( Expression&lt;Func&lt;TModel, bool&gt;&gt; criteria )\n{\n Func&lt;TModel, bool&gt; action = criteria.Compile();\n return _dictionary.Where( pair =&gt; \n action( (TModel)pair.Value ) ).Cast&lt;TModel&gt;().ToList();\n}\n</code></pre>\n \nIf you don’t see it right away then you’re not alone. I spent a while debugging to catch this. If you do see it right away then pat yourself on the back.', '2011-05-01 03:34:45', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.3ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Spot-the-bug-2', '2010-09-02 05:00:00', 'Spot the bug #2', 'I came across this issue just at quitting time yesterday and was blown away when I realized what was happening.\n\n<strong>The UsersController Index View (pre submit)</strong>\n<a href=\"http://codeimpossible.com/wp-content/uploads/2010/08/listbox_post_problem.png\"><img src=\"http://codeimpossible.com/wp-content/uploads/2010/08/listbox_post_problem.png\" alt=\"\" title=\"listbox_post_problem\" width=\"556\" height=\"616\" class=\"aligncenter size-full wp-image-924\" /></a>\n\n<strong>The UsersController Code</strong>\n<code><pre class=\"prettyprint\" style=\"border: none;\">\n public class UsersController : Controller\n {\n\n List&lt;string&gt; users = new List&lt;string&gt; ()\n {\n \"mace.windu\",\n \"yoda\",\n \"senator.amidala\",\n \"anakin.skywalker\",\n \"obiwan.kenobi\"\n };\n\n public ActionResult Index()\n {\n return View( users );\n }\n\n\n [HttpPost]\n public ActionResult Delete ( string[] userstodelete )\n {\n\n if ( userstodelete == null || userstodelete.Length == 0 )\n {\n throw new ArgumentException ( \n \"argument must contain at least one entry\", \n \"userstodelete\" );\n }\n\n // code could go here to\n // call out to some service to\n // delete these users\n\n TempData[\"deletedUsers\"] = userstodelete;\n\n foreach ( var user in userstodelete )\n users.Remove ( user );\n\n return View (\"Index\", users);\n }\n }\n</pre></code>\n\n<strong>Problem</strong>\nLooks like it should all work perfectly right? That\'s what I thought. However, clicking \"Delete Users\" will only \"delete\" our pre-darth user \"anakin.skywalker\".\n\nWhy?\n\n<em>Hint: Everything here is <a href=\"http://www.w3.org/TR/html401/interact/forms.html#edef-SELECT\" target=\"_blank\">working exactly as it should.</a></em>', '2011-05-01 03:34:45', 0, '')[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Code-comments-hurt-instead-of-help', '2010-09-09 05:00:00', 'Code comments hurt instead of help', 'Remember when I said \"<a href=\"http://codeimpossible.com/2010/07/16/comments-stink/\">I’ve never seen a block of code that actually needed a comment. Ever.</a>\"? \n\nHere\'s a great example of what I\'m talking about:\n\n<a href=\"http://codeimpossible.com/wp-content/uploads/2010/09/comments_are_useless.png\"><img src=\"http://codeimpossible.com/wp-content/uploads/2010/09/comments_are_useless.png\" alt=\"\" title=\"comments_are_useless\" width=\"599\" height=\"218\" class=\"aligncenter size-full wp-image-947\" /></a>\n\nThere isn\'t one comment in there that adds value to this code. In fact there are two that <strong>are completely and utterly incorrect</strong> about what this code does.\n\n', '2011-05-01 03:34:45', 0, '')[0m
  [4;35;1mSQL (0.2ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Spot-the-bug-3', '2010-09-10 05:00:00', 'Spot the bug #3', 'Two coworkers and I fought with this for a bit earlier this week. Facing a nearing deadline and since the code only needed to run once to populate a database table, we ended up using the ugly method.\n\nI made an example of the piece of code that was giving us trouble. Why will <code>coordinates</code> always be null yet <code>coordinatesUgly</code> always gets the correct node?\n\n<code><pre class=\"prettyprint\" style=\"border: none;\">\nclass Program\n{\n\n private static string xml = @\"&lt;?xml version=\"\"1.0\"\" encoding=\"\"UTF-8\"\"?&gt; \n&lt;kml xmlns=\"\"http://earth.google.com/kml/2.0\"\"&gt;\n &lt;Document&gt;\n &lt;Placemark&gt;\n &lt;name&gt;my office&lt;/name&gt;\n &lt;LookAt&gt;\n &lt;longitude&gt;8.853193712983327&lt;/longitude&gt;\n &lt;latitude&gt;53.10919982492059&lt;/latitude&gt;\n &lt;range&gt;500000&lt;/range&gt;&lt;tilt&gt;0&lt;/tilt&gt;&lt;heading&gt;0&lt;/heading&gt;\n &lt;/LookAt&gt;\n &lt;Point&gt;\n &lt;coordinates&gt;8.853193712983327,53.10919982492059,10&lt;/coordinates&gt;\n &lt;/Point&gt;\n &lt;/Placemark&gt;\n &lt;/Document&gt;\n&lt;/kml&gt;\n\";\n\n static void Main ( string[] args )\n {\n var xdoc = new XmlDocument ();\n xdoc.LoadXml ( xml );\n\n var coordinatesUgly = xdoc.DocumentElement\n .FirstChild\n .FirstChild\n .ChildNodes[2]\n .FirstChild;\n\n var coordinates = xdoc.SelectSingleNode ( \"//coordinates\" );\n\n Console.WriteLine ( \"The Ugly Way: \" + coordinatesUgly.InnerText );\n Console.WriteLine ( \"With Xpath: \" + (\n coordinates == null ? \"NULL\" : coordinates.InnerText) );\n\n Console.ReadLine ();\n }\n}\n</pre></code>', '2011-05-01 03:34:45', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Symbolic-links-in-Windows-7', '2010-09-13 05:00:00', 'Symbolic links in Windows 7', 'A symbolic link is a text file that contains a relative or absolute path to another directory or file. When an operating system receives a request for a path that resolves to a symbolic link the operating system loads the linked directory or file transparently.\n\nSo let\'s say I had the following symbolic link setup: \n\n<code>Folder A -linked-to-> Folder B.</code>\n\nWhen I browse to <code>Folder A</code> I would see the contents of <code>Folder B</code> as if they existed in <code>Folder A</code>! Since the folders are linked I can change any of the files in either location, and I can delete the symbolic folder (<code>Folder A</code>) without deleting the target folder!\n\nSymbolic links have been around for a looooooong time ( in pretty much every other operating system ) but Windows got this feature only recently - as of Windows Vista mklink ships with the OS bits. \n\nTo make a symbolic link, open a command line and use mklink (in Windows Vista and greater):\n<pre><code class=\"prettyprint\">\nmklink /D &lt;path_to_symbolic_dir&gt; &lt;path_to_target_dir&gt;\n</code></pre>\n\nFor example:\n<pre><code class=\"prettyprint\">\nmklink /D \"C:\\My Linked Folder\" \"C:\\My Project Folder\"\n</code></pre>\n', '2011-05-01 03:34:45', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Regions-FTW', '2010-09-15 05:00:00', 'Regions FTW', '<img src=\"http://codeimpossible.com/wp-content/uploads/2010/09/REGIONSFTW.png\" alt=\"Awesome code.\" title=\"#regions. For. The. Freaking. Win.\" width=\"442\" height=\"736\" class=\"aligncenter size-full wp-image-963\" />\n\nin case your curious, or just made out of concentrated evil and want to check this code into your SCCS at work, here is <a href=\"http://pastie.org/1156220\">the code used in the image above</a>.', '2011-05-01 03:34:45', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Spot-the-bug-for-in-and-JavaScript', '2010-09-20 05:00:00', 'Spot the bug - for/in and JavaScript', 'I\'m poking around in the <a href=\"http://bitbucket.org/codeimpossible/jsoq\" target=\"_blank\">JSOQ source</a> this week and came across this gem. \n\n<pre class=\"prettyprint\"><code>\nvar array = [\n { id: 1, num: 2 },\n { id: 2, num: 3}\n];\n\n// find the item with num == 2\nfor(var item in array) {\n if( item.num == 2 ) {\n alert(item.id);\n }\n}\n</code></pre> \n\nThe code above isn\'t calling <code>alert(item.id)</code>. Why is this?', '2011-05-01 03:34:45', 0, '')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('JavaScript-Object-Query-Jsoq-is-1-0-', '2010-09-28 05:00:00', 'JavaScript Object Query (Jsoq) is 1.0!', 'I\'ve finally pushed one of my side-projects, the JavaScript Object Query library to 1.0! I\'m pretty psyched since I\'ve been meaning to do this ever since <a href=\"http://codeimpossible.com/2009/02/10/introducing-the-javascript-object-query-library/\">I blogged about it back in February</a>.\n\nYou can download the 1.0 release <a href=\"http://bitbucket.org/codeimpossible/jsoq/downloads/jsoq.1.0.min.js\">here (minified)</a> and <a href=\"http://bitbucket.org/codeimpossible/jsoq/downloads/jsoq.1.0.debug.js\">here (normal)</a>.\n\n<strong>What is Jsoq?</strong><br />\nJsoq is a port of Linq to Objects to JavaScript. Under the covers jSoq is a bunch of wrapper code for dealing with arrays in JavaScript.\n\n<strong>Features for v1.0</strong>\n<ul>\n <li>Doesn\'t mess with \"$\" variables so it works with jQuery, Mootools, etc.</li>\n <li>using select() you can have Jsoq return only certain members from each object in it\'s query set</li>\n <li>use built-in filter methods first(), last(), skip(), take() or roll your own using where()</li>\n <li>ability to add functionality to your returned object via the extendEach() method</li>\n <li>you can use $q as a shortcut for the jsoq.From() method</li>\n <li>inner and left joins are now supported with the leftJoin() and innerJoin() methods</li>\n</ul>\n\n\n<strong>A very basic code example</strong><br />\nBelow is what I would call the common jsoq use case. The code below will find the first item that has a <code>value</code> property with a length greater than 3, and return an object containing its <code>id</code> property.\n\n<pre class=\"prettyprint\"><code>\nvar somearray = [\n { value: \"one\", id: 1 }, \n { value: \"two\", id: 2 }, \n { value: \"three\", id: 3 }, \n { value: \"four\", id: 4 }\n];\n\nvar result = $q(somearray)\n .where(function(item) {\n return item.value.length > 3;\n })\n .first()\n .select(\"id\");\n\nalert(result.id); // alerts \"3\"\n</code></pre>\n\n\n\nFor a full list of features and more code examples check out <a href=\"http://bitbucket.org/codeimpossible/jsoq/wiki/Home\">the documentation on the official Jsoq wiki</a>, it\'s a bit sparse right now but I\'ll be adding more content in the near future.', '2011-05-01 03:34:45', 0, '')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.1ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Someone-had-to-say-it', '2010-10-05 05:00:00', 'Someone had to say it', '<a href=\"http://codeimpossible.com/wp-content/uploads/2010/09/skip-magic-learn-c.jpg\"><img src=\"http://codeimpossible.com/wp-content/uploads/2010/09/skip-magic-learn-c.jpg\" alt=\"\" title=\"skip-magic-learn-c\" width=\"400\" height=\"400\" class=\"aligncenter size-full wp-image-997\" /></a>', '2011-05-01 03:34:45', 0, 'Forget all this dynamic language and virtual machine nonsense, real men program without magic!')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.3ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Spot-the-bug-TDD-Edition', '2010-10-12 05:00:00', 'Spot the bug: TDD Edition', 'For the past two years I\'ve been doing Asp.net MVC development off and on and practicing TDD off and on as well. For my current project at work I\'m doing TDD \"Full Bore\" and I\'m absolutely loving it. It\'s saved my bacon numerous times and I can\'t imagine doing a long-term, complex project without it.\n\nToday I have one example of how TDD has saved my arse: I\'m beginning work on adding a controller for Projects in our db and the Index action needs return a list of projects in the system. Following TDD I\'ve got to write the test first before I get to write any system code.\n\n<pre class=\"prettyprint\"><code>\n [Test]\n public void Index_HttpGet_ModelIsListOfProjects ()\n {\n var controller = new ProjectController();\n\n var result = controller.Index() as ViewResult;\n\n // uses WithViewData extension method from \n // MvcContrib TestHelpers\n result.WithViewData&lt;List&lt;Project&gt;&gt;();\n }\n</code></pre>\n\nOkay, now, let\'s create that controller so I can run my test and see it fail.\n\n<pre class=\"prettyprint\"><code>\n public class ProjectController : Controller\n {\n public ActionResult Index ()\n {\n return View();\n }\n }\n</code></pre>\n\nGreat! Now to run my test aaaaaaaand. Whoa! What? The test is <strong>passing</strong>!?!? W.T.F?!?\n\n... after about 30 seconds of staring at my computer screen in awe I realize what must be happening. I load up the source for the <code>WithViewData</code> extension method and spot the bug.\n\n<em>Note: I skipped a step here, WithViewData() calls AssertViewDataModelType() so I included that method here instead</em>\n\n<pre class=\"prettyprint\"><code>\n private static TViewData AssertViewDataModelType&lt;TViewData&gt;(\n ViewResultBase actionResult)\n {\n var actualViewData = actionResult.ViewData.Model;\n var expectedType = typeof(TViewData);\n\n if ( actualViewData == null &amp;&amp; expectedType.IsValueType)\n {\n throw new ActionResultAssertionException(\n string.Format(\"Expected view data of type \'{0}\', actual was NULL\",\n expectedType.Name));\n }\n \n if (actualViewData == null)\n {\n return (TViewData)actualViewData;\n }\n\n if (!typeof(TViewData).IsAssignableFrom(actualViewData.GetType()))\n {\n throw new ActionResultAssertionException(\n string.Format(\"Expected view data of type \'{0}\', actual was \'{1}\'\",\n typeof(TViewData).Name, actualViewData.GetType().Name));\n }\n\n return (TViewData)actualViewData;\n }\n</code></pre>\n\nCan you tell why the test is passing?', '2011-05-01 03:34:45', 0, 'Thanks to TDD I was able to prevent an obscure bug in a third party library from affecting my code before it got to the customer. It felt really awesome to catch this one before it happened in the wild.')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.2ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('C-5-0-wish-list', '2010-10-20 05:00:00', 'C# 5.0 wish list', 'Let\'s get right to it.\n\n<strong>Extension Properties: </strong> This is first on this list because it was the first feature I thought of. Extension properties aren\'t something I\'m dying for but they would be a nice feature to have.\n<pre class=\"prettyprint\"><code>\n public static class StringExtensions \n {\n public static int LengthWithNoSpaces \n {\n get \n {\n return this.Replace( \" \", \"\" ).Length;\n } \n }\n }\n</code></pre>\n\n<strong>Generics in Attributes: </strong> I\'m probably alone in wanting the ability to use generics in attribute classes but I can think of a few cases where this would make code more readable. e.g.\n<pre class=\"prettyprint\"><code>\n [ExpectedException&lt;InvalidOperationException&gt;()]\n</code></pre>\n\n<strong>Constructor Inheritance: </strong> I\'m still not sure why this isn\'t in c# already. I hate writing constructors that just pass arguments to base constructors.\n<pre class=\"prettyprint\"><code>\n public class A \n {\n private int number = 0;\n public A() \n {\n number = 10;\n }\n public A(int num) \n {\n number = num;\n }\n }\n\n public class B : A \n {\n \n }\n\n var test = new B(10); //this doesn\'t work!\n\n // to get this to work you need to do:\n public class C : A\n {\n public C (int num) : base(num) {} // really?!?!?!\n }\n</code></pre>\n\n<strong>Nested inner classes ala Java: </strong> This is one syntax feature I really love about Java. I use this all the time when I work on Android applications. It just feels right to override virtual members inside inline object instantiations. \n<pre class=\"prettyprint\"><code>\n public class A\n {\n public virtual void Test()\n {\n\n }\n\n }\n\n var ab = new A() {\n Test = () => MessageBox.Show(\"Test!\");\n };\n</code></pre>\n\n<p>But why stop here, why not go all in with...</p>\n\n<strong>JavaScript-style handling of dynamics: </strong> (Yeah, I know this won\'t be happening soon if ever but I can dream, right?)\n<pre class=\"prettyprint\"><code>\n var x = new dynamic {\n Test = () => { return this.SomeNumber * 2; },\n SomeNumber = 11\n };\n\n // this would work as long as return type was still int\n x.Test = () => { return 11; }; \n\n // this would fail\n x.Test = () => { return \"hi\"; }; \n \n // y would == 11\n var y = x[\"Test\"](); \n \n // able to add new properties like javascript\n x[\"NewProp\"] = \"SomeValue\"; \n</code></pre>\n<p>So that\'s <strong>my</strong> list (for now) of what I would like to see in vnext of C#, <em><span style=\"font-size: 18px;\">what\'s on your wish list for C# 5.0?</span></em></p>', '2011-05-01 03:34:45', 0, 'I\'ve been using C# as my primary programming language for about, oh 6 years now. I love it but I wouldn\'t say it\'s perfect. The C# language is lacking a lot of features that I\'ve found to be huge productivity boosts in other languages.')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Follow-Friday', '2010-10-22 05:00:00', 'Follow Friday', 'One of my co-workers, @chrisbloom7, <a href=\"http://twitter.com/chrisbloom7/status/22262783746\">offered some advice recently on how people should handle #followfridays</a> on twitter. \n\n<blockquote>#protip: Don\'t just spew a list of names on #FF. Use a whole tweet to tell me WHY I should follow each twitterer.</blockquote>\n\nWhich is an awesome idea, but I hate the fact that my tweets will <a href=\"http://www.readwriteweb.com/archives/10_ways_to_archive_your_tweets.php\">eventually disappear</a> or get lost amidst floods of tweets in other twitterers feeds so I\'ve posted a few developers that I would recommend other follow on twitter.\n\n<a href=\"http://twitter.com/chrisbloom7\">@chrisbloom7</a> - Smart and witty web developer. A fellow TDD and ruby enthusiast, co-worker at Wake}fly, open source developer, mac hobbyist. Keep on truffle shuffle\'n.\n\n<a href=\"http://twitter.com/johnbubriski\">@johnbubriski</a> - Calm, cool and collected .net developer and another of the Wake}fly twitteristas. He\'s talked me down off the architecture astronaut ledge more times than I can count. You should also <a href=\"http://www.johnnycode.com/blog/\">check out his blog</a>.\n\n<a href=\"http://twitter.com/digitalbush\">@digitalbush</a> - Developer who talented and driven to finding the best solution to a problem, not just the fastest. Author of the <a href=\"http://digitalbush.com/projects/hotlinkr\">hotlinkr</a> project as well as <a href=\"http://digitalbush.com/projects/\">several popular jQuery plugins</a>. <a href=\"http://digitalbush.com/\">Check out his blog as well</a>.\n\n<a href=\"http://twitter.com/edgesmash\">@edgesmash</a> - C# developer that is smart, creative and very insightful. He has <a href=\"http://productiveonceaday.blogspot.com/\">an excellent blog that you should read</a>.\n\n<a href=\"http://twitter.com/Kevin_McManus\">@Kevin_McManus</a> - Student at WPI for Computer Game Development (video game companies take notice), co-worker at Wake}fly, smart and eager to learn. Not afraid to be outside his comfort zone. Kevin also has <a href=\"http://www.rustedmushroom.com/\">a blog that is very much worth checking out</a>.\n\nAs far as I\'m concerned, having a list of recommended follows on twitter is just as important as having a recommended reading list or recommended blog/feed reading list.\n\nSo, thats my list, who would you recommend to a another developer?', '2011-05-01 03:34:45', 0, 'Twitter is great for keeping up with what your neighbors cat is up to, but it\'s also a great resource for keeping up with other developers. Following some advice from a co-worker I\'ve put together a small list of devs that I follow that I think you should follow too.')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('AutoHotKey-An-Introduction', '2010-10-25 05:00:00', 'AutoHotKey: An Introduction', 'Autohotkey is a great, free tool that helps you get more work done in fewer keystrokes - which is always good if you\'re a programmer. I use AutoHotKey at both home and work to perform some simple (and some complex) text replacement macros. In this post I\'ll take you through a few simple examples of what AutoHotKey can do to show why I think this is an essential item for your developer batman utility belt.\n\nYou can download AutoHotKey from its website, <a href=\"http://www.autohotkey.com/download/\">here</a>.\n\n<strong>The really, really basic example - replacing text: </strong><br />\nHere is a sample script that I use to write out my work email address\n\n<pre class=\"prettyprint\"><code>\n:*:@work::jbarboza@wakefly.com\n</code></pre>\n\nIt looks a little confusing but trust me, it\'s really simple. The * tells AHK that this script is an \"instant replacement\" and AHK should not wait for the spacebar to be pressed. \"@work\" as you\'ve probably guessed is the trigger and \"jbarboza@wakefly.com\" is the replacement text. Note: AHK doesn\'t care about the @ symbol in <code>@work</code>, it\'s only there for consistency with my other email triggers.\n\n<strong>Another simple example - fixing common misspellings</strong><br />\nI suck at spelling. I make spelling mistakes <strong>all the time</strong>. These script lines show how I auto-correct a few of my more common spelling mistakes.\n\n<pre class=\"prettyprint\"><code>\n:*?:.cm::.com \n:*?:.ocm::.com\n</code></pre>\n\n<strong>AutoHotKey can also run applications:</strong><br />\nAHK isn\'t just for replacing text. The built-in scripting language can do a multitude of things, from manipulating selected text, gathering user input via prompts and using it in script output, even automate applications.\n\n<pre class=\"prettyprint\"><code>\n#f::Run Firefox\n</code></pre>\n\nThis script will run Firefox when you press [Windows Button] + f. The # symbol in AHK is a shortcut for the windows key. You can use other shortcuts like ^, and ! for CTRL and ALT respectively.\n\nThis is just a small sampling of what AHK can do, if you\'re interested in learning more about the AHK scripting language check out the <a href=\"http://www.autohotkey.com/docs/Hotkeys.htm\">HotKey Introduction in the AHK Documentation</a>, the <a href=\"http://lifehacker.com/tag/autohotkey/\">AHK articles on Lifehacker</a>, or <a href=\"http://en.wikipedia.org/wiki/AutoHotKey\">the AutoHotKey wikipedia page</a>.', '2011-05-01 03:34:45', 0, 'AutoHotKey is a free, open-source macro-creation app for Windows. It lets you create really powerful macros that respond to keyboard input from within any application. ')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('AutoHotKey-scripts-for-developers', '2010-11-01 05:00:00', 'AutoHotKey scripts for developers', 'If you\'re not familiar with AutoHotKey yet, I\'ve <a href=\"http://codeimpossible.com/2010/10/27/autohotkey-an-introduction\">blogged about it before</a> and I would recommend giving that post a read. For the rest of you I thought I would post some useful AHK scripts that I have come across.\n\n<strong>The most important AHK script ever. </strong><br />\nDisabling Caps-lock. I constantly fat-finger the caps-lock button. With this script, I never have to worry about it again.\n<pre>\nSetCapsLockState, AlwaysOff\n</pre>\n<p></p>\n<strong>Generate a \"safe\" jQuery code block</strong><br />\nThis script will generate a self-calling anonymous function that scopes jQuery and protects your code from other possible interference from other javascript frameworks. You can <a href=\"http://codeimpossible.com/2010/01/13/solving-document-ready-is-not-a-function-and-other-problems\">read more about it here</a>.\n<pre><code>\n;insert a self-calling anonymous method to scope jQuery calls\n:*R0:{jqsafe}::\n(\n(function($) {{} \n $(function() {{}\n // ...code to run on dom ready\n\n{Left}{Left}{Left}{Left}{}});`n{}})(jQuery);\n)\nreturn\n</code></pre>\n<p></p>\n<strong>Include jQuery from the Google CDN</strong><br />\nThis script will turn {jqgoog#.#.#} into a &lt;script&gt; tag pointing to that version of jquery, specified by the #.#.#, hosted on googles cdn.\n\n{jqgoog1.4.2} will become: <em>Line breaks added for readability</em>\n\n<pre class=\"prettyprint\"><code>\n&lt;script \ntype=”text/javascript” \nsrc=http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js&gt;&lt;/script&gt;\n</code></pre>\n\n{jqgoog1} will become: <em>Line breaks added for readability</em>\n\n<pre class=\"prettyprint\"><code>\n&lt;script \ntype=”text/javascript” \nsrc=http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js&gt;&lt;/script&gt;\n</code></pre>\n\n<pre><code>\n; Include jQuery from google cdn\n~{::\nInput, UserInput, I V L13 C, {}}, jqgoog*,\nif ErrorLevel = NewInput\n return\nTest := InStr( UserInput, \"jqgoog\" )\nLen := StrLen( UserInput ) + 2\n\nif Test > 0:\n{\n	jqVer := RegExReplace( UserInput, \"jqgoog\", \"\" )\n	SetKeyDelay, -1 ; Most editors can handle the fastest speed.\n	\n	Loop %Len%\n	{\n		Send, {backspace}\n	}\n	\n	Send, &lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/%jqVer%/jquery.min.js\"&gt;&lt;/script&gt;\n return\n}\nreturn \n</code></pre>\n\n<strong>Automate writing simple database connection code in C#</strong><br />\nThis script will turn <code>{atwood}</code> into a block of C# that can connect to a database and issue a query. \n<pre><code>\n:*R0:{atwood}::\n(\nvar connString = ConfigurationManager.ConnectionStrings[\"connection\"].ConnectionString;\nvar query = @\"\";\nusing(var conn = new SqlConnection(connString))\n{{}\n conn.Open();\nusing( var cmd = new SqlCommand( query, conn ) ) \n{{}\n \n{}}\n{Left}{}}\n)\nreturn\n</code></pre>\n\nHere\'s the output:\n\n<pre><code class=\"prettyprint\">\nvar connString = ConfigurationManager.ConnectionStrings[\"connection\"].ConnectionString;\nvar query = @\"\";\nusing(var conn = new SqlConnection(connString))\n{\n conn.Open();\n using( var cmd = new SqlCommand( query, conn ) )\n {\n	\n }\n}\n</code></pre>\n<p></p>\n', '2011-05-01 03:34:45', 0, 'This week I\'ll post some useful AutoHotKey scripts that I use to make every-day coding easier.')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.3ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('For-in-Follow-Up', '2010-11-08 06:00:00', 'For/in Follow Up', 'A few weeks back <a href=\"http://codeimpossible.com/2010/09/20/spot-the-bug-forin-and-javascript/\">I wrote a post about a bug that can occur when you improperly use a for/in</a> style loop in javascript. \n\nThis is particular quirk is one that I find myself explaining to a lot of devs when they start using JavaScript, especially if they are coming from C# (with it\'s foreach loop having a similar syntax).\n\n<strong>\"I do not think that means what you think it means.\"</strong><br />\nThe for/in loop in JavaScript is powerful but it definitely doesn\'t do what you probably think it does. To understand the for/in loop we\'ll have to dive deeper into objects and arrays and how JavaScript <del datetime=\"2010-10-19T05:29:37+00:00\">mis</del>treats them.\n\n<strong>Objects in JavaScript</strong><br />\nIn most other programming languages these days, everything is an object. You can see this in current languages like C# where everything inherits from System.Object or in Ruby where you can assign properties and methods to anything at will.\n\nJavaScript is an object oriented language but it\'s implementation of objects is a little different from other languages. In JavaScript every object (every thing) is an array - a special array called an \"associative array\". If you\'re a C# developer think <code>Dictionary&lt;string, object&gt;</code>. If you\'re a python developer then you\'re already familiar with this concept. <br />\n<br />\nSo in JavaScript:\n<pre class=\"prettyprint\"><code>\nvar x = {\n something: \"hi\"\n};\n</code></pre>\nand\n<pre class=\"prettyprint\"><code>\nvar y = [];\ny[\"something\"] = \"hi\";\n</code></pre>\ndefine the same thing. Both objects will have a \"something\" property with the value \"hi\".\n\n<strong>Need more proof?</strong><br />\nTry the following:\n<pre class=\"prettyprint\"><code>\nalert( typeof( new Array() ) );\n</code></pre>\n\nThis will alert \"object\". Huh?\n\nYup, more proof that an array is just an object with properties named \"0\", \"1\", \"2\" etc. This means that\n<pre class=\"prettyprint\"><code>\nvar a = {\n 0: \"hi\",\n 1: \"there\"\n};\n</code></pre>\nand\n<pre class=\"prettyprint\"><code>\nvar b = [ \"hi\", \"there\" ];\n</code></pre>\nare the same exact thing. <a href=\"http://beta.jsvudo.com/3f40176\">Try it out!</a>\n\n\n<strong>Alright, that is insane but why the problem with for/in?</strong><br />\nWhen you use a for/in on an object in javascript you are looping over the keys in the key/value collection that makes up that object. So doing\n<pre class=\"prettyprint\"><code>\nvar x = {\n prop1: \"test\",\n prop2: \"test\"\n};\n\nfor(var p in x ) {\n alert(p);\n}\n</code></pre>\nwill alert \"prop1\" followed by \"prop2\". Using a for/in doesn\'t try to treat the object as an array, it enumerates each property (or key) in the object.\n\nNow you should start to see why for/in is generally a bad idea in JavaScript - that is, unless you <strong>want</strong> to loop over the properties of an object. \n\n<strong>Another fun fact</strong><br />\nThe for/in loop isn\'t guaranteed to alert \"prop1\" before \"prop2\". The properties will be enumerated in whatever order the interpreter returns them in.\n\nSo to summarize, unless you want to enumerate an objects properties, and you don\'t care about their order, avoid using the for/in loop in your JavaScript code.', '2011-05-01 03:34:46', 0, 'JavaScript has a lot of good parts and bad parts but the for/in loop seems to walk the grey area in between. It\'s a fantastic feature of JavaScript when wielded appropriately, but a potentially horrible bug when used incorrectly.')[0m
  [4;35;1mSQL (0.7ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Powershell-Snippet-List-C-Source-Files-Modified-After-Date', '2010-11-15 06:00:00', 'Powershell Snippet: List C# Source Files Modified After Date', '<pre class=\"prettyprint\"><code>\n$DateToCompare = Get-Date \"8/17/2010 8:07 PM\"\n\nGet-Childitem –recurse | \n where-object {$_.lastwritetime –gt $DateToCompare} | \n where-object {$_.extension -eq \".cs\"}\n</code></pre>', '2011-05-01 03:34:46', 0, 'An easy way to find what source files have been modified after a certain date in a project directory with powershell.')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('MvcTurbine-stopping-StackOverflowException-on-w3wp-recycle', '2010-11-22 06:00:00', 'MvcTurbine, stopping StackOverflowException on w3wp recycle', 'I love MvcTurbine. If you\'re working on a asp.net mvc project then you should take a look at it. Having said that I\'ve run into one pretty strange problem with it.\n\nAnother developer noticed that there were a lot of eventlog entries on our build server for our projects w3wp process. After looking into it I found that whenever our CI server ran a build the w3wp.exe process would exit with a StackOverflowException. \n\nStrange.\n\nThis wasn\'t a big deal since it wasn\'t affecting the overall availability of the application, but it was annoying to the dev team. \n\nIn visual studio, every time a file is added or a build is done locally the worker-process is recycled which meant that everytime a build was done locally, or a file was added to the project, each dev got the wonderful \"Visual Studio Just In-Time Debugger\" dialog. Like I said, not a big issue, just very annoying.\n\nAfter a bit of googling I found that this is indeed an issue with MvcTurbine but it has a very easy fix: just add the following lines to the class that inherits from <code>TurbineApplication</code>:\n\n<pre class=\"prettyprint\"><code>\n protected override void ShutdownContext ()\n {\n CurrentContext = null;\n ServiceLocator = null;\n }\n</code></pre>\n\n<a href=\"http://lozanotek.com/blog/\">Javier Lozano</a> - the author of MvcTurbine, explains what\'s causing the problem:\n\n<blockquote>Since we register the SeviceLocator with itself and we call dispose, essentially it calls dispose on all the types that it has registered, including [itself]. So this causes a recursive loop of calls to ServiceLocator.Dispose... Essentially you\'re preventing the disposition of the ServiceLocator from [happening] since this piece gets called at App_Shutdown. The fix for v2.2 will not be this, instead it will be addressed at the ServiceLocator registration.</blockquote>\n\nHere are some links where you can <a href=\"http://mvcturbine.codeplex.com/Thread/View.aspx?ThreadId=219449\">see the original post with Javier\'s answer</a>, take a <a href=\"https://github.com/jglozano/mvcturbine/blob/master/src/Samples/SMExtensions/Mvc/StructureMapTurbineApplication.cs\">look at the code that Javier posted showing the fix in place</a>, and <a href=\"http://stackoverflow.com/questions/3344652/adding-removing-a-file-in-vs2010-causes-webdev-webserver20-exe-has-stopped-worki\">the StackOverflow question that should provide some more context</a>.', '2011-05-01 03:34:46', 0, 'I had an issue the other day with MvcTurbine where our application would throw a StackOverflowException whenever the worker process recycled.')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.2ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Make-Implement-Interface-use-auto-properties', '2010-11-29 06:00:00', 'Make &quot;Implement Interface&quot; use auto properties', 'I\'m refactoring some legacy code this week; a task that would normally be a total PITA but thanks to Visual Studio\'s built-in refactoring tools it\'s going much easier than expected. The one tool that I\'m a huge fan of is the \"Implement Interface\" context menu item.\n\nTo see what I mean create a new class, something simple...\n\n<pre class=\"prettyprint\"><code>\npublic class MySimpleClass : IDisposable\n{\n\n}\n</code></pre>\n\nyeah, like that. \n\nNow move your cursor over \"IDisposable\" and press ctrl+period. Selecting \"Implement Interface\" from the menu that appears will automagically insert all the properties and methods needed to make your class conform to the <code>IDisposable</code> interface. \n\nIt\'s very handy, but it generates the properties in a way that I\'m not particularly a fan of:\n\n<pre class=\"prettyprint\"><code>\npublic object SomeProperty\n{\n get\n {\n throw new NotImplementedException();\n }\n set\n {\n throw new NotImplementedException();\n }\n}\n</code></pre>\n\nInstead I\'d like to have this code generated using auto properties so that it looks like this:\n\n<pre class=\"prettyprint\"><code>\npublic object SomeProperty { get; set; }\n</code></pre>\n\nI initially thought I would have to modify some built-in T4 template but thankfully it\'s much, much easier than that. Apparently the visual studio team took full advantage of the snippet feature when they added it because nearly every refactoring tool is editable via a <code>.snippet</code> file. You can find the snippets that visual studio uses for C# in the following directory: \n\n<code>%programfiles%\\Microsoft Visual Studio 10.0\\VC#\\Snippets\\1033</code>\n\nThe file you\'re looking for is in the <code>Refactoring</code> directory and is named <code>PropertyStub.snippet</code>. Open this guy up in your favorite text editor - don\'t worry it\'s just xml - and find the part that looks like this:\n\n<pre class=\"prettyprint\"><code>\n&lt;Code Language=\"csharp\"&gt;\n &lt;![CDATA[$signature$\n{\n	$GetterAccessibility$ get \n	{ \n		$end$throw new $Exception$(); \n	}\n	$SetterAccessibility$ set \n	{ \n		throw new $Exception$(); \n	}\n}]]&gt;\n&lt;/Code&gt;\n</code></pre>\n\nReplace this xml with the xml below and you\'ll be good to go after a quick restart of Visual Studio!\n\n<pre class=\"prettyprint\"><code>\n&lt;Code Language=\"csharp\"&gt;\n &lt;![CDATA[$signature$ { $GetterAccessibility$ get; $SetterAccessibility$ set; }]]&gt;\n&lt;/Code&gt;\n</code></pre>', '2011-05-01 03:34:46', 0, 'This week I\'m finding that there is a lot less pain involved in getting Visual Studio 2010 to do things my way than I thought - like no pain at all.')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Create (0.2ms)[0m   [0;1mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Installing-mercurial-on-Ubuntu-6-06', '2010-12-06 06:00:00', 'Installing mercurial on Ubuntu 6.06', 'Installing git and svn on Ubuntu 6.06 is incredibly easy but getting mercurial installed required a few more steps. Here\'s what I did to get it running.\n\n<em>Update: I\'m keeping the list of steps here to help anyone thats stuck but if you have 6.06 and an internet connection then you should skip to the end of this post for the pain free installation steps.</em>\n\n<ol>\n	<li>Mercurial needs python >= 2.4 to run, make sure it\'s installed. <br /><code>$ sudo apt-get install python</code></li>\n	<li>You\'ll also need the Python C headers and a C compiler. <br /><code>$ sudo apt-get install build-essential gcc python-dev</code></li>\n	<li>If you want to generate the documentation you\'ll need AsciiDoc and XmlTo as well. <br /><code>$ sudo apt-get install asciidoc xmlto</code></li>\n	<li>download Mercurial from the <a href=\"http://packages.ubuntu.com/dapper/i386/mercurial/download\">dapper package repo</a>. <br /><code>$ wget REPO_URL</code></li>\n	<li>Install Mercurial! <br /><code>$ sudo dpkg -i mercurial_0.7-8_i386.deb</code></li>\n</ol>\n\nAltogether this would look like:\n\n<code class=\"block\">$ sudo apt-get install python\n$ sudo apt-get install build-essential gcc python-dev\n$ sudo apt-get install asciidoc xmlto\n$ wget http://mirrors.rit.edu/ubuntu//pool/universe/m/mercurial/mercurial_0.7-8_i386.deb\n$ sudo dpkg -i mercurial_0.7-8_i386.deb\n</code>\n\n<strong>Installing Mercurial with no headaches</strong><br />\nAfter doing all this I found out than I could have just <a href=\"https://help.ubuntu.com/community/HardyUpgrades\">upgrade my installation of Ubuntu to 8.04</a> and then run <code>$ sudo apt-get install mercurial</code> to install the latest version pain free. Doh!', '2011-05-01 03:34:46', 0, 'Over thanksgiving break I dug an old linux pc out of our basement and installed began setting it up as a continuous integration machine for some personal projects.')[0m
  [4;35;1mSQL (0.1ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Create (0.1ms)[0m   [0mINSERT INTO `posts` (`permalink`, `created_at`, `title`, `body`, `updated_at`, `published`, `summary`) VALUES('Quick-Protip-explore-current-directory-from-command-line', '2011-04-18 05:00:00', 'Quick Protip: explore current directory from command line', '\nTry this: <code>C:\\> start explorer .</code> [enter]\n\n<span class=\"bangers kaboom\">KA-BOOM!</span>\n\nYou can also open another cmd window by doing: <code>C:\\> start cmd .</code> [enter]\n\nEnjoy!', '2011-05-01 03:34:46', 0, 'Ever been in a command window and wanted to open windows explorer to browse the directory you’re in? Now you can.')[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
Redirected to http://blog.codeimpossible.com/admin/import
Completed in 9725ms (DB: 45) | 302 Found [http://blog.codeimpossible.com/admin/import/import]


Processing Admin::ImportController#index (for 68.187.213.182 at 2011-04-30 22:34:46) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/import"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering admin/import/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 0) | 200 OK [http://blog.codeimpossible.com/admin/import]


Processing Admin::DashboardController#index (for 68.187.213.182 at 2011-04-30 22:34:49) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/dashboard"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mSQL (0.5ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` WHERE (published = 0) [0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering admin/dashboard/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 4ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/admin]


Processing Admin::ManagepostsController#index (for 68.187.213.182 at 2011-04-30 22:34:52) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/manageposts"}
  [4;35;1mPost Load (1.6ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC[0m
Rendering template within layouts/main
Rendering admin/manageposts/index
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
Rendered admin/shared/_userbar (0.1ms)
Completed in 56ms (View: 51, DB: 2) | 200 OK [http://blog.codeimpossible.com/admin/manageposts]


Processing Admin::ManagepostsController#manage (for 68.187.213.182 at 2011-04-30 22:35:01) [POST]
  Parameters: {"action"=>"manage", "authenticity_token"=>"0IC2pnikvqQoc3mBaqmG9r4eU6xSrfHzJpFVub4o5Iw=", "act"=>"publish", "controller"=>"admin/manageposts", "posts"=>["216", "215", "214", "213", "212", "211", "210", "209", "208", "207", "206", "205", "204", "203", "202", "201", "200", "199", "198", "197", "196", "195", "194", "193", "192", "191", "190", "189", "188", "187", "186", "185", "184", "183", "182", "181", "180", "179", "178", "177", "176", "175", "174", "173", "172", "171", "170", "169", "168", "167", "165", "166", "164", "163", "162", "161", "160", "159", "158", "157", "156", "155", "154", "152", "153", "151", "150", "149", "148", "147", "146", "145", "144", "143", "142", "141", "138", "139", "140", "137", "136", "135", "134", "133", "132", "131", "130", "129", "128", "127", "126", "124", "125", "123", "122", "121", "120", "119", "117", "118", "116", "115", "114", "113", "112", "111", "110"]}
  [4;35;1mPost Load (0.4ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 216) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.2ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 216[0m
  [4;36;1mSQL (1.6ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 215) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 215[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 214) [0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 214[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 213) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 213[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 212) [0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 212[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 211) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 211[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 210) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 210[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 209) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 209[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 208) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 208[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 207) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 207[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 206) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 206[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 205) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 205[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 204) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 204[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 203) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 203[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 202) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 202[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 201) [0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 201[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 200) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 200[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 199) [0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 199[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 198) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 198[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 197) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 197[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 196) [0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 196[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 195) [0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 195[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 194) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 194[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 193) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 193[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 192) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 192[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 191) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 191[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 190) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 190[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.2ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 189) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 189[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 188) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 188[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 187) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 187[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 186) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.4ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 186[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.2ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 185) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 185[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 184) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 184[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 183) [0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 183[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 182) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 182[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 181) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 181[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 180) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 180[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 179) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 179[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 178) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 178[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 177) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 177[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 176) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 176[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.2ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 175) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 175[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 174) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 174[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 173) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 173[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 172) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 172[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 171) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 171[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 170) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 170[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 169) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 169[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 168) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 168[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.2ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 167) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 167[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 165) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 165[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 166) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 166[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 164) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 164[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.3ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 163) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 163[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 162) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 162[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 161) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 161[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 160) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 160[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 159) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 159[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 158) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 158[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 157) [0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.2ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 157[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.2ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 156) [0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 156[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 155) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 155[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 154) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 154[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 152) [0m
  [4;36;1mSQL (0.6ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 152[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 153) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 153[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 151) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 151[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 150) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 150[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 149) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 149[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 148) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 148[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.2ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 147) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 147[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.2ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 146) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 146[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.3ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 145) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 145[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 144) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 144[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.3ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 143) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 143[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.3ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 142) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 142[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.3ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 141) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 141[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.2ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 138) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 138[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.6ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 139) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 139[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.2ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 140) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 140[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.2ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 137) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 137[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 136) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 136[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 135) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 135[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 134) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 134[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.3ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 133) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 133[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 132) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.2ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 132[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.7ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 131) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 131[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.3ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 130) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 130[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.2ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 129) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 129[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.3ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 128) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 128[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 127) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 127[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.4ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 126) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 126[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.4ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 124) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 124[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.2ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 125) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 125[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.2ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 123) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 123[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 122) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 122[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 121) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 121[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.3ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 120) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 120[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.5ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 119) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 119[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.2ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 117) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 117[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.3ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 118) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 118[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.3ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 116) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 116[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.2ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 115) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 115[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.3ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 114) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 114[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.2ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 113) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 113[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 112) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 112[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.2ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 111) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 111[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 110) [0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.1ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:35:01', `published` = 1 WHERE `id` = 110[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mCOMMIT[0m
Redirected to http://blog.codeimpossible.com/admin/manageposts
Completed in 207ms (DB: 44) | 302 Found [http://blog.codeimpossible.com/admin/manageposts/manage]


Processing Admin::ManagepostsController#index (for 68.187.213.182 at 2011-04-30 22:35:01) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/manageposts"}
  [4;35;1mPost Load (1.8ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC[0m
Rendering template within layouts/main
Rendering admin/manageposts/index
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
Rendered admin/shared/_userbar (0.1ms)
Completed in 52ms (View: 48, DB: 2) | 200 OK [http://blog.codeimpossible.com/admin/manageposts]


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 22:35:10) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (1.4ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mSQL (0.3ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 16ms (View: 13, DB: 2) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 22:35:14) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (0.9ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mSQL (0.3ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 7ms (View: 5, DB: 1) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#show (for 68.187.213.182 at 2011-04-30 22:35:34) [GET]
  Parameters: {"slug"=>"Quick-Protip-explore-current-directory-from-command-line", "month"=>"4", "action"=>"show", "day"=>"18", "year"=>"2011", "controller"=>"posts"}
  [4;36;1mPost Load (0.6ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Quick-Protip-explore-current-directory-from-command-line') AND (published = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 6ms (View: 4, DB: 1) | 200 OK [http://blog.codeimpossible.com/2011/4/18/Quick-Protip-explore-current-directory-from-command-line]


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 22:35:57) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 6ms (View: 5, DB: 0) | 200 OK [http://blog.codeimpossible.com/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#show (for 68.187.213.182 at 2011-04-30 22:36:46) [GET]
  Parameters: {"slug"=>"Make-Implement-Interface-use-auto-properties", "month"=>"11", "action"=>"show", "day"=>"29", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mUser Columns (1.7ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Columns (1.1ms)[0m   [0;1mSHOW FIELDS FROM `posts`[0m
  [4;35;1mPost Load (0.5ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Make-Implement-Interface-use-auto-properties') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (1.3ms)
Completed in 45ms (View: 33, DB: 3) | 200 OK [http://blog.codeimpossible.com/2010/11/29/Make-Implement-Interface-use-auto-properties]


Processing PostsController#show (for 174.36.36.49 at 2011-04-30 22:36:47) [GET]
  Parameters: {"slug"=>"Make-Implement-Interface-use-auto-properties", "month"=>"11", "action"=>"show", "day"=>"29", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mPost Load (0.6ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Make-Implement-Interface-use-auto-properties') AND (published = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 5ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/11/29/Make-Implement-Interface-use-auto-properties]
  [4;35;1mSQL (0.1ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#update to json (for 68.187.213.182 at 2011-04-30 22:37:38) [PUT]
  Parameters: {"format"=>"json", "action"=>"update", "id"=>"214", "content"=>"\n  <p>I'm refactoring some legacy code this week; a task that would normally be a total PITA but thanks to Visual Studio's built-in refactoring tools it's going much easier than expected. The one tool that I'm a huge fan of is the \"Implement Interface\" context menu item.</p>\n\n<p>To see what I mean create a new class, something simple...</p>\n\n<p></p><pre class=\"prettyprint\"><code>\npublic class MySimpleClass : IDisposable\n{<p></p></code><code>}\n<br></code></pre><p></p>\n\n<p>yeah, like that. </p>\n\n<p>Now move your cursor over \"IDisposable\" and press ctrl+period. Selecting \"Implement Interface\" from the menu that appears will automagically insert all the properties and methods needed to make your class conform to the <code>IDisposable</code> interface. </p>\n\n<p>It's very handy, but it generates the properties in a way that I'm not particularly a fan of:</p>\n\n<p></p><pre class=\"prettyprint\"><code>\npublic object SomeProperty\n{\n    get\n    {\n        throw new NotImplementedException();\n    }\n    set\n    {\n        throw new NotImplementedException();\n    }\n}\n<br></code></pre><p></p>\n\n<p>Instead I'd like to have this code generated using auto properties so that it looks like this:</p>\n\n<p></p><pre class=\"prettyprint\"><code>\npublic object SomeProperty { get; set; }<br></code><br></pre><p>I initially thought I would have to modify some built-in T4 template but thankfully it's much, much easier than that. Apparently the visual studio team took full advantage of the snippet feature when they added it because nearly every refactoring tool is editable via a <code>.snippet</code> file. You can find the snippets that visual studio uses for C# in the following directory: </p>\n\n<p><code>%programfiles%\\Microsoft Visual Studio 10.0\\VC#\\Snippets\\1033</code></p>\n\n<p>The file you're looking for is in the <code>Refactoring</code> directory and is named <code>PropertyStub.snippet</code>. Open this guy up in your favorite text editor - don't worry it's just xml - and find the part that looks like this:</p>\n\n<p></p><pre class=\"prettyprint\"><code>\n&lt;Code Language=\"csharp\"&gt;\n    &lt;![CDATA[$signature$\n{\n\t$GetterAccessibility$ get \n\t{ \n\t\t$end$throw new $Exception$(); \n\t}\n\t$SetterAccessibility$ set \n\t{ \n\t\tthrow new $Exception$(); \n\t}\n}]]&gt;\n&lt;/Code&gt;\n<br></code></pre><p></p>\n\n<p>Replace this xml with the xml below and you'll be good to go after a quick restart of Visual Studio!</p>\n\n<p></p><pre class=\"prettyprint\"><code>\n&lt;Code Language=\"csharp\"&gt;\n    &lt;![CDATA[$signature$ { $GetterAccessibility$ get; $SetterAccessibility$ set; }]]&gt;\n&lt;/Code&gt;\n<br></code></pre><p></p>\n", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.3ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 214) [0m


  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Update (0.8ms)[0m   [0;1mUPDATE `posts` SET `updated_at` = '2011-05-01 03:37:38', `body` = '\n <p>I\'m refactoring some legacy code this week; a task that would normally be a total PITA but thanks to Visual Studio\'s built-in refactoring tools it\'s going much easier than expected. The one tool that I\'m a huge fan of is the \"Implement Interface\" context menu item.</p>\n\n<p>To see what I mean create a new class, something simple...</p>\n\n<p></p><pre class=\"prettyprint\"><code>\npublic class MySimpleClass : IDisposable\n{<p></p></code><code>}\n<br></code></pre><p></p>\n\n<p>yeah, like that. </p>\n\n<p>Now move your cursor over \"IDisposable\" and press ctrl+period. Selecting \"Implement Interface\" from the menu that appears will automagically insert all the properties and methods needed to make your class conform to the <code>IDisposable</code> interface. </p>\n\n<p>It\'s very handy, but it generates the properties in a way that I\'m not particularly a fan of:</p>\n\n<p></p><pre class=\"prettyprint\"><code>\npublic object SomeProperty\n{\n get\n {\n throw new NotImplementedException();\n }\n set\n {\n throw new NotImplementedException();\n }\n}\n<br></code></pre><p></p>\n\n<p>Instead I\'d like to have this code generated using auto properties so that it looks like this:</p>\n\n<p></p><pre class=\"prettyprint\"><code>\npublic object SomeProperty { get; set; }<br></code><br></pre><p>I initially thought I would have to modify some built-in T4 template but thankfully it\'s much, much easier than that. Apparently the visual studio team took full advantage of the snippet feature when they added it because nearly every refactoring tool is editable via a <code>.snippet</code> file. You can find the snippets that visual studio uses for C# in the following directory: </p>\n\n<p><code>%programfiles%\\Microsoft Visual Studio 10.0\\VC#\\Snippets\\1033</code></p>\n\n<p>The file you\'re looking for is in the <code>Refactoring</code> directory and is named <code>PropertyStub.snippet</code>. Open this guy up in your favorite text editor - don\'t worry it\'s just xml - and find the part that looks like this:</p>\n\n<p></p><pre class=\"prettyprint\"><code>\n&lt;Code Language=\"csharp\"&gt;\n &lt;![CDATA[$signature$\n{\n	$GetterAccessibility$ get \n	{ \n		$end$throw new $Exception$(); \n	}\n	$SetterAccessibility$ set \n	{ \n		throw new $Exception$(); \n	}\n}]]&gt;\n&lt;/Code&gt;\n<br></code></pre><p></p>\n\n<p>Replace this xml with the xml below and you\'ll be good to go after a quick restart of Visual Studio!</p>\n\n<p></p><pre class=\"prettyprint\"><code>\n&lt;Code Language=\"csharp\"&gt;\n &lt;![CDATA[$signature$ { $GetterAccessibility$ get; $SetterAccessibility$ set; }]]&gt;\n&lt;/Code&gt;\n<br></code></pre><p></p>\n' WHERE `id` = 214[0m
  [4;35;1mSQL (0.7ms)[0m   [0mCOMMIT[0m
Completed in 5ms (View: 1, DB: 2) | 200 OK [http://blog.codeimpossible.com/posts/214.json]


Processing PostsController#show (for 68.187.213.182 at 2011-04-30 22:37:47) [GET]
  Parameters: {"slug"=>"Make-Implement-Interface-use-auto-properties", "month"=>"11", "action"=>"show", "day"=>"29", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mPost Load (0.9ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Make-Implement-Interface-use-auto-properties') AND (published = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 4ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/11/29/Make-Implement-Interface-use-auto-properties]


Processing PostsController#show (for 68.187.213.182 at 2011-04-30 22:37:49) [GET]
  Parameters: {"slug"=>"Make-Implement-Interface-use-auto-properties", "month"=>"11", "action"=>"show", "day"=>"29", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Make-Implement-Interface-use-auto-properties') AND (published = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 3ms (View: 1, DB: 0) | 200 OK [http://blog.codeimpossible.com/2010/11/29/Make-Implement-Interface-use-auto-properties]


Processing PostsController#show (for 68.187.213.182 at 2011-04-30 22:37:52) [GET]
  Parameters: {"slug"=>"Make-Implement-Interface-use-auto-properties", "month"=>"11", "action"=>"show", "day"=>"29", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Make-Implement-Interface-use-auto-properties') AND (published = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 3ms (View: 1, DB: 0) | 200 OK [http://blog.codeimpossible.com/2010/11/29/Make-Implement-Interface-use-auto-properties]


Processing PostsController#show (for 68.187.213.182 at 2011-04-30 22:38:00) [GET]
  Parameters: {"slug"=>"Make-Implement-Interface-use-auto-properties", "month"=>"11", "action"=>"show", "day"=>"29", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Make-Implement-Interface-use-auto-properties') AND (published = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 3ms (View: 1, DB: 0) | 200 OK [http://blog.codeimpossible.com/2010/11/29/Make-Implement-Interface-use-auto-properties]


Processing PostsController#update to json (for 68.187.213.182 at 2011-04-30 22:38:07) [PUT]
  Parameters: {"format"=>"json", "action"=>"update", "id"=>"214", "controller"=>"posts", "summary"=>"\n  This week I'm finding that there is a lot less pain involved in getting Visual Studio 2010 to do things my way than I thought - like no pain at all.\n"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.3ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 214) [0m


  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.5ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-01 03:38:07', `summary` = '\n This week I\'m finding that there is a lot less pain involved in getting Visual Studio 2010 to do things my way than I thought - like no pain at all.\n' WHERE `id` = 214[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
Completed in 4ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/posts/214.json]


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 22:38:11) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.6ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mSQL (0.1ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 17ms (View: 14, DB: 1) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#show (for 68.187.213.182 at 2011-04-30 22:38:13) [GET]
  Parameters: {"slug"=>"Make-Implement-Interface-use-auto-properties", "month"=>"11", "action"=>"show", "day"=>"29", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.5ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Make-Implement-Interface-use-auto-properties') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 4ms (View: 2, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/11/29/Make-Implement-Interface-use-auto-properties]


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 22:38:23) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 15ms (View: 13, DB: 0) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#show (for 68.187.213.182 at 2011-04-30 22:38:29) [GET]
  Parameters: {"slug"=>"Powershell-Snippet-List-C-Source-Files-Modified-After-Date", "month"=>"11", "action"=>"show", "day"=>"15", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.5ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Powershell-Snippet-List-C-Source-Files-Modified-After-Date') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/11/15/Powershell-Snippet-List-C-Source-Files-Modified-After-Date]


Processing PostsController#show (for 67.228.244.114 at 2011-04-30 22:38:29) [GET]
  Parameters: {"slug"=>"Powershell-Snippet-List-C-Source-Files-Modified-After-Date", "month"=>"11", "action"=>"show", "day"=>"15", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mPost Load (0.8ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Powershell-Snippet-List-C-Source-Files-Modified-After-Date') AND (published = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/11/15/Powershell-Snippet-List-C-Source-Files-Modified-After-Date]


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 22:38:35) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 14ms (View: 12, DB: 0) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#show (for 68.187.213.182 at 2011-04-30 22:38:38) [GET]
  Parameters: {"slug"=>"Installing-mercurial-on-Ubuntu-6-06", "month"=>"12", "action"=>"show", "day"=>"6", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.5ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Installing-mercurial-on-Ubuntu-6-06') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/12/6/Installing-mercurial-on-Ubuntu-6-06]


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 22:38:47) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 14ms (View: 12, DB: 0) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#show (for 68.187.213.182 at 2011-04-30 22:38:55) [GET]
  Parameters: {"slug"=>"Quick-Protip-explore-current-directory-from-command-line", "month"=>"4", "action"=>"show", "day"=>"18", "year"=>"2011", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.7ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Quick-Protip-explore-current-directory-from-command-line') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2011/4/18/Quick-Protip-explore-current-directory-from-command-line]


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 22:38:57) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 14ms (View: 13, DB: 0) | 200 OK [http://blog.codeimpossible.com/]
  [4;35;1mSQL (0.1ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#show (for 68.187.213.182 at 2011-04-30 22:39:41) [GET]
  Parameters: {"slug"=>"MvcTurbine-stopping-StackOverflowException-on-w3wp-recycle", "month"=>"11", "action"=>"show", "day"=>"22", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.5ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'MvcTurbine-stopping-StackOverflowException-on-w3wp-recycle') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 2, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/11/22/MvcTurbine-stopping-StackOverflowException-on-w3wp-recycle]


Processing PostsController#update to json (for 68.187.213.182 at 2011-04-30 22:39:51) [PUT]
  Parameters: {"format"=>"json", "action"=>"update", "id"=>"213", "content"=>"\n  <p>I love MvcTurbine. If you're working on a asp.net mvc project then you should take a look at it. Having said that I've run into one pretty strange problem with it.</p>\n\n<p>Another developer noticed that there were a lot of eventlog entries on our build server for our projects w3wp process. After looking into it I found that whenever our CI server ran a build the w3wp.exe process would exit with a StackOverflowException. </p>\n\n<p>Strange.</p>\n\n<p>This wasn't a big deal since it wasn't affecting the overall availability of the application, but it was annoying to the dev team. </p>\n\n<p>In visual studio, every time a file is added or a build is done locally the worker-process is recycled which meant that everytime a build was done locally, or a file was added to the project, each dev got the wonderful \"Visual Studio Just In-Time Debugger\" dialog. Like I said, not a big issue, just very annoying.</p>\n\n<p>After a bit of googling I found that this is indeed an issue with MvcTurbine but it has a very easy fix: just add the following lines to the class that inherits from <code>TurbineApplication</code>:</p>\n\n<p></p><pre class=\"prettyprint\"><code>\n    protected override void ShutdownContext ()\n    {\n        CurrentContext = null;\n        ServiceLocator = null;\n    }\n<br></code></pre><p></p>\n\n<p><a href=\"http://lozanotek.com/blog/\">Javier Lozano</a> - the author of MvcTurbine, explains what's causing the problem:</p>\n\n<p></p><blockquote>Since we register the SeviceLocator with itself and we call dispose, essentially it calls dispose on all the types that it has registered, including [itself]. So this causes a recursive loop of calls to ServiceLocator.Dispose... Essentially you're preventing the disposition of the ServiceLocator from [happening] since this piece gets called at App_Shutdown. The fix for v2.2 will not be this, instead it will be addressed at the ServiceLocator registration.</blockquote><p></p>\n\n<p>Here are some links where you can <a href=\"http://mvcturbine.codeplex.com/Thread/View.aspx?ThreadId=219449\">see the original post with Javier's answer</a>, take a <a href=\"https://github.com/jglozano/mvcturbine/blob/master/src/Samples/SMExtensions/Mvc/StructureMapTurbineApplication.cs\">look at the code that Javier posted showing the fix in place</a>, and <a href=\"http://stackoverflow.com/questions/3344652/adding-removing-a-file-in-vs2010-causes-webdev-webserver20-exe-has-stopped-worki\">the StackOverflow question that should provide some more context</a>.</p>\n", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.2ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 213) [0m


  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Update (0.5ms)[0m   [0;1mUPDATE `posts` SET `updated_at` = '2011-05-01 03:39:51', `body` = '\n <p>I love MvcTurbine. If you\'re working on a asp.net mvc project then you should take a look at it. Having said that I\'ve run into one pretty strange problem with it.</p>\n\n<p>Another developer noticed that there were a lot of eventlog entries on our build server for our projects w3wp process. After looking into it I found that whenever our CI server ran a build the w3wp.exe process would exit with a StackOverflowException. </p>\n\n<p>Strange.</p>\n\n<p>This wasn\'t a big deal since it wasn\'t affecting the overall availability of the application, but it was annoying to the dev team. </p>\n\n<p>In visual studio, every time a file is added or a build is done locally the worker-process is recycled which meant that everytime a build was done locally, or a file was added to the project, each dev got the wonderful \"Visual Studio Just In-Time Debugger\" dialog. Like I said, not a big issue, just very annoying.</p>\n\n<p>After a bit of googling I found that this is indeed an issue with MvcTurbine but it has a very easy fix: just add the following lines to the class that inherits from <code>TurbineApplication</code>:</p>\n\n<p></p><pre class=\"prettyprint\"><code>\n protected override void ShutdownContext ()\n {\n CurrentContext = null;\n ServiceLocator = null;\n }\n<br></code></pre><p></p>\n\n<p><a href=\"http://lozanotek.com/blog/\">Javier Lozano</a> - the author of MvcTurbine, explains what\'s causing the problem:</p>\n\n<p></p><blockquote>Since we register the SeviceLocator with itself and we call dispose, essentially it calls dispose on all the types that it has registered, including [itself]. So this causes a recursive loop of calls to ServiceLocator.Dispose... Essentially you\'re preventing the disposition of the ServiceLocator from [happening] since this piece gets called at App_Shutdown. The fix for v2.2 will not be this, instead it will be addressed at the ServiceLocator registration.</blockquote><p></p>\n\n<p>Here are some links where you can <a href=\"http://mvcturbine.codeplex.com/Thread/View.aspx?ThreadId=219449\">see the original post with Javier\'s answer</a>, take a <a href=\"https://github.com/jglozano/mvcturbine/blob/master/src/Samples/SMExtensions/Mvc/StructureMapTurbineApplication.cs\">look at the code that Javier posted showing the fix in place</a>, and <a href=\"http://stackoverflow.com/questions/3344652/adding-removing-a-file-in-vs2010-causes-webdev-webserver20-exe-has-stopped-worki\">the StackOverflow question that should provide some more context</a>.</p>\n' WHERE `id` = 213[0m
  [4;35;1mSQL (0.7ms)[0m   [0mCOMMIT[0m
Completed in 5ms (View: 1, DB: 2) | 200 OK [http://blog.codeimpossible.com/posts/213.json]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 22:40:46) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.6ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 57ms (View: 54, DB: 1) | 200 OK [http://blog.codeimpossible.com/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.1ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#show (for 68.187.213.182 at 2011-04-30 22:51:40) [GET]
  Parameters: {"slug"=>"Installing-mercurial-on-Ubuntu-6-06", "month"=>"12", "action"=>"show", "day"=>"6", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mUser Columns (1.6ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Columns (0.6ms)[0m   [0;1mSHOW FIELDS FROM `posts`[0m
  [4;35;1mPost Load (0.6ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Installing-mercurial-on-Ubuntu-6-06') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (1.3ms)
Completed in 43ms (View: 32, DB: 3) | 200 OK [http://blog.codeimpossible.com/2010/12/6/Installing-mercurial-on-Ubuntu-6-06]


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 22:51:48) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.8ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 17ms (View: 15, DB: 1) | 200 OK [http://blog.codeimpossible.com/]


Processing ApplicationController#index (for 68.187.213.182 at 2011-04-30 22:51:57) [GET]
Rendering template within layouts/main
Rendering errors/error_404 (404)
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
Rendered admin/shared/_userbar (0.1ms)


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 22:52:08) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 15ms (View: 13, DB: 0) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#page (for 68.187.213.182 at 2011-04-30 22:52:11) [GET]
  Parameters: {"action"=>"page", "page"=>"2", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.9ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 5, 5[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 16ms (View: 13, DB: 1) | 200 OK [http://blog.codeimpossible.com/page/2]


Processing PostsController#show (for 68.187.213.182 at 2011-04-30 22:52:13) [GET]
  Parameters: {"slug"=>"For-in-Follow-Up", "month"=>"11", "action"=>"show", "day"=>"8", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.7ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'For-in-Follow-Up') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 4ms (View: 2, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/11/8/For-in-Follow-Up]


Processing PostsController#show (for 174.36.113.196 at 2011-04-30 22:52:14) [GET]
  Parameters: {"slug"=>"For-in-Follow-Up", "month"=>"11", "action"=>"show", "day"=>"8", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mPost Load (0.7ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'For-in-Follow-Up') AND (published = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 5ms (View: 2, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/11/8/For-in-Follow-Up]
  [4;35;1mSQL (0.1ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#update to json (for 68.187.213.182 at 2011-04-30 22:52:53) [PUT]
  Parameters: {"format"=>"json", "action"=>"update", "id"=>"211", "content"=>"\n  <p>A few weeks back <a href=\"http://codeimpossible.com/2010/09/20/spot-the-bug-forin-and-javascript/\">I wrote a post about a bug that can occur when you improperly use a for/in</a> style loop in javascript. </p>\n\n<p>This is particular quirk is one that I find myself explaining to a lot of devs when they start using JavaScript, especially if they are coming from C# (with it's foreach loop having a similar syntax).</p>\n\n<p><strong>\"I do not think that means what you think it means.\"</strong><br>\n<br>The for/in loop in JavaScript is powerful but it definitely doesn't do what you probably think it does. To understand the for/in loop we'll have to dive deeper into objects and arrays and how JavaScript <del datetime=\"2010-10-19T05:29:37+00:00\">mis</del>treats them.</p>\n\n<p><strong>Objects in JavaScript</strong><br>\n<br>In most other programming languages these days, everything is an object. You can see this in current languages like C# where everything inherits from System.Object or in Ruby where you can assign properties and methods to anything at will.</p>\n\n<p>JavaScript is an object oriented language but it's implementation of objects is a little different from other languages. In JavaScript every object (every thing) is an array - a special array called an \"associative array\". If you're a C# developer think  <code>Dictionary&lt;string, object&gt;</code>. If you're a python developer then you're already familiar with this concept. <br>\n<br><br>\n<br>So in JavaScript:\n<br></p><pre class=\"prettyprint\"><code>\n<br>var x = {\n<br>    something: \"hi\"\n<br>};\n<br></code></pre>\n<br>and\n<br><pre class=\"prettyprint\"><code>\n<br>var y = [];\n<br>y[\"something\"] = \"hi\";\n<br></code></pre>\n<br>define the same thing. Both objects will have a \"something\" property with the value \"hi\".<p></p>\n\n<p><strong>Need more proof?</strong><br>\n<br>Try the following:\n<br></p><pre class=\"prettyprint\"><code>\n<br>alert( typeof( new Array() ) );\n<br></code></pre><p></p>\n\n<p>This will alert \"object\". Huh?</p>\n\n<p>Yup, more proof that an array is just an object with properties named \"0\", \"1\", \"2\" etc. This means that\n<br></p><pre class=\"prettyprint\"><code>\n<br>var a = {\n<br>    0: \"hi\",\n<br>    1: \"there\"\n<br>};\n<br></code></pre>\n<br>and\n<br><pre class=\"prettyprint\"><code>\n<br>var b = [ \"hi\", \"there\" ];\n<br></code></pre>\n<br>are the same exact thing. <a href=\"http://beta.jsvudo.com/3f40176\">Try it out!</a><p></p>\n\n<p><strong>Alright, that is insane but why the problem with for/in?</strong><br>\n<br>When you use a for/in on an object in javascript you are looping over the keys in the key/value collection that makes up that object. So doing\n<br></p><pre class=\"prettyprint\"><code>\n<br>var x = {\n<br>    prop1: \"test\",\n<br>    prop2: \"test\"\n<br>};<p></p>\n\n</code><p><code>for(var p in x ) {\n<br>    alert(p);\n<br>}\n<br></code></p></pre>\n<br>will alert \"prop1\" followed by \"prop2\". Using a for/in doesn't try to treat the object as an array, it enumerates each property (or key) in the object.<p></p>\n\n<p>Now you should start to see why for/in is generally a bad idea in JavaScript - that is, unless you <strong>want</strong> to loop over the properties of an object. </p>\n\n<p><strong>Another fun fact</strong><br>\n<br>The for/in loop isn't guaranteed to alert \"prop1\" before \"prop2\". The properties will be enumerated in whatever order the interpreter returns them in.</p>\n\n<p>So to summarize, unless you want to enumerate an objects properties, and you don't care about their order, avoid using the for/in loop in your JavaScript code.</p>\n", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.2ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 211) [0m


  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Update (0.4ms)[0m   [0;1mUPDATE `posts` SET `updated_at` = '2011-05-01 03:52:53', `body` = '\n <p>A few weeks back <a href=\"http://codeimpossible.com/2010/09/20/spot-the-bug-forin-and-javascript/\">I wrote a post about a bug that can occur when you improperly use a for/in</a> style loop in javascript. </p>\n\n<p>This is particular quirk is one that I find myself explaining to a lot of devs when they start using JavaScript, especially if they are coming from C# (with it\'s foreach loop having a similar syntax).</p>\n\n<p><strong>\"I do not think that means what you think it means.\"</strong><br>\n<br>The for/in loop in JavaScript is powerful but it definitely doesn\'t do what you probably think it does. To understand the for/in loop we\'ll have to dive deeper into objects and arrays and how JavaScript <del datetime=\"2010-10-19T05:29:37+00:00\">mis</del>treats them.</p>\n\n<p><strong>Objects in JavaScript</strong><br>\n<br>In most other programming languages these days, everything is an object. You can see this in current languages like C# where everything inherits from System.Object or in Ruby where you can assign properties and methods to anything at will.</p>\n\n<p>JavaScript is an object oriented language but it\'s implementation of objects is a little different from other languages. In JavaScript every object (every thing) is an array - a special array called an \"associative array\". If you\'re a C# developer think <code>Dictionary&lt;string, object&gt;</code>. If you\'re a python developer then you\'re already familiar with this concept. <br>\n<br><br>\n<br>So in JavaScript:\n<br></p><pre class=\"prettyprint\"><code>\n<br>var x = {\n<br> something: \"hi\"\n<br>};\n<br></code></pre>\n<br>and\n<br><pre class=\"prettyprint\"><code>\n<br>var y = [];\n<br>y[\"something\"] = \"hi\";\n<br></code></pre>\n<br>define the same thing. Both objects will have a \"something\" property with the value \"hi\".<p></p>\n\n<p><strong>Need more proof?</strong><br>\n<br>Try the following:\n<br></p><pre class=\"prettyprint\"><code>\n<br>alert( typeof( new Array() ) );\n<br></code></pre><p></p>\n\n<p>This will alert \"object\". Huh?</p>\n\n<p>Yup, more proof that an array is just an object with properties named \"0\", \"1\", \"2\" etc. This means that\n<br></p><pre class=\"prettyprint\"><code>\n<br>var a = {\n<br> 0: \"hi\",\n<br> 1: \"there\"\n<br>};\n<br></code></pre>\n<br>and\n<br><pre class=\"prettyprint\"><code>\n<br>var b = [ \"hi\", \"there\" ];\n<br></code></pre>\n<br>are the same exact thing. <a href=\"http://beta.jsvudo.com/3f40176\">Try it out!</a><p></p>\n\n<p><strong>Alright, that is insane but why the problem with for/in?</strong><br>\n<br>When you use a for/in on an object in javascript you are looping over the keys in the key/value collection that makes up that object. So doing\n<br></p><pre class=\"prettyprint\"><code>\n<br>var x = {\n<br> prop1: \"test\",\n<br> prop2: \"test\"\n<br>};<p></p>\n\n</code><p><code>for(var p in x ) {\n<br> alert(p);\n<br>}\n<br></code></p></pre>\n<br>will alert \"prop1\" followed by \"prop2\". Using a for/in doesn\'t try to treat the object as an array, it enumerates each property (or key) in the object.<p></p>\n\n<p>Now you should start to see why for/in is generally a bad idea in JavaScript - that is, unless you <strong>want</strong> to loop over the properties of an object. </p>\n\n<p><strong>Another fun fact</strong><br>\n<br>The for/in loop isn\'t guaranteed to alert \"prop1\" before \"prop2\". The properties will be enumerated in whatever order the interpreter returns them in.</p>\n\n<p>So to summarize, unless you want to enumerate an objects properties, and you don\'t care about their order, avoid using the for/in loop in your JavaScript code.</p>\n' WHERE `id` = 211[0m
  [4;35;1mSQL (1.4ms)[0m   [0mCOMMIT[0m
Completed in 39ms (View: 1, DB: 2) | 200 OK [http://blog.codeimpossible.com/posts/211.json]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#update to json (for 68.187.213.182 at 2011-04-30 22:53:46) [PUT]
  Parameters: {"format"=>"json", "action"=>"update", "id"=>"211", "content"=>"\n  <p>A few weeks back <a href=\"http://codeimpossible.com/2010/09/20/spot-the-bug-forin-and-javascript/\">I wrote a post about a bug that can occur when you improperly use a for/in</a> style loop in javascript. </p>\n\n<p>This is particular quirk is one that I find myself explaining to a lot of devs when they start using JavaScript, especially if they are coming from C# (with it's foreach loop having a similar syntax).</p>\n\n<p><strong>\"I do not think that means what you think it means.\"</strong><br>\n<br>The for/in loop in JavaScript is powerful but it definitely doesn't do what you probably think it does. To understand the for/in loop we'll have to dive deeper into objects and arrays and how JavaScript <del datetime=\"2010-10-19T05:29:37+00:00\">mis</del>treats them.</p>\n\n<p><strong>Objects in JavaScript</strong><br>\n<br>In most other programming languages these days, everything is an object. You can see this in current languages like C# where everything inherits from System.Object or in Ruby where you can assign properties and methods to anything at will.</p>\n\n<p>JavaScript is an object oriented language but it's implementation of objects is a little different from other languages. In JavaScript every object (every thing) is an array - a special array called an \"associative array\". If you're a C# developer think  <code>Dictionary&lt;string, object&gt;</code>. If you're a python developer then you're already familiar with this concept. <br>\n<br><br>\n<br>So in JavaScript:\n<br></p><pre class=\"prettyprint\"><code>\n<br>var x = {\n<br>    something: \"hi\"\n<br>};\n<br></code></pre>\n<br>and\n<br><pre class=\"prettyprint\"><code>\n<br>var y = [];\n<br>y[\"something\"] = \"hi\";\n<br></code></pre>\n<br>define the same thing. Both objects will have a \"something\" property with the value \"hi\".<p></p>\n\n<p><strong>Need more proof?</strong><br>\n<br>Try the following:\n<br></p><pre class=\"prettyprint\"><code>\n<br>alert( typeof( new Array() ) );\n<br></code></pre><p></p>\n\n<p>This will alert \"object\". Huh?</p>\n\n<p>Yup, more proof that an array is just an object with properties named \"0\", \"1\", \"2\" etc. This means that\n<br></p><pre class=\"prettyprint\"><code>\n<br>var a = {\n<br>    0: \"hi\",\n<br>    1: \"there\"\n<br>};\n<br></code></pre>\n<br>and\n<br><pre class=\"prettyprint\"><code>\n<br>var b = [ \"hi\", \"there\" ];\n<br></code></pre>\n<br>are the same exact thing. <a href=\"http://beta.jsvudo.com/3f40176\">Try it out!</a><p></p>\n\n<p><strong>Alright, that is insane but why the problem with for/in?</strong><br>\n<br>When you use a for/in on an object in javascript you are looping over the keys in the key/value collection that makes up that object. So doing\n<br></p><pre class=\"prettyprint\"><code>\n<br>var x = {\n<br>    prop1: \"test\",\n<br>    prop2: \"test\"\n<br>};<p></p>\n\n</code><p><code>for(var p in x ) {\n<br>    alert(p);\n<br>}\n<br></code></p></pre>\n<br>will alert \"prop1\" followed by \"prop2\". Using a for/in doesn't try to treat the object as an array, it enumerates each property (or key) in the object.<p></p>\n\n<p>Now you should start to see why for/in is generally a bad idea in JavaScript - that is, unless you <strong>want</strong> to loop over the properties of an object. </p>\n\n<p><strong>Another fun fact</strong><br>\n<br>The for/in loop isn't guaranteed to alert \"prop1\" before \"prop2\". The properties will be enumerated in whatever order the interpreter returns them in.</p>\n\n<p>So to summarize, unless you want to enumerate an objects properties, and you don't care about their order, avoid using the for/in loop in your JavaScript code.</p>\n", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.5ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 211) [0m


  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mSQL (0.0ms)[0m   [0mCOMMIT[0m
Completed in 4ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/posts/211.json]


Processing SessionsController#destroy (for 68.187.213.182 at 2011-04-30 22:53:49) [GET]
  Parameters: {"action"=>"destroy", "controller"=>"sessions"}
Redirected to http://blog.codeimpossible.com/
Completed in 2ms (DB: 0) | 302 Found [http://blog.codeimpossible.com/logout]


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 22:53:49) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (0.7ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mSQL (0.2ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 9ms (View: 7, DB: 1) | 200 OK [http://blog.codeimpossible.com/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 68.187.213.182 at 2011-04-30 23:54:44) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mPost Columns (1.6ms)[0m   [0mSHOW FIELDS FROM `posts`[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 45ms (View: 33, DB: 2) | 200 OK [http://blog.codeimpossible.com/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 68.187.213.182 at 2011-05-01 16:38:57) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (37.8ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mPost Columns (1.5ms)[0m   [0mSHOW FIELDS FROM `posts`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 95ms (View: 42, DB: 40) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#show (for 68.187.213.182 at 2011-05-01 16:39:10) [GET]
  Parameters: {"slug"=>"Make-Implement-Interface-use-auto-properties", "month"=>"11", "action"=>"show", "day"=>"29", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mPost Load (0.6ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Make-Implement-Interface-use-auto-properties') AND (published = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 6ms (View: 4, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/11/29/Make-Implement-Interface-use-auto-properties]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 131.239.15.70 at 2011-05-03 12:59:56) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (40.6ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mPost Columns (1.5ms)[0m   [0mSHOW FIELDS FROM `posts`[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 91ms (View: 33, DB: 43) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#show (for 131.239.15.70 at 2011-05-03 13:00:02) [GET]
  Parameters: {"slug"=>"Quick-Protip-explore-current-directory-from-command-line", "month"=>"4", "action"=>"show", "day"=>"18", "year"=>"2011", "controller"=>"posts"}
  [4;35;1mPost Load (0.7ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Quick-Protip-explore-current-directory-from-command-line') AND (published = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 4ms (View: 2, DB: 1) | 200 OK [http://blog.codeimpossible.com/2011/4/18/Quick-Protip-explore-current-directory-from-command-line]


Processing PostsController#edit (for 131.239.15.70 at 2011-05-03 13:00:08) [GET]
  Parameters: {"action"=>"edit", "id"=>"216", "controller"=>"posts"}
Redirected to http://blog.codeimpossible.com/session/new
Filter chain halted as [:login_required] rendered_or_redirected.
Completed in 1ms (DB: 0) | 302 Found [http://blog.codeimpossible.com/posts/216/edit]


Processing SessionsController#new (for 131.239.15.70 at 2011-05-03 13:00:08) [GET]
  Parameters: {"action"=>"new", "controller"=>"sessions"}
  [4;36;1mUser Load (22.8ms)[0m   [0;1mSELECT * FROM `users` [0m
Rendering template within layouts/main
Rendering sessions/new
Completed in 28ms (View: 3, DB: 23) | 200 OK [http://blog.codeimpossible.com/session/new]


Processing SessionsController#create (for 131.239.15.70 at 2011-05-03 13:00:15) [POST]
  Parameters: {"commit"=>"Log in", "action"=>"create", "authenticity_token"=>"bfto45KOsUILx4HAdpVj7AInWZWX2oc114p63M61YWM=", "controller"=>"sessions", "login"=>"codeimpossible", "password"=>"[FILTERED]"}
  [4;35;1mUser Columns (1.6ms)[0m   [0mSHOW FIELDS FROM `users`[0m
  [4;36;1mUser Load (1.8ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`login` = 'codeimpossible') LIMIT 1[0m
  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mCOMMIT[0m
Redirected to http://blog.codeimpossible.com/posts/216/edit
Completed in 7ms (DB: 3) | 302 Found [http://blog.codeimpossible.com/session]


Processing PostsController#edit (for 131.239.15.70 at 2011-05-03 13:00:15) [GET]
  Parameters: {"action"=>"edit", "id"=>"216", "controller"=>"posts"}
  [4;35;1mUser Load (0.3ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = '216') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/edit
Rendered admin/shared/_userbar (0.3ms)
Completed in 6ms (View: 4, DB: 0) | 200 OK [http://blog.codeimpossible.com/posts/216/edit]


Processing PostsController#update (for 131.239.15.70 at 2011-05-03 13:00:41) [PUT]
  Parameters: {"title"=>"Quick Protip: explore current directory from command line", "action"=>"update", "_method"=>"put", "authenticity_token"=>"bfto45KOsUILx4HAdpVj7AInWZWX2oc114p63M61YWM=", "id"=>"216", "content"=>"<p>\r\n\tTry this: <code>C:\\&gt; start explorer .</code> [enter]</p>\r\n<p>\r\n\t<span class=\"bangers kaboom\">KA-BOOM!</span></p>\r\n<p>\r\n\tYou can also open another cmd window by doing: <code>C:\\&gt; start cmd .</code> [enter]</p>\r\n<p>\r\n\tEnjoy!</p>\r\n<p>\r\n\t&nbsp;</p>\r\n", "controller"=>"posts", "summary"=>"Ever been in a command window and wanted to open windows explorer to browse the directory you’re in? Now you can."}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.3ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 216) [0m


  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Update (0.2ms)[0m   [0;1mUPDATE `posts` SET `updated_at` = '2011-05-03 18:00:41', `body` = '<p>\r\n	Try this: <code>C:\\&gt; start explorer .</code> [enter]</p>\r\n<p>\r\n	<span class=\"bangers kaboom\">KA-BOOM!</span></p>\r\n<p>\r\n	You can also open another cmd window by doing: <code>C:\\&gt; start cmd .</code> [enter]</p>\r\n<p>\r\n	Enjoy!</p>\r\n<p>\r\n	&nbsp;</p>\r\n' WHERE `id` = 216[0m
  [4;35;1mSQL (1.1ms)[0m   [0mCOMMIT[0m
Redirected to http://blog.codeimpossible.com/2011/4/18/Quick-Protip-explore-current-directory-from-command-line
Completed in 5ms (DB: 2) | 302 Found [http://blog.codeimpossible.com/posts/216]


Processing PostsController#show (for 131.239.15.70 at 2011-05-03 13:00:41) [GET]
  Parameters: {"slug"=>"Quick-Protip-explore-current-directory-from-command-line", "month"=>"4", "action"=>"show", "day"=>"18", "year"=>"2011", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.5ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Quick-Protip-explore-current-directory-from-command-line') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2011/4/18/Quick-Protip-explore-current-directory-from-command-line]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 131.239.15.70 at 2011-05-03 13:01:14) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.6ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 15ms (View: 13, DB: 1) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#show (for 131.239.15.70 at 2011-05-03 13:01:17) [GET]
  Parameters: {"slug"=>"Installing-mercurial-on-Ubuntu-6-06", "month"=>"12", "action"=>"show", "day"=>"6", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.6ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Installing-mercurial-on-Ubuntu-6-06') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/12/6/Installing-mercurial-on-Ubuntu-6-06]


Processing PostsController#edit (for 131.239.15.70 at 2011-05-03 13:01:24) [GET]
  Parameters: {"action"=>"edit", "id"=>"215", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.4ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = '215') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/edit
Rendered admin/shared/_userbar (0.1ms)
Completed in 5ms (View: 4, DB: 0) | 200 OK [http://blog.codeimpossible.com/posts/215/edit]
  [4;35;1mSQL (0.1ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#update (for 131.239.15.70 at 2011-05-03 13:04:55) [PUT]
  Parameters: {"title"=>"Installing mercurial on Ubuntu 6.06", "action"=>"update", "_method"=>"put", "authenticity_token"=>"bfto45KOsUILx4HAdpVj7AInWZWX2oc114p63M61YWM=", "id"=>"215", "content"=>"<p>\r\n\tInstalling git and svn on Ubuntu 6.06 is incredibly easy but getting mercurial installed required a few more steps. Here&#39;s what I did to get it running. <em>Update: I&#39;m keeping the list of steps here to help anyone thats stuck but if you have 6.06 and an internet connection then you should skip to the end of this post for the pain free installation steps.</em></p>\r\n<ol>\r\n\t<li>\r\n\t\tMercurial needs python &gt;= 2.4 to run, make sure it&#39;s installed.<br />\r\n\t\t<code>$ sudo apt-get install python</code></li>\r\n\t<li>\r\n\t\tYou&#39;ll also need the Python C headers and a C compiler.<br />\r\n\t\t<code>$ sudo apt-get install build-essential gcc python-dev</code></li>\r\n\t<li>\r\n\t\tIf you want to generate the documentation you&#39;ll need AsciiDoc and XmlTo as well.<br />\r\n\t\t<code>$ sudo apt-get install asciidoc xmlto</code></li>\r\n\t<li>\r\n\t\tdownload Mercurial from the <a href=\"http://packages.ubuntu.com/dapper/i386/mercurial/download\">dapper package repo</a>.<br />\r\n\t\t<code>$ wget REPO_URL</code></li>\r\n\t<li>\r\n\t\tInstall Mercurial!<br />\r\n\t\t<code>$ sudo dpkg -i mercurial_0.7-8_i386.deb</code></li>\r\n</ol>\r\n<p>\r\n\tAltogether this would look like:</p>\r\n<pre class=\"prettyprint\">$ sudo apt-get install python\r\n$ sudo apt-get install build-essential gcc python-dev $ sudo apt-get install asciidoc xmlto\r\n$ wget http://mirrors.rit.edu/ubuntu//pool/universe/m/mercurial/mercurial_0.7-8_i386.deb\r\n$ sudo dpkg -i mercurial_0.7-8_i386.deb</pre>\r\n<p>\r\n\t<strong>Installing Mercurial with no headaches</strong><br />\r\n\tAfter doing all this I found out than I could have just <a href=\"https://help.ubuntu.com/community/HardyUpgrades\">upgrade my installation of Ubuntu to 8.04</a> and then run <code>$ sudo apt-get install mercurial</code> to install the latest version pain free. Doh!</p>\r\n", "controller"=>"posts", "summary"=>"Over thanksgiving break I dug an old linux pc out of our basement and installed began setting it up as a continuous integration machine for some personal projects."}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.2ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 215) [0m


  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Update (0.3ms)[0m   [0;1mUPDATE `posts` SET `updated_at` = '2011-05-03 18:04:55', `body` = '<p>\r\n	Installing git and svn on Ubuntu 6.06 is incredibly easy but getting mercurial installed required a few more steps. Here&#39;s what I did to get it running. <em>Update: I&#39;m keeping the list of steps here to help anyone thats stuck but if you have 6.06 and an internet connection then you should skip to the end of this post for the pain free installation steps.</em></p>\r\n<ol>\r\n	<li>\r\n		Mercurial needs python &gt;= 2.4 to run, make sure it&#39;s installed.<br />\r\n		<code>$ sudo apt-get install python</code></li>\r\n	<li>\r\n		You&#39;ll also need the Python C headers and a C compiler.<br />\r\n		<code>$ sudo apt-get install build-essential gcc python-dev</code></li>\r\n	<li>\r\n		If you want to generate the documentation you&#39;ll need AsciiDoc and XmlTo as well.<br />\r\n		<code>$ sudo apt-get install asciidoc xmlto</code></li>\r\n	<li>\r\n		download Mercurial from the <a href=\"http://packages.ubuntu.com/dapper/i386/mercurial/download\">dapper package repo</a>.<br />\r\n		<code>$ wget REPO_URL</code></li>\r\n	<li>\r\n		Install Mercurial!<br />\r\n		<code>$ sudo dpkg -i mercurial_0.7-8_i386.deb</code></li>\r\n</ol>\r\n<p>\r\n	Altogether this would look like:</p>\r\n<pre class=\"prettyprint\">$ sudo apt-get install python\r\n$ sudo apt-get install build-essential gcc python-dev $ sudo apt-get install asciidoc xmlto\r\n$ wget http://mirrors.rit.edu/ubuntu//pool/universe/m/mercurial/mercurial_0.7-8_i386.deb\r\n$ sudo dpkg -i mercurial_0.7-8_i386.deb</pre>\r\n<p>\r\n	<strong>Installing Mercurial with no headaches</strong><br />\r\n	After doing all this I found out than I could have just <a href=\"https://help.ubuntu.com/community/HardyUpgrades\">upgrade my installation of Ubuntu to 8.04</a> and then run <code>$ sudo apt-get install mercurial</code> to install the latest version pain free. Doh!</p>\r\n' WHERE `id` = 215[0m
  [4;35;1mSQL (0.7ms)[0m   [0mCOMMIT[0m
Redirected to http://blog.codeimpossible.com/2010/12/6/Installing-mercurial-on-Ubuntu-6-06
Completed in 4ms (DB: 1) | 302 Found [http://blog.codeimpossible.com/posts/215]


Processing PostsController#show (for 131.239.15.70 at 2011-05-03 13:04:55) [GET]
  Parameters: {"slug"=>"Installing-mercurial-on-Ubuntu-6-06", "month"=>"12", "action"=>"show", "day"=>"6", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.6ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Installing-mercurial-on-Ubuntu-6-06') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/12/6/Installing-mercurial-on-Ubuntu-6-06]


Processing PostsController#index (for 131.239.15.70 at 2011-05-03 13:05:13) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.8ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 15ms (View: 12, DB: 1) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#show (for 131.239.15.70 at 2011-05-03 13:05:16) [GET]
  Parameters: {"slug"=>"Make-Implement-Interface-use-auto-properties", "month"=>"11", "action"=>"show", "day"=>"29", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.6ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Make-Implement-Interface-use-auto-properties') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/11/29/Make-Implement-Interface-use-auto-properties]


Processing PostsController#edit (for 131.239.15.70 at 2011-05-03 13:05:34) [GET]
  Parameters: {"action"=>"edit", "id"=>"214", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.3ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = '214') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/edit
Rendered admin/shared/_userbar (0.1ms)
Completed in 4ms (View: 2, DB: 0) | 200 OK [http://blog.codeimpossible.com/posts/214/edit]
  [4;35;1mSQL (0.1ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#update (for 131.239.15.70 at 2011-05-03 13:07:17) [PUT]
  Parameters: {"title"=>"Make &quot;Implement Interface&quot; use auto properties", "action"=>"update", "_method"=>"put", "authenticity_token"=>"bfto45KOsUILx4HAdpVj7AInWZWX2oc114p63M61YWM=", "id"=>"214", "content"=>"<p>\r\n\tI&#39;m refactoring some legacy code this week; a task that would normally be a total PITA but thanks to Visual Studio&#39;s built-in refactoring tools it&#39;s going much easier than expected. The one tool that I&#39;m a huge fan of is the &quot;Implement Interface&quot; context menu item.</p>\r\n<p>\r\n\tTo see what I mean create a new class, something simple...</p>\r\n<pre class=\"prettyprint\">\r\n<code>public class MySimpleClass : IDisposable\r\n{</code></pre>\r\n<p>\r\n\t&nbsp;</p>\r\n<p>\r\n\t<code>} </code></p>\r\n<p>\r\n\tyeah, like that.</p>\r\n<p>\r\n\tNow move your cursor over &quot;IDisposable&quot; and press ctrl+period. Selecting &quot;Implement Interface&quot; from the menu that appears will automagically insert all the properties and methods needed to make your class conform to the <code>IDisposable</code> interface.</p>\r\n<p>\r\n\tIt&#39;s very handy, but it generates the properties in a way that I&#39;m not particularly a fan of:</p>\r\n<pre class=\"prettyprint\">\r\n<code>public object SomeProperty\r\n{\r\n    get\r\n    {\r\n        throw new NotImplementedException();\r\n    }\r\n    set\r\n    {\r\n        throw new NotImplementedException();\r\n    }\r\n}\r\n</code></pre>\r\n<p>\r\n\tInstead I&#39;d like to have this code generated using auto properties so that it looks like this:</p>\r\n<pre class=\"prettyprint\">\r\n<code>public object SomeProperty { get; set; }</code>\r\n</pre>\r\n<p>\r\n\tI initially thought I would have to modify some built-in T4 template but thankfully it&#39;s much, much easier than that. Apparently the visual studio team took full advantage of the snippet feature when they added it because nearly every refactoring tool is editable via a <code>.snippet</code> file. You can find the snippets that visual studio uses for C# in the following directory:</p>\r\n<p>\r\n\t<code>%programfiles%\\Microsoft Visual Studio 10.0\\VC#\\Snippets\\1033</code></p>\r\n<p>\r\n\tThe file you&#39;re looking for is in the <code>Refactoring</code> directory and is named <code>PropertyStub.snippet</code>. Open this guy up in your favorite text editor - don&#39;t worry it&#39;s just xml - and find the part that looks like this:</p>\r\n<pre class=\"prettyprint\">\r\n<code>&lt;Code Language=&quot;csharp&quot;&gt;\r\n    &lt;![CDATA[$signature$\r\n{\r\n\t$GetterAccessibility$ get \r\n\t{ \r\n\t\t$end$throw new $Exception$(); \r\n\t}\r\n\t$SetterAccessibility$ set \r\n\t{ \r\n\t\tthrow new $Exception$(); \r\n\t}\r\n}]]&gt;\r\n&lt;/Code&gt;\r\n</code></pre>\r\n<p>\r\n\tReplace this xml with the xml below and you&#39;ll be good to go after a quick restart of Visual Studio!</p>\r\n<pre class=\"prettyprint\">\r\n<code>&lt;Code Language=&quot;csharp&quot;&gt;\r\n    &lt;![CDATA[$signature$ { $GetterAccessibility$ get; $SetterAccessibility$ set; }]]&gt;\r\n&lt;/Code&gt;\r\n</code></pre>\r\n<p>\r\n\t&nbsp;</p>\r\n", "controller"=>"posts", "summary"=>"  This week I'm finding that there is a lot less pain involved in getting Visual Studio 2010 to do things my way than I thought - like no pain at all.\r\n"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.2ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = 214) [0m


  [4;35;1mSQL (0.0ms)[0m   [0mBEGIN[0m
  [4;36;1mPost Update (1.2ms)[0m   [0;1mUPDATE `posts` SET `updated_at` = '2011-05-03 18:07:17', `summary` = ' This week I\'m finding that there is a lot less pain involved in getting Visual Studio 2010 to do things my way than I thought - like no pain at all.\r\n', `body` = '<p>\r\n	I&#39;m refactoring some legacy code this week; a task that would normally be a total PITA but thanks to Visual Studio&#39;s built-in refactoring tools it&#39;s going much easier than expected. The one tool that I&#39;m a huge fan of is the &quot;Implement Interface&quot; context menu item.</p>\r\n<p>\r\n	To see what I mean create a new class, something simple...</p>\r\n<pre class=\"prettyprint\">\r\n<code>public class MySimpleClass : IDisposable\r\n{</code></pre>\r\n<p>\r\n	&nbsp;</p>\r\n<p>\r\n	<code>} </code></p>\r\n<p>\r\n	yeah, like that.</p>\r\n<p>\r\n	Now move your cursor over &quot;IDisposable&quot; and press ctrl+period. Selecting &quot;Implement Interface&quot; from the menu that appears will automagically insert all the properties and methods needed to make your class conform to the <code>IDisposable</code> interface.</p>\r\n<p>\r\n	It&#39;s very handy, but it generates the properties in a way that I&#39;m not particularly a fan of:</p>\r\n<pre class=\"prettyprint\">\r\n<code>public object SomeProperty\r\n{\r\n get\r\n {\r\n throw new NotImplementedException();\r\n }\r\n set\r\n {\r\n throw new NotImplementedException();\r\n }\r\n}\r\n</code></pre>\r\n<p>\r\n	Instead I&#39;d like to have this code generated using auto properties so that it looks like this:</p>\r\n<pre class=\"prettyprint\">\r\n<code>public object SomeProperty { get; set; }</code>\r\n</pre>\r\n<p>\r\n	I initially thought I would have to modify some built-in T4 template but thankfully it&#39;s much, much easier than that. Apparently the visual studio team took full advantage of the snippet feature when they added it because nearly every refactoring tool is editable via a <code>.snippet</code> file. You can find the snippets that visual studio uses for C# in the following directory:</p>\r\n<p>\r\n	<code>%programfiles%\\Microsoft Visual Studio 10.0\\VC#\\Snippets\\1033</code></p>\r\n<p>\r\n	The file you&#39;re looking for is in the <code>Refactoring</code> directory and is named <code>PropertyStub.snippet</code>. Open this guy up in your favorite text editor - don&#39;t worry it&#39;s just xml - and find the part that looks like this:</p>\r\n<pre class=\"prettyprint\">\r\n<code>&lt;Code Language=&quot;csharp&quot;&gt;\r\n &lt;![CDATA[$signature$\r\n{\r\n	$GetterAccessibility$ get \r\n	{ \r\n		$end$throw new $Exception$(); \r\n	}\r\n	$SetterAccessibility$ set \r\n	{ \r\n		throw new $Exception$(); \r\n	}\r\n}]]&gt;\r\n&lt;/Code&gt;\r\n</code></pre>\r\n<p>\r\n	Replace this xml with the xml below and you&#39;ll be good to go after a quick restart of Visual Studio!</p>\r\n<pre class=\"prettyprint\">\r\n<code>&lt;Code Language=&quot;csharp&quot;&gt;\r\n &lt;![CDATA[$signature$ { $GetterAccessibility$ get; $SetterAccessibility$ set; }]]&gt;\r\n&lt;/Code&gt;\r\n</code></pre>\r\n<p>\r\n	&nbsp;</p>\r\n' WHERE `id` = 214[0m
  [4;35;1mSQL (0.6ms)[0m   [0mCOMMIT[0m
Redirected to http://blog.codeimpossible.com/2010/11/29/Make-Implement-Interface-use-auto-properties
Completed in 5ms (DB: 2) | 302 Found [http://blog.codeimpossible.com/posts/214]


Processing PostsController#show (for 131.239.15.70 at 2011-05-03 13:07:17) [GET]
  Parameters: {"slug"=>"Make-Implement-Interface-use-auto-properties", "month"=>"11", "action"=>"show", "day"=>"29", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.5ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Make-Implement-Interface-use-auto-properties') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/11/29/Make-Implement-Interface-use-auto-properties]


Processing PostsController#edit (for 131.239.15.70 at 2011-05-03 13:07:22) [GET]
  Parameters: {"action"=>"edit", "id"=>"214", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.3ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = '214') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/edit
Rendered admin/shared/_userbar (0.1ms)
Completed in 4ms (View: 2, DB: 0) | 200 OK [http://blog.codeimpossible.com/posts/214/edit]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#update (for 131.239.15.70 at 2011-05-03 13:08:11) [PUT]
  Parameters: {"title"=>"Make &quot;Implement Interface&quot; use auto properties", "action"=>"update", "_method"=>"put", "authenticity_token"=>"bfto45KOsUILx4HAdpVj7AInWZWX2oc114p63M61YWM=", "id"=>"214", "content"=>"<p>\r\n\tI&#39;m refactoring some legacy code this week; a task that would normally be a total PITA but thanks to Visual Studio&#39;s built-in refactoring tools it&#39;s going much easier than expected. The one tool that I&#39;m a huge fan of is the &quot;Implement Interface&quot; context menu item.</p>\r\n<p>\r\n\tTo see what I mean create a new class, something simple...</p>\r\n<pre class=\"prettyprint\">public class MySimpleClass : IDisposable\r\n{\r\n}</pre>\r\n<p>\r\n\tyeah, like that.</p>\r\n<p>\r\n\tNow move your cursor over &quot;IDisposable&quot; and press ctrl+period. Selecting &quot;Implement Interface&quot; from the menu that appears will automagically insert all the properties and methods needed to make your class conform to the <code>IDisposable</code> interface.</p>\r\n<p>\r\n\tIt&#39;s very handy, but it generates the properties in a way that I&#39;m not particularly a fan of:</p>\r\n<pre class=\"prettyprint\">\r\n<code>public object SomeProperty\r\n{\r\n    get\r\n    {\r\n        throw new NotImplementedException();\r\n    }\r\n    set\r\n    {\r\n        throw new NotImplementedException();\r\n    }\r\n}\r\n</code></pre>\r\n<p>\r\n\tInstead I&#39;d like to have this code generated using auto properties so that it looks like this:</p>\r\n<pre class=\"prettyprint\">\r\n<code>public object SomeProperty { get; set; }</code>\r\n</pre>\r\n<p>\r\n\tI initially thought I would have to modify some built-in T4 template but thankfully it&#39;s much, much easier than that. Apparently the visual studio team took full advantage of the snippet feature when they added it because nearly every refactoring tool is editable via a <code>.snippet</code> file. You can find the snippets that visual studio uses for C# in the following directory:</p>\r\n<p>\r\n\t<code>%programfiles%\\Microsoft Visual Studio 10.0\\VC#\\Snippets\\1033</code></p>\r\n<p>\r\n\tThe file you&#39;re looking for is in the <code>Refactoring</code> directory and is named <code>PropertyStub.snippet</code>. Open this guy up in your favorite text editor - don&#39;t worry it&#39;s just xml - and find the part that looks like this:</p>\r\n<pre class=\"prettyprint\">\r\n<code>&lt;Code Language=&quot;csharp&quot;&gt;\r\n    &lt;![CDATA[$signature$\r\n{\r\n\t$GetterAccessibility$ get \r\n\t{ \r\n\t\t$end$throw new $Exception$(); \r\n\t}\r\n\t$SetterAccessibility$ set \r\n\t{ \r\n\t\tthrow new $Exception$(); \r\n\t}\r\n}]]&gt;\r\n&lt;/Code&gt;\r\n</code></pre>\r\n<p>\r\n\tReplace this xml with the xml below and you&#39;ll be good to go after a quick restart of Visual Studio!</p>\r\n<pre class=\"prettyprint\">\r\n<code>&lt;Code Language=&quot;csharp&quot;&gt;\r\n    &lt;![CDATA[$signature$ { $GetterAccessibility$ get; $SetterAccessibility$ set; }]]&gt;\r\n&lt;/Code&gt;\r\n</code></pre>\r\n<p>\r\n\t&nbsp;</p>\r\n", "controller"=>"posts", "summary"=>"  This week I'm finding that there is a lot less pain involved in getting Visual Studio 2010 to do things my way than I thought - like no pain at all.\r\n"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (1.0ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 214) [0m


  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.3ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-03 18:08:11', `body` = '<p>\r\n	I&#39;m refactoring some legacy code this week; a task that would normally be a total PITA but thanks to Visual Studio&#39;s built-in refactoring tools it&#39;s going much easier than expected. The one tool that I&#39;m a huge fan of is the &quot;Implement Interface&quot; context menu item.</p>\r\n<p>\r\n	To see what I mean create a new class, something simple...</p>\r\n<pre class=\"prettyprint\">public class MySimpleClass : IDisposable\r\n{\r\n}</pre>\r\n<p>\r\n	yeah, like that.</p>\r\n<p>\r\n	Now move your cursor over &quot;IDisposable&quot; and press ctrl+period. Selecting &quot;Implement Interface&quot; from the menu that appears will automagically insert all the properties and methods needed to make your class conform to the <code>IDisposable</code> interface.</p>\r\n<p>\r\n	It&#39;s very handy, but it generates the properties in a way that I&#39;m not particularly a fan of:</p>\r\n<pre class=\"prettyprint\">\r\n<code>public object SomeProperty\r\n{\r\n get\r\n {\r\n throw new NotImplementedException();\r\n }\r\n set\r\n {\r\n throw new NotImplementedException();\r\n }\r\n}\r\n</code></pre>\r\n<p>\r\n	Instead I&#39;d like to have this code generated using auto properties so that it looks like this:</p>\r\n<pre class=\"prettyprint\">\r\n<code>public object SomeProperty { get; set; }</code>\r\n</pre>\r\n<p>\r\n	I initially thought I would have to modify some built-in T4 template but thankfully it&#39;s much, much easier than that. Apparently the visual studio team took full advantage of the snippet feature when they added it because nearly every refactoring tool is editable via a <code>.snippet</code> file. You can find the snippets that visual studio uses for C# in the following directory:</p>\r\n<p>\r\n	<code>%programfiles%\\Microsoft Visual Studio 10.0\\VC#\\Snippets\\1033</code></p>\r\n<p>\r\n	The file you&#39;re looking for is in the <code>Refactoring</code> directory and is named <code>PropertyStub.snippet</code>. Open this guy up in your favorite text editor - don&#39;t worry it&#39;s just xml - and find the part that looks like this:</p>\r\n<pre class=\"prettyprint\">\r\n<code>&lt;Code Language=&quot;csharp&quot;&gt;\r\n &lt;![CDATA[$signature$\r\n{\r\n	$GetterAccessibility$ get \r\n	{ \r\n		$end$throw new $Exception$(); \r\n	}\r\n	$SetterAccessibility$ set \r\n	{ \r\n		throw new $Exception$(); \r\n	}\r\n}]]&gt;\r\n&lt;/Code&gt;\r\n</code></pre>\r\n<p>\r\n	Replace this xml with the xml below and you&#39;ll be good to go after a quick restart of Visual Studio!</p>\r\n<pre class=\"prettyprint\">\r\n<code>&lt;Code Language=&quot;csharp&quot;&gt;\r\n &lt;![CDATA[$signature$ { $GetterAccessibility$ get; $SetterAccessibility$ set; }]]&gt;\r\n&lt;/Code&gt;\r\n</code></pre>\r\n<p>\r\n	&nbsp;</p>\r\n' WHERE `id` = 214[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mCOMMIT[0m
Redirected to http://blog.codeimpossible.com/2010/11/29/Make-Implement-Interface-use-auto-properties
Completed in 4ms (DB: 2) | 302 Found [http://blog.codeimpossible.com/posts/214]


Processing PostsController#show (for 131.239.15.70 at 2011-05-03 13:08:11) [GET]
  Parameters: {"slug"=>"Make-Implement-Interface-use-auto-properties", "month"=>"11", "action"=>"show", "day"=>"29", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.5ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Make-Implement-Interface-use-auto-properties') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/11/29/Make-Implement-Interface-use-auto-properties]


Processing PostsController#index (for 131.239.15.70 at 2011-05-03 13:08:18) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.7ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mSQL (0.1ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 15ms (View: 12, DB: 1) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#show (for 131.239.15.70 at 2011-05-03 13:08:20) [GET]
  Parameters: {"slug"=>"MvcTurbine-stopping-StackOverflowException-on-w3wp-recycle", "month"=>"11", "action"=>"show", "day"=>"22", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.6ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'MvcTurbine-stopping-StackOverflowException-on-w3wp-recycle') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/11/22/MvcTurbine-stopping-StackOverflowException-on-w3wp-recycle]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#edit (for 131.239.15.70 at 2011-05-03 13:08:30) [GET]
  Parameters: {"action"=>"edit", "id"=>"213", "controller"=>"posts"}
  [4;36;1mUser Columns (2.4ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Columns (1.3ms)[0m   [0;1mSHOW FIELDS FROM `posts`[0m
  [4;35;1mPost Load (0.8ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = '213') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/edit
Rendered admin/shared/_userbar (1.5ms)
Completed in 51ms (View: 38, DB: 5) | 200 OK [http://blog.codeimpossible.com/posts/213/edit]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#update (for 131.239.15.70 at 2011-05-03 13:11:15) [PUT]
  Parameters: {"title"=>"MvcTurbine, stopping StackOverflowException on w3wp recycle", "action"=>"update", "_method"=>"put", "authenticity_token"=>"bfto45KOsUILx4HAdpVj7AInWZWX2oc114p63M61YWM=", "id"=>"213", "content"=>"<p>\r\n\tI love MvcTurbine. If you&#39;re working on a asp.net mvc project then you should take a look at it. Having said that I&#39;ve run into one pretty strange problem with it.</p>\r\n<p>\r\n\tAnother developer noticed that there were a lot of eventlog entries on our build server for our projects w3wp process. After looking into it I found that whenever our CI server ran a build the w3wp.exe process would exit with a StackOverflowException.</p>\r\n<p>\r\n\tStrange.</p>\r\n<p>\r\n\tThis wasn&#39;t a big deal since it wasn&#39;t affecting the overall availability of the application, but it was annoying to the dev team.</p>\r\n<p>\r\n\tIn visual studio, every time a file is added or a build is done locally the worker-process is recycled which meant that everytime a build was done locally, or a file was added to the project, each dev got the wonderful &quot;Visual Studio Just In-Time Debugger&quot; dialog. Like I said, not a big issue, just very annoying.</p>\r\n<p>\r\n\tAfter a bit of googling I found that this is indeed an issue with MvcTurbine but it has a very easy fix: just add the following lines to the class that inherits from <code>TurbineApplication</code>:</p>\r\n<pre class=\"prettyprint\">\r\n<code>protected override void ShutdownContext ()\r\n{\r\n    CurrentContext = null;\r\n    ServiceLocator = null;\r\n}\r\n</code></pre>\r\n<p>\r\n\t<a href=\"http://lozanotek.com/blog/\">Javier Lozano</a> - the author of MvcTurbine, explains what&#39;s causing the problem:</p>\r\n<blockquote>\r\n\tSince we register the SeviceLocator with itself and we call dispose, essentially it calls dispose on all the types that it has registered, including [itself]. So this causes a recursive loop of calls to ServiceLocator.Dispose... Essentially you&#39;re preventing the disposition of the ServiceLocator from [happening] since this piece gets called at App_Shutdown. The fix for v2.2 will not be this, instead it will be addressed at the ServiceLocator registration.</blockquote>\r\n<p>\r\n\tHere are some links where you can <a href=\"http://mvcturbine.codeplex.com/Thread/View.aspx?ThreadId=219449\">see the original post with Javier&#39;s answer</a>, take a <a href=\"https://github.com/jglozano/mvcturbine/blob/master/src/Samples/SMExtensions/Mvc/StructureMapTurbineApplication.cs\">look at the code that Javier posted showing the fix in place</a>, and <a href=\"http://stackoverflow.com/questions/3344652/adding-removing-a-file-in-vs2010-causes-webdev-webserver20-exe-has-stopped-worki\">the StackOverflow question that should provide some more context</a>.</p>\r\n", "controller"=>"posts", "summary"=>"I had an issue the other day with MvcTurbine where our application would throw a StackOverflowException whenever the worker process recycled."}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.2ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 213) [0m


  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.6ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-03 18:11:15', `body` = '<p>\r\n	I love MvcTurbine. If you&#39;re working on a asp.net mvc project then you should take a look at it. Having said that I&#39;ve run into one pretty strange problem with it.</p>\r\n<p>\r\n	Another developer noticed that there were a lot of eventlog entries on our build server for our projects w3wp process. After looking into it I found that whenever our CI server ran a build the w3wp.exe process would exit with a StackOverflowException.</p>\r\n<p>\r\n	Strange.</p>\r\n<p>\r\n	This wasn&#39;t a big deal since it wasn&#39;t affecting the overall availability of the application, but it was annoying to the dev team.</p>\r\n<p>\r\n	In visual studio, every time a file is added or a build is done locally the worker-process is recycled which meant that everytime a build was done locally, or a file was added to the project, each dev got the wonderful &quot;Visual Studio Just In-Time Debugger&quot; dialog. Like I said, not a big issue, just very annoying.</p>\r\n<p>\r\n	After a bit of googling I found that this is indeed an issue with MvcTurbine but it has a very easy fix: just add the following lines to the class that inherits from <code>TurbineApplication</code>:</p>\r\n<pre class=\"prettyprint\">\r\n<code>protected override void ShutdownContext ()\r\n{\r\n CurrentContext = null;\r\n ServiceLocator = null;\r\n}\r\n</code></pre>\r\n<p>\r\n	<a href=\"http://lozanotek.com/blog/\">Javier Lozano</a> - the author of MvcTurbine, explains what&#39;s causing the problem:</p>\r\n<blockquote>\r\n	Since we register the SeviceLocator with itself and we call dispose, essentially it calls dispose on all the types that it has registered, including [itself]. So this causes a recursive loop of calls to ServiceLocator.Dispose... Essentially you&#39;re preventing the disposition of the ServiceLocator from [happening] since this piece gets called at App_Shutdown. The fix for v2.2 will not be this, instead it will be addressed at the ServiceLocator registration.</blockquote>\r\n<p>\r\n	Here are some links where you can <a href=\"http://mvcturbine.codeplex.com/Thread/View.aspx?ThreadId=219449\">see the original post with Javier&#39;s answer</a>, take a <a href=\"https://github.com/jglozano/mvcturbine/blob/master/src/Samples/SMExtensions/Mvc/StructureMapTurbineApplication.cs\">look at the code that Javier posted showing the fix in place</a>, and <a href=\"http://stackoverflow.com/questions/3344652/adding-removing-a-file-in-vs2010-causes-webdev-webserver20-exe-has-stopped-worki\">the StackOverflow question that should provide some more context</a>.</p>\r\n' WHERE `id` = 213[0m
  [4;36;1mSQL (16.2ms)[0m   [0;1mCOMMIT[0m
Redirected to http://blog.codeimpossible.com/2010/11/22/MvcTurbine-stopping-StackOverflowException-on-w3wp-recycle
Completed in 20ms (DB: 17) | 302 Found [http://blog.codeimpossible.com/posts/213]


Processing PostsController#show (for 131.239.15.70 at 2011-05-03 13:11:15) [GET]
  Parameters: {"slug"=>"MvcTurbine-stopping-StackOverflowException-on-w3wp-recycle", "month"=>"11", "action"=>"show", "day"=>"22", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.6ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'MvcTurbine-stopping-StackOverflowException-on-w3wp-recycle') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 4ms (View: 2, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/11/22/MvcTurbine-stopping-StackOverflowException-on-w3wp-recycle]
  [4;35;1mSQL (0.1ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#show (for 131.239.15.70 at 2011-05-03 13:11:47) [GET]
  Parameters: {"slug"=>"MvcTurbine-stopping-StackOverflowException-on-w3wp-recycle", "month"=>"11", "action"=>"show", "day"=>"22", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.0ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'MvcTurbine-stopping-StackOverflowException-on-w3wp-recycle') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 0) | 200 OK [http://blog.codeimpossible.com/2010/11/22/MvcTurbine-stopping-StackOverflowException-on-w3wp-recycle]


Processing PostsController#index (for 131.239.15.70 at 2011-05-03 13:11:51) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.6ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mSQL (0.1ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 17ms (View: 14, DB: 1) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#show (for 131.239.15.70 at 2011-05-03 13:11:52) [GET]
  Parameters: {"slug"=>"Quick-Protip-explore-current-directory-from-command-line", "month"=>"4", "action"=>"show", "day"=>"18", "year"=>"2011", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.5ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Quick-Protip-explore-current-directory-from-command-line') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2011/4/18/Quick-Protip-explore-current-directory-from-command-line]


Processing PostsController#index (for 131.239.15.70 at 2011-05-03 13:11:56) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 14ms (View: 12, DB: 0) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#show (for 131.239.15.70 at 2011-05-03 13:11:57) [GET]
  Parameters: {"slug"=>"Installing-mercurial-on-Ubuntu-6-06", "month"=>"12", "action"=>"show", "day"=>"6", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.5ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Installing-mercurial-on-Ubuntu-6-06') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/12/6/Installing-mercurial-on-Ubuntu-6-06]


Processing PostsController#index (for 131.239.15.70 at 2011-05-03 13:12:00) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 14ms (View: 12, DB: 0) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#show (for 131.239.15.70 at 2011-05-03 13:12:02) [GET]
  Parameters: {"slug"=>"Make-Implement-Interface-use-auto-properties", "month"=>"11", "action"=>"show", "day"=>"29", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.5ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Make-Implement-Interface-use-auto-properties') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/11/29/Make-Implement-Interface-use-auto-properties]


Processing PostsController#index (for 131.239.15.70 at 2011-05-03 13:12:12) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 14ms (View: 12, DB: 0) | 200 OK [http://blog.codeimpossible.com/]
  [4;35;1mSQL (0.1ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#show (for 131.239.15.70 at 2011-05-03 13:13:09) [GET]
  Parameters: {"slug"=>"Powershell-Snippet-List-C-Source-Files-Modified-After-Date", "month"=>"11", "action"=>"show", "day"=>"15", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.5ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Powershell-Snippet-List-C-Source-Files-Modified-After-Date') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/11/15/Powershell-Snippet-List-C-Source-Files-Modified-After-Date]


Processing PostsController#index (for 131.239.15.70 at 2011-05-03 13:13:12) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 14ms (View: 12, DB: 0) | 200 OK [http://blog.codeimpossible.com/posts]


Processing PostsController#page (for 131.239.15.70 at 2011-05-03 13:13:14) [GET]
  Parameters: {"action"=>"page", "page"=>"2", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.8ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 5, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 14ms (View: 12, DB: 1) | 200 OK [http://blog.codeimpossible.com/page/2]


Processing PostsController#show (for 131.239.15.70 at 2011-05-03 13:13:16) [GET]
  Parameters: {"slug"=>"For-in-Follow-Up", "month"=>"11", "action"=>"show", "day"=>"8", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.5ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'For-in-Follow-Up') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/11/8/For-in-Follow-Up]


Processing PostsController#edit (for 131.239.15.70 at 2011-05-03 13:13:30) [GET]
  Parameters: {"action"=>"edit", "id"=>"211", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.3ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`id` = '211') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/edit
Rendered admin/shared/_userbar (0.1ms)
Completed in 4ms (View: 2, DB: 0) | 200 OK [http://blog.codeimpossible.com/posts/211/edit]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#update (for 131.239.15.70 at 2011-05-03 13:32:30) [PUT]
  Parameters: {"title"=>"For/in Follow Up", "action"=>"update", "_method"=>"put", "authenticity_token"=>"bfto45KOsUILx4HAdpVj7AInWZWX2oc114p63M61YWM=", "id"=>"211", "content"=>"<p>\r\n\tA few weeks back <a href=\"http://codeimpossible.com/2010/09/20/spot-the-bug-forin-and-javascript/\">I wrote a post about a bug that can occur when you improperly use a for/in</a> style loop in javascript.</p>\r\n<p>\r\n\tThis is particular quirk is one that I find myself explaining to a lot of devs when they start using JavaScript, especially if they are coming from C# (with it&#39;s foreach loop having a similar syntax).</p>\r\n<p>\r\n\t<strong>&quot;I do not think that means what you think it means.&quot;</strong><br />\r\n\tThe for/in loop in JavaScript is powerful but it definitely doesn&#39;t do what you probably think it does. To understand the for/in loop we&#39;ll have to dive deeper into objects and arrays and how JavaScript <del datetime=\"2010-10-19T05:29:37+00:00\">mis</del>treats them.</p>\r\n<p>\r\n\t<strong>Objects in JavaScript</strong><br />\r\n\tIn most other programming languages these days, everything is an object. You can see this in current languages like C# where everything inherits from System.Object or in Ruby where you can assign properties and methods to anything at will.</p>\r\n<p>\r\n\tJavaScript is an object oriented language but it&#39;s implementation of objects is a little different from other languages. In JavaScript every object (every thing) is an array - a special array called an &quot;associative array&quot;. If you&#39;re a C# developer think <code>Dictionary&lt;string, object&gt;</code>. If you&#39;re a python developer then you&#39;re already familiar with this concept. So in JavaScript:</p>\r\n<pre class=\"prettyprint\">\r\nvar x = {\r\n    something: &quot;hi&quot;\r\n};\r\n\r\nvar y = [];\r\ny[&quot;something&quot;] = &quot;hi&quot;;\r\n</pre>\r\n<p>\r\n\t<code>x</code> and <code>y</code> define the same thing. Both objects will have a <code>something</code> property with the value <code>&quot;hi&quot;</code>.&nbsp;<em>Need more proof?</em>Try the following:</p>\r\n<pre class=\"prettyprint\">\r\nalert( typeof( new Array() ) );</pre>\r\n<p>\r\n\tThis will alert <code>&quot;object&quot;</code>. Huh?</p>\r\n<p>\r\n\tYup, an array is just an object with properties named &quot;0&quot;, &quot;1&quot;, &quot;2&quot; etc. Take a look at this next code block.</p>\r\n<pre class=\"prettyprint\">\r\nvar a = {\r\n    0: &quot;hi&quot;,\r\n    1: &quot;there&quot;\r\n};\r\n\r\nvar b = [ &quot;hi&quot;, &quot;there&quot; ];\r\n</pre>\r\n<p>\r\n\tHere <code>a</code> and <code>b</code> are the same exact thing. <a href=\"http://beta.jsvudo.com/3f40176\">Try it out!</a></p>\r\n<p>\r\n\t<strong>Alright, that is insane but why the problem with for/in?</strong></p>\r\n<p>\r\n\tWhen you use a for/in on an object in javascript you are looping over the keys in the key/value collection that makes up that object. So doing</p>\r\n<pre class=\"prettyprint\">\r\nvar x = {\r\n    prop1: &quot;test&quot;,\r\n    prop2: &quot;test&quot;\r\n};\r\n\r\nfor(var p in x ) { \r\n    alert(p); \r\n} \r\n</pre>\r\n<p>\r\n\tThis code will alert &quot;prop1&quot; followed by &quot;prop2&quot;. Using a for/in doesn&#39;t try to treat the object as an array, it enumerates each property (or key) in the object.</p>\r\n<p>\r\n\tNow you should start to see why for/in is generally a bad idea in JavaScript - that is, unless you <strong>want</strong> to loop over the properties of an object.</p>\r\n<p>\r\n\t<strong>Another fun fact</strong></p>\r\n<p>\r\n\tThe for/in loop isn&#39;t guaranteed to alert &quot;prop1&quot; before &quot;prop2&quot;. The properties will be enumerated in whatever order the interpreter returns them in.</p>\r\n<p>\r\n\tSo to summarize, unless you want to enumerate an objects properties, and you don&#39;t care about their order, avoid using the for/in loop in your JavaScript code.</p>\r\n", "controller"=>"posts", "summary"=>"JavaScript has a lot of good parts and bad parts but the for/in loop seems to walk the grey area in between. It's a fantastic feature of JavaScript when wielded appropriately, but a potentially horrible bug when used incorrectly."}
  [4;36;1mUser Columns (1.7ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Columns (1.0ms)[0m   [0;1mSHOW FIELDS FROM `posts`[0m
  [4;35;1mPost Load (0.6ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 211) [0m


  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (1.0ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-03 18:32:30', `body` = '<p>\r\n	A few weeks back <a href=\"http://codeimpossible.com/2010/09/20/spot-the-bug-forin-and-javascript/\">I wrote a post about a bug that can occur when you improperly use a for/in</a> style loop in javascript.</p>\r\n<p>\r\n	This is particular quirk is one that I find myself explaining to a lot of devs when they start using JavaScript, especially if they are coming from C# (with it&#39;s foreach loop having a similar syntax).</p>\r\n<p>\r\n	<strong>&quot;I do not think that means what you think it means.&quot;</strong><br />\r\n	The for/in loop in JavaScript is powerful but it definitely doesn&#39;t do what you probably think it does. To understand the for/in loop we&#39;ll have to dive deeper into objects and arrays and how JavaScript <del datetime=\"2010-10-19T05:29:37+00:00\">mis</del>treats them.</p>\r\n<p>\r\n	<strong>Objects in JavaScript</strong><br />\r\n	In most other programming languages these days, everything is an object. You can see this in current languages like C# where everything inherits from System.Object or in Ruby where you can assign properties and methods to anything at will.</p>\r\n<p>\r\n	JavaScript is an object oriented language but it&#39;s implementation of objects is a little different from other languages. In JavaScript every object (every thing) is an array - a special array called an &quot;associative array&quot;. If you&#39;re a C# developer think <code>Dictionary&lt;string, object&gt;</code>. If you&#39;re a python developer then you&#39;re already familiar with this concept. So in JavaScript:</p>\r\n<pre class=\"prettyprint\">\r\nvar x = {\r\n something: &quot;hi&quot;\r\n};\r\n\r\nvar y = [];\r\ny[&quot;something&quot;] = &quot;hi&quot;;\r\n</pre>\r\n<p>\r\n	<code>x</code> and <code>y</code> define the same thing. Both objects will have a <code>something</code> property with the value <code>&quot;hi&quot;</code>.&nbsp;<em>Need more proof?</em>Try the following:</p>\r\n<pre class=\"prettyprint\">\r\nalert( typeof( new Array() ) );</pre>\r\n<p>\r\n	This will alert <code>&quot;object&quot;</code>. Huh?</p>\r\n<p>\r\n	Yup, an array is just an object with properties named &quot;0&quot;, &quot;1&quot;, &quot;2&quot; etc. Take a look at this next code block.</p>\r\n<pre class=\"prettyprint\">\r\nvar a = {\r\n 0: &quot;hi&quot;,\r\n 1: &quot;there&quot;\r\n};\r\n\r\nvar b = [ &quot;hi&quot;, &quot;there&quot; ];\r\n</pre>\r\n<p>\r\n	Here <code>a</code> and <code>b</code> are the same exact thing. <a href=\"http://beta.jsvudo.com/3f40176\">Try it out!</a></p>\r\n<p>\r\n	<strong>Alright, that is insane but why the problem with for/in?</strong></p>\r\n<p>\r\n	When you use a for/in on an object in javascript you are looping over the keys in the key/value collection that makes up that object. So doing</p>\r\n<pre class=\"prettyprint\">\r\nvar x = {\r\n prop1: &quot;test&quot;,\r\n prop2: &quot;test&quot;\r\n};\r\n\r\nfor(var p in x ) { \r\n alert(p); \r\n} \r\n</pre>\r\n<p>\r\n	This code will alert &quot;prop1&quot; followed by &quot;prop2&quot;. Using a for/in doesn&#39;t try to treat the object as an array, it enumerates each property (or key) in the object.</p>\r\n<p>\r\n	Now you should start to see why for/in is generally a bad idea in JavaScript - that is, unless you <strong>want</strong> to loop over the properties of an object.</p>\r\n<p>\r\n	<strong>Another fun fact</strong></p>\r\n<p>\r\n	The for/in loop isn&#39;t guaranteed to alert &quot;prop1&quot; before &quot;prop2&quot;. The properties will be enumerated in whatever order the interpreter returns them in.</p>\r\n<p>\r\n	So to summarize, unless you want to enumerate an objects properties, and you don&#39;t care about their order, avoid using the for/in loop in your JavaScript code.</p>\r\n' WHERE `id` = 211[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mCOMMIT[0m
Redirected to http://blog.codeimpossible.com/2010/11/8/For-in-Follow-Up
Completed in 54ms (DB: 5) | 302 Found [http://blog.codeimpossible.com/posts/211]


Processing PostsController#show (for 131.239.15.70 at 2011-05-03 13:32:30) [GET]
  Parameters: {"slug"=>"For-in-Follow-Up", "month"=>"11", "action"=>"show", "day"=>"8", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (1.9ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'For-in-Follow-Up') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (1.4ms)
Completed in 8ms (View: 5, DB: 2) | 200 OK [http://blog.codeimpossible.com/2010/11/8/For-in-Follow-Up]


Processing PostsController#index (for 131.239.15.70 at 2011-05-03 13:32:32) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.6ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mSQL (0.1ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 16ms (View: 14, DB: 1) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#page (for 131.239.15.70 at 2011-05-03 13:32:35) [GET]
  Parameters: {"action"=>"page", "page"=>"2", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.6ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 5, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 15ms (View: 13, DB: 1) | 200 OK [http://blog.codeimpossible.com/page/2]


Processing PostsController#show (for 131.239.15.70 at 2011-05-03 13:32:39) [GET]
  Parameters: {"slug"=>"AutoHotKey-scripts-for-developers", "month"=>"11", "action"=>"show", "day"=>"1", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.5ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'AutoHotKey-scripts-for-developers') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/11/1/AutoHotKey-scripts-for-developers]


Processing PostsController#show (for 74.86.107.156 at 2011-05-03 13:32:39) [GET]
  Parameters: {"slug"=>"AutoHotKey-scripts-for-developers", "month"=>"11", "action"=>"show", "day"=>"1", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mPost Load (0.5ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'AutoHotKey-scripts-for-developers') AND (published = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 4ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/11/1/AutoHotKey-scripts-for-developers]


Processing PostsController#edit (for 131.239.15.70 at 2011-05-03 13:33:06) [GET]
  Parameters: {"action"=>"edit", "id"=>"210", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.3ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = '210') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/edit
Rendered admin/shared/_userbar (0.1ms)
Completed in 5ms (View: 4, DB: 0) | 200 OK [http://blog.codeimpossible.com/posts/210/edit]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#update (for 131.239.15.70 at 2011-05-03 13:38:06) [PUT]
  Parameters: {"title"=>"AutoHotKey scripts for developers", "action"=>"update", "_method"=>"put", "authenticity_token"=>"bfto45KOsUILx4HAdpVj7AInWZWX2oc114p63M61YWM=", "id"=>"210", "content"=>"<p>\r\n\tIf you&#39;re not familiar with AutoHotKey yet, I&#39;ve <a href=\"http://codeimpossible.com/2010/10/27/autohotkey-an-introduction\">blogged about it before</a> and I would recommend giving that post a read. For the rest of you I thought I would post some useful AHK scripts that I have come across.</p>\r\n<p>\r\n\t<strong>The most important AHK script ever. </strong><br />\r\n\tDisabling Caps-lock. I constantly fat-finger the caps-lock button. With this script, I never have to worry about it again.</p>\r\n<pre>\r\nSetCapsLockState, AlwaysOff</pre>\r\n<p>\r\n\t<strong>Generate a &quot;safe&quot; jQuery code block</strong><br />\r\n\tThis script will generate a self-calling anonymous function that scopes jQuery and protects your code from other possible interference from other javascript frameworks. You can <a href=\"http://codeimpossible.com/2010/01/13/solving-document-ready-is-not-a-function-and-other-problems\">read more about it here</a>.</p>\r\n<pre>;insert a self-calling anonymous method to scope jQuery calls\r\n:*R0:{jqsafe}::\r\n(\r\n(function($) {{} \r\n    $(function() {{}\r\n    // ...code to run on dom ready\r\n\r\n{Left}{Left}{Left}{Left}{}});`n{}})(jQuery);\r\n)\r\nreturn</pre>\r\n<p>\r\n\t<strong>Include jQuery from the Google CDN</strong><br />\r\n\tThis script will turn <code>{jqgoog#.#.#}</code> into a <code>&lt;script&gt;</code> tag pointing to that version of jquery, specified by the #.#.#, hosted on googles cdn. <code>{jqgoog1.4.2}</code> will become: <em>Line breaks added for readability</em></p>\r\n<pre class=\"prettyprint\">&lt;script \r\ntype=&rdquo;text/javascript&rdquo; \r\nsrc=http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js&gt;&lt;/script&gt;\r\n</pre>\r\n<p><code>{jqgoog1}</code> will become: <em>Line breaks added for readability</em></p>\r\n<pre class=\"prettyprint\">&lt;script \r\ntype=&rdquo;text/javascript&rdquo; \r\nsrc=http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js&gt;&lt;/script&gt;\r\n</pre>\r\n<p>Here is the script.</p>\r\n<pre>; Include jQuery from google cdn\r\n~{::\r\nInput, UserInput, I V L13 C, {}}, jqgoog*,\r\nif ErrorLevel = NewInput\r\n    return\r\nTest := InStr( UserInput, &quot;jqgoog&quot; )\r\nLen := StrLen( UserInput ) + 2\r\n\r\nif Test &gt; 0:\r\n{\r\n\tjqVer := RegExReplace( UserInput, &quot;jqgoog&quot;, &quot;&quot; )\r\n\tSetKeyDelay, -1  ; Most editors can handle the fastest speed.\r\n\t\r\n\tLoop %Len%\r\n\t{\r\n\t\tSend, {backspace}\r\n\t}\r\n\t\r\n\tSend, &lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/%jqVer%/jquery.min.js&quot;&gt;&lt;/script&gt;\r\n    return\r\n}\r\nreturn</pre>\r\n<p>\r\n\t<strong>Automate writing simple database connection code in C#</strong><br />\r\n\tThis script will turn <code>{atwood}</code> into a block of C# that can connect to a database and issue a query.</p>\r\n<pre>\r\n:*R0:{atwood}::\r\n(\r\nvar connString = ConfigurationManager.ConnectionStrings[&quot;connection&quot;].ConnectionString;\r\nvar query = @&quot;&quot;;\r\nusing(var conn = new SqlConnection(connString))\r\n{{}\r\n    conn.Open();\r\nusing( var cmd = new SqlCommand( query, conn ) ) \r\n{{}\r\n    \r\n{}}\r\n{Left}{}}\r\n)\r\nreturn</pre>\r\n<p>\r\n\tHere&#39;s the output:</p>\r\n<pre class=\"prettyprint\">\r\nvar connString = ConfigurationManager.ConnectionStrings[&quot;connection&quot;].ConnectionString;\r\nvar query = @&quot;&quot;;\r\nusing(var conn = new SqlConnection(connString))\r\n{\r\n    conn.Open();\r\n    using( var cmd = new SqlCommand( query, conn ) )\r\n    {\r\n\t\r\n    }\r\n}</pre>\r\n<p>&nbsp;</p>\r\n<p>Enjoy!</p>\r\n<p>&nbsp;</p>\r\n", "controller"=>"posts", "summary"=>"This week I'll post some useful AutoHotKey scripts that I use to make every-day coding easier."}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.3ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 210) [0m


  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.6ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-03 18:38:06', `body` = '<p>\r\n	If you&#39;re not familiar with AutoHotKey yet, I&#39;ve <a href=\"http://codeimpossible.com/2010/10/27/autohotkey-an-introduction\">blogged about it before</a> and I would recommend giving that post a read. For the rest of you I thought I would post some useful AHK scripts that I have come across.</p>\r\n<p>\r\n	<strong>The most important AHK script ever. </strong><br />\r\n	Disabling Caps-lock. I constantly fat-finger the caps-lock button. With this script, I never have to worry about it again.</p>\r\n<pre>\r\nSetCapsLockState, AlwaysOff</pre>\r\n<p>\r\n	<strong>Generate a &quot;safe&quot; jQuery code block</strong><br />\r\n	This script will generate a self-calling anonymous function that scopes jQuery and protects your code from other possible interference from other javascript frameworks. You can <a href=\"http://codeimpossible.com/2010/01/13/solving-document-ready-is-not-a-function-and-other-problems\">read more about it here</a>.</p>\r\n<pre>;insert a self-calling anonymous method to scope jQuery calls\r\n:*R0:{jqsafe}::\r\n(\r\n(function($) {{} \r\n $(function() {{}\r\n // ...code to run on dom ready\r\n\r\n{Left}{Left}{Left}{Left}{}});`n{}})(jQuery);\r\n)\r\nreturn</pre>\r\n<p>\r\n	<strong>Include jQuery from the Google CDN</strong><br />\r\n	This script will turn <code>{jqgoog#.#.#}</code> into a <code>&lt;script&gt;</code> tag pointing to that version of jquery, specified by the #.#.#, hosted on googles cdn. <code>{jqgoog1.4.2}</code> will become: <em>Line breaks added for readability</em></p>\r\n<pre class=\"prettyprint\">&lt;script \r\ntype=&rdquo;text/javascript&rdquo; \r\nsrc=http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js&gt;&lt;/script&gt;\r\n</pre>\r\n<p><code>{jqgoog1}</code> will become: <em>Line breaks added for readability</em></p>\r\n<pre class=\"prettyprint\">&lt;script \r\ntype=&rdquo;text/javascript&rdquo; \r\nsrc=http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js&gt;&lt;/script&gt;\r\n</pre>\r\n<p>Here is the script.</p>\r\n<pre>; Include jQuery from google cdn\r\n~{::\r\nInput, UserInput, I V L13 C, {}}, jqgoog*,\r\nif ErrorLevel = NewInput\r\n return\r\nTest := InStr( UserInput, &quot;jqgoog&quot; )\r\nLen := StrLen( UserInput ) + 2\r\n\r\nif Test &gt; 0:\r\n{\r\n	jqVer := RegExReplace( UserInput, &quot;jqgoog&quot;, &quot;&quot; )\r\n	SetKeyDelay, -1 ; Most editors can handle the fastest speed.\r\n	\r\n	Loop %Len%\r\n	{\r\n		Send, {backspace}\r\n	}\r\n	\r\n	Send, &lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/%jqVer%/jquery.min.js&quot;&gt;&lt;/script&gt;\r\n return\r\n}\r\nreturn</pre>\r\n<p>\r\n	<strong>Automate writing simple database connection code in C#</strong><br />\r\n	This script will turn <code>{atwood}</code> into a block of C# that can connect to a database and issue a query.</p>\r\n<pre>\r\n:*R0:{atwood}::\r\n(\r\nvar connString = ConfigurationManager.ConnectionStrings[&quot;connection&quot;].ConnectionString;\r\nvar query = @&quot;&quot;;\r\nusing(var conn = new SqlConnection(connString))\r\n{{}\r\n conn.Open();\r\nusing( var cmd = new SqlCommand( query, conn ) ) \r\n{{}\r\n \r\n{}}\r\n{Left}{}}\r\n)\r\nreturn</pre>\r\n<p>\r\n	Here&#39;s the output:</p>\r\n<pre class=\"prettyprint\">\r\nvar connString = ConfigurationManager.ConnectionStrings[&quot;connection&quot;].ConnectionString;\r\nvar query = @&quot;&quot;;\r\nusing(var conn = new SqlConnection(connString))\r\n{\r\n conn.Open();\r\n using( var cmd = new SqlCommand( query, conn ) )\r\n {\r\n	\r\n }\r\n}</pre>\r\n<p>&nbsp;</p>\r\n<p>Enjoy!</p>\r\n<p>&nbsp;</p>\r\n' WHERE `id` = 210[0m
  [4;36;1mSQL (1.3ms)[0m   [0;1mCOMMIT[0m
Redirected to http://blog.codeimpossible.com/2010/11/1/AutoHotKey-scripts-for-developers
Completed in 5ms (DB: 2) | 302 Found [http://blog.codeimpossible.com/posts/210]


Processing PostsController#show (for 131.239.15.70 at 2011-05-03 13:38:06) [GET]
  Parameters: {"slug"=>"AutoHotKey-scripts-for-developers", "month"=>"11", "action"=>"show", "day"=>"1", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.6ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'AutoHotKey-scripts-for-developers') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/11/1/AutoHotKey-scripts-for-developers]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 131.239.15.70 at 2011-05-03 15:08:44) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (2.5ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mPost Columns (1.7ms)[0m   [0mSHOW FIELDS FROM `posts`[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 47ms (View: 33, DB: 5) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#page (for 131.239.15.70 at 2011-05-03 15:08:47) [GET]
  Parameters: {"action"=>"page", "page"=>"2", "controller"=>"posts"}
  [4;35;1mPost Load (0.8ms)[0m   [0mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 5, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 7ms (View: 4, DB: 1) | 200 OK [http://blog.codeimpossible.com/page/2]


Processing PostsController#page (for 131.239.15.70 at 2011-05-03 15:08:51) [GET]
  Parameters: {"action"=>"page", "page"=>"1", "controller"=>"posts"}
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 6ms (View: 4, DB: 0) | 200 OK [http://blog.codeimpossible.com/page/1]


Processing PostsController#show (for 131.239.15.70 at 2011-05-03 15:08:54) [GET]
  Parameters: {"slug"=>"Make-Implement-Interface-use-auto-properties", "month"=>"11", "action"=>"show", "day"=>"29", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mPost Load (0.9ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Make-Implement-Interface-use-auto-properties') AND (published = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 4ms (View: 2, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/11/29/Make-Implement-Interface-use-auto-properties]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 131.239.15.70 at 2011-05-03 15:20:47) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mUser Columns (24.9ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (1.8ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.5ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mPost Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `posts`[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (1.3ms)
Completed in 80ms (View: 42, DB: 29) | 200 OK [http://blog.codeimpossible.com/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 68.187.213.182 at 2011-05-03 18:03:19) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (45.9ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mPost Columns (1.5ms)[0m   [0mSHOW FIELDS FROM `posts`[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 105ms (View: 38, DB: 48) | 200 OK [http://blog.codeimpossible.com/]
  [4;35;1mSQL (0.1ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#show (for 68.187.213.182 at 2011-05-03 18:06:46) [GET]
  Parameters: {"slug"=>"Quick-Protip-explore-current-directory-from-command-line", "month"=>"4", "action"=>"show", "day"=>"18", "year"=>"2011", "controller"=>"posts"}
  [4;35;1mPost Load (0.7ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Quick-Protip-explore-current-directory-from-command-line') AND (published = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 4ms (View: 2, DB: 1) | 200 OK [http://blog.codeimpossible.com/2011/4/18/Quick-Protip-explore-current-directory-from-command-line]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 68.187.213.182 at 2011-05-03 19:03:08) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (0.2ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mPost Columns (1.6ms)[0m   [0mSHOW FIELDS FROM `posts`[0m
  [4;36;1mSQL (1.6ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 47ms (View: 33, DB: 4) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#page (for 68.187.213.182 at 2011-05-03 19:03:10) [GET]
  Parameters: {"action"=>"page", "page"=>"2", "controller"=>"posts"}
  [4;35;1mPost Load (42.9ms)[0m   [0mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 5, 5[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 48ms (View: 3, DB: 43) | 200 OK [http://blog.codeimpossible.com/page/2]


Processing PostsController#page (for 68.187.213.182 at 2011-05-03 19:03:12) [GET]
  Parameters: {"action"=>"page", "page"=>"3", "controller"=>"posts"}
  [4;35;1mPost Load (0.9ms)[0m   [0mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 10, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 6ms (View: 3, DB: 1) | 200 OK [http://blog.codeimpossible.com/page/3]


Processing PostsController#page (for 68.187.213.182 at 2011-05-03 19:03:15) [GET]
  Parameters: {"action"=>"page", "page"=>"4", "controller"=>"posts"}
  [4;35;1mPost Load (0.8ms)[0m   [0mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 15, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 6ms (View: 3, DB: 1) | 200 OK [http://blog.codeimpossible.com/page/4]


Processing PostsController#page (for 68.187.213.182 at 2011-05-03 19:03:17) [GET]
  Parameters: {"action"=>"page", "page"=>"5", "controller"=>"posts"}
  [4;35;1mPost Load (1.1ms)[0m   [0mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 20, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 6ms (View: 4, DB: 1) | 200 OK [http://blog.codeimpossible.com/page/5]


Processing PostsController#page (for 68.187.213.182 at 2011-05-03 19:03:19) [GET]
  Parameters: {"action"=>"page", "page"=>"6", "controller"=>"posts"}
  [4;35;1mPost Load (0.8ms)[0m   [0mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 25, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 6ms (View: 3, DB: 1) | 200 OK [http://blog.codeimpossible.com/page/6]


Processing PostsController#show (for 68.187.213.182 at 2011-05-03 19:03:21) [GET]
  Parameters: {"slug"=>"Solving-document-ready-is-not-a-function-and-other-problems", "month"=>"1", "action"=>"show", "day"=>"13", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mPost Load (0.6ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Solving-document-ready-is-not-a-function-and-other-problems') AND (published = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 4ms (View: 2, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/1/13/Solving-document-ready-is-not-a-function-and-other-problems]


Processing PostsController#show (for 68.187.213.182 at 2011-05-03 19:03:38) [GET]
  Parameters: {"slug"=>"Solving-document-ready-is-not-a-function-and-other-problems", "month"=>"01", "action"=>"show", "day"=>"13", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Solving-document-ready-is-not-a-function-and-other-problems') AND (published = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 2ms (View: 1, DB: 0) | 200 OK [http://blog.codeimpossible.com/2010/01/13/Solving-document-ready-is-not-a-function-and-other-problems]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 68.187.213.182 at 2011-05-03 21:06:15) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (59.7ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mPost Columns (1.9ms)[0m   [0mSHOW FIELDS FROM `posts`[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 137ms (View: 55, DB: 62) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#page (for 68.187.213.182 at 2011-05-03 21:06:27) [GET]
  Parameters: {"action"=>"page", "page"=>"2", "controller"=>"posts"}
  [4;35;1mPost Load (0.7ms)[0m   [0mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 5, 5[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 6ms (View: 3, DB: 1) | 200 OK [http://blog.codeimpossible.com/page/2]


Processing PostsController#page (for 68.187.213.182 at 2011-05-03 21:06:30) [GET]
  Parameters: {"action"=>"page", "page"=>"3", "controller"=>"posts"}
  [4;35;1mPost Load (0.8ms)[0m   [0mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 10, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 6ms (View: 3, DB: 1) | 200 OK [http://blog.codeimpossible.com/page/3]


Processing PostsController#page (for 68.187.213.182 at 2011-05-03 21:06:33) [GET]
  Parameters: {"action"=>"page", "page"=>"4", "controller"=>"posts"}
  [4;35;1mPost Load (1.3ms)[0m   [0mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 15, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 6ms (View: 3, DB: 1) | 200 OK [http://blog.codeimpossible.com/page/4]


Processing PostsController#page (for 68.187.213.182 at 2011-05-03 21:06:35) [GET]
  Parameters: {"action"=>"page", "page"=>"5", "controller"=>"posts"}
  [4;35;1mPost Load (0.8ms)[0m   [0mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 20, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 6ms (View: 3, DB: 1) | 200 OK [http://blog.codeimpossible.com/page/5]


Processing PostsController#page (for 68.187.213.182 at 2011-05-03 21:06:37) [GET]
  Parameters: {"action"=>"page", "page"=>"6", "controller"=>"posts"}
  [4;35;1mPost Load (0.8ms)[0m   [0mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 25, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 6ms (View: 3, DB: 1) | 200 OK [http://blog.codeimpossible.com/page/6]


Processing PostsController#show (for 68.187.213.182 at 2011-05-03 21:06:43) [GET]
  Parameters: {"slug"=>"Solving-document-ready-is-not-a-function-and-other-problems", "month"=>"1", "action"=>"show", "day"=>"13", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mPost Load (0.6ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Solving-document-ready-is-not-a-function-and-other-problems') AND (published = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 4ms (View: 2, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/1/13/Solving-document-ready-is-not-a-function-and-other-problems]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#show (for 68.187.213.182 at 2011-05-03 21:08:39) [GET]
  Parameters: {"slug"=>"Solving-document-ready-is-not-a-function-and-other-problems", "month"=>"1", "action"=>"show", "day"=>"13", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Solving-document-ready-is-not-a-function-and-other-problems') AND (published = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 2ms (View: 1, DB: 0) | 200 OK [http://blog.codeimpossible.com/2010/1/13/Solving-document-ready-is-not-a-function-and-other-problems]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#show (for 68.187.213.182 at 2011-05-03 21:20:58) [GET]
  Parameters: {"slug"=>"Solving-document-ready-is-not-a-function-and-other-problems", "month"=>"1", "action"=>"show", "day"=>"13", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mPost Columns (1.6ms)[0m   [0;1mSHOW FIELDS FROM `posts`[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Solving-document-ready-is-not-a-function-and-other-problems') AND (published = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 14ms (View: 4, DB: 2) | 200 OK [http://blog.codeimpossible.com/2010/1/13/Solving-document-ready-is-not-a-function-and-other-problems]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#show (for 68.187.213.182 at 2011-05-03 21:28:55) [GET]
  Parameters: {"slug"=>"Solving-document-ready-is-not-a-function-and-other-problems", "month"=>"1", "action"=>"show", "day"=>"13", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mPost Columns (1.6ms)[0m   [0;1mSHOW FIELDS FROM `posts`[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Solving-document-ready-is-not-a-function-and-other-problems') AND (published = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 14ms (View: 4, DB: 2) | 200 OK [http://blog.codeimpossible.com/2010/1/13/Solving-document-ready-is-not-a-function-and-other-problems]


Processing PostsController#show (for 68.187.213.182 at 2011-05-03 21:29:15) [GET]
  Parameters: {"slug"=>"solving-document-ready-is-not-a-function-and-other-problems", "month"=>"01", "action"=>"show", "day"=>"13", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mPost Load (0.6ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'solving-document-ready-is-not-a-function-and-other-problems') AND (published = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/01/13/solving-document-ready-is-not-a-function-and-other-problems/]


Processing PostsController#show (for 68.187.213.182 at 2011-05-03 21:29:19) [GET]
  Parameters: {"slug"=>"solving-document-ready-is-not-a-function-and-other-problems", "month"=>"01", "action"=>"show", "day"=>"13", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'solving-document-ready-is-not-a-function-and-other-problems') AND (published = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 2ms (View: 1, DB: 0) | 200 OK [http://blog.codeimpossible.com/2010/01/13/solving-document-ready-is-not-a-function-and-other-problems/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 131.239.15.70 at 2011-05-04 14:08:23) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mUser Columns (27.4ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (2.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (42.9ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mPost Columns (1.7ms)[0m   [0mSHOW FIELDS FROM `posts`[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (1.4ms)
Completed in 131ms (View: 45, DB: 75) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#show (for 131.239.15.70 at 2011-05-04 14:08:33) [GET]
  Parameters: {"slug"=>"Make-Implement-Interface-use-auto-properties", "month"=>"11", "action"=>"show", "day"=>"29", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.6ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Make-Implement-Interface-use-auto-properties') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 4ms (View: 2, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/11/29/Make-Implement-Interface-use-auto-properties]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 131.239.15.70 at 2011-05-04 14:39:14) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mUser Columns (1.9ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mPost Columns (1.7ms)[0m   [0mSHOW FIELDS FROM `posts`[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (1.4ms)
Completed in 59ms (View: 46, DB: 4) | 200 OK [http://blog.codeimpossible.com/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#page (for 131.239.15.70 at 2011-05-04 14:39:44) [GET]
  Parameters: {"action"=>"page", "page"=>"2", "controller"=>"posts"}
  [4;36;1mUser Columns (3.0ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (5.4ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 5, 5[0m
  [4;35;1mPost Columns (1.5ms)[0m   [0mSHOW FIELDS FROM `posts`[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (1.3ms)
Completed in 61ms (View: 42, DB: 10) | 200 OK [http://blog.codeimpossible.com/page/2]


Processing PostsController#page (for 131.239.15.70 at 2011-05-04 14:39:47) [GET]
  Parameters: {"action"=>"page", "page"=>"3", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (3.4ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 10, 5[0m
  [4;35;1mSQL (0.1ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 18ms (View: 12, DB: 4) | 200 OK [http://blog.codeimpossible.com/page/3]


Processing PostsController#page (for 131.239.15.70 at 2011-05-04 14:39:53) [GET]
  Parameters: {"action"=>"page", "page"=>"4", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (3.9ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 15, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 17ms (View: 11, DB: 4) | 200 OK [http://blog.codeimpossible.com/page/4]


Processing PostsController#page (for 131.239.15.70 at 2011-05-04 14:39:57) [GET]
  Parameters: {"action"=>"page", "page"=>"5", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (4.4ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 20, 5[0m
  [4;35;1mSQL (0.1ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 20ms (View: 14, DB: 5) | 200 OK [http://blog.codeimpossible.com/page/5]


Processing PostsController#page (for 131.239.15.70 at 2011-05-04 14:40:01) [GET]
  Parameters: {"action"=>"page", "page"=>"6", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (18.1ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 25, 5[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 54ms (View: 34, DB: 18) | 200 OK [http://blog.codeimpossible.com/page/6]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#show (for 131.239.15.70 at 2011-05-04 14:40:10) [GET]
  Parameters: {"slug"=>"Solving-document-ready-is-not-a-function-and-other-problems", "month"=>"1", "action"=>"show", "day"=>"13", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mUser Columns (2.7ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Columns (2.4ms)[0m   [0;1mSHOW FIELDS FROM `posts`[0m
  [4;35;1mPost Load (6.0ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Solving-document-ready-is-not-a-function-and-other-problems') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (1.5ms)
Completed in 29ms (View: 7, DB: 11) | 200 OK [http://blog.codeimpossible.com/2010/1/13/Solving-document-ready-is-not-a-function-and-other-problems]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.1ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#edit (for 131.239.15.70 at 2011-05-04 14:40:54) [GET]
  Parameters: {"action"=>"edit", "id"=>"187", "controller"=>"posts"}
  [4;36;1mUser Columns (2.1ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Columns (1.9ms)[0m   [0;1mSHOW FIELDS FROM `posts`[0m
  [4;35;1mPost Load (0.6ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = '187') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/edit
Rendered admin/shared/_userbar (1.5ms)
Completed in 49ms (View: 34, DB: 5) | 200 OK [http://blog.codeimpossible.com/posts/187/edit]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#update (for 131.239.15.70 at 2011-05-04 14:45:20) [PUT]
  Parameters: {"title"=>"Solving &quot;$(document).ready is not a function&quot; and other problems", "action"=>"update", "_method"=>"put", "authenticity_token"=>"bfto45KOsUILx4HAdpVj7AInWZWX2oc114p63M61YWM=", "id"=>"187", "content"=>"<p>\r\n\tHas this ever happened to you: you&#39;ve been working on a customer&#39;s site, writing some really awesome jQuery flashy, fadey, scrolly, interactivey thing, you deploy it, and everything is awesome. The customer rejoices and the customer&#39;s customers rejoice. Rejoicing is had by everyone. And then you get an email one day:</p>\r\n<blockquote>\r\n\t&quot;Everything is broken. We&#39;ve kidnapped your dog. Fix our site or you&#39;ll never see Spartacus again.&quot;</blockquote>\r\n<p>\r\n\tAnd before you have time to wonder why you ever named your dog &quot;Spartacus&quot; to begin with (i mean <strong>come. on.</strong>), you&#39;re off in debug hell. You load the site and see all sorts of weird errors: <code>&ldquo;$().ready is not a function&rdquo;</code> <code>&ldquo;$(document) doesn&rsquo;t support this property or method&rdquo;</code> Or my personal favorite: <code>&ldquo;null is null or not an object&rdquo;</code></p>\r\n<p>\r\n\tYou open up FireFox, activate FireBug, load the console, and type &ldquo;alert($)&rdquo;, press run, and instead of seeing the expected jQuery function:</p>\r\n<pre class=\"prettyprint\">\r\n<code>function (E, F) {\r\n    return new (o.fn.init)(E, F);\r\n}\r\n</code></pre>\r\n<p>\r\n\tYou instead get:</p>\r\n<pre class=\"prettyprint\">\r\n<code>function $(element) {\r\n    if (arguments.length &gt; 1) {\r\n        for (var i = 0, elements = [], length = arguments.length; i &lt; length; i++) {\r\n            elements.push($(arguments[i]));\r\n        }\r\n        return elements;\r\n    }\r\n    if (Object.isString(element)) {\r\n        element = document.getElementById(element);\r\n    }\r\n    return Element.extend(element);\r\n}\r\n</code></pre>\r\n<p>\r\n\tOr even:</p>\r\n<pre class=\"prettyprint\">\r\n<code>function $(id) {\r\n    return document.getElementById(id);\r\n}\r\n</code></pre>\r\n<p>\r\n\t<strong>DOH!</strong> Looks like another javascript library has been loaded and has overwritten the <code>$()</code> shortcut for jQuery. Woe is I. Why can&rsquo;t we all just get along?!? Well, we can&rsquo;t stop people from including their favorite javascript libraries, but what we can do is prevent our code from suffering as a result. We&rsquo;ll need a nice, big beefy, bodyguard to make sure our code isn&rsquo;t messed with while it&rsquo;s out clubbing with Prototype, Scriptaculous or even MooTools (who invited <em>him</em>??!?). Here&rsquo;s what our bodyguard function will look like</p>\r\n<pre class=\"prettyprint\">\r\n<code>\r\n( function($) {\r\n\r\n} ) ( jQuery );\r\n</code></pre>\r\n<p>\r\n\tSo what this does is call our anonymous function and pass the <code>jQuery</code> object. This will scope &lsquo;$&rsquo; to within our little function so we won&rsquo;t step on anyone else&rsquo;s toes (and they won&rsquo;t bump into us while we&rsquo;re on the dance floor and spill our drink everywhere). Okay, I think I&#39;ve taken the clubbing metaphor far enough.</p>\r\n<p>\r\n\tBasically this will allow our code to run and use the <code>$</code> shortcut for JQuery as if it were loaded without any of these other libraries on the page. Here is what the completed code would look like:</p>\r\n<pre class=\"prettyprint\">\r\n<code>\r\n&lt;script src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.4.1/jquery.min.js&quot; type=&quot;text/javascript&quot;&gt;\r\n&lt;/script&gt;\r\n\r\n&lt;script src=&quot;http://ajax.googleapis.com/ajax/libs/prototype/1.6.1.0/prototype.js&quot; type=&quot;text/javascript&quot;&gt;\r\n&lt;/script&gt;\r\n&lt;script src=&quot;http://ajax.googleapis.com/ajax/libs/scriptaculous/1.8.3/scriptaculous.js&quot; type=&quot;text/javascript&quot;&gt;\r\n&lt;/script&gt;\r\n\r\n&lt;script type=&quot;text/javascript&quot;&gt;\r\n( function($) {\r\n    // we can now rely on $ within the safety of our &ldquo;bodyguard&rdquo; function\r\n    $(document).ready( function() { alert(&quot;nyah nyah! I&rsquo;m able to use &#39;$&#39;!!!!&quot;);  } );\r\n} ) ( jQuery );\r\n\r\n//this will fail\r\n$(document).ready( function() { alert(&#39;fail?&#39;); } );\r\n&lt;/script&gt;\r\n</code></pre>\r\n<p>\r\n\tI love using this simple self-calling anonymous function style when working with jQuery because it saves me from typing <code>jQuery()</code>, which really does look a lot more ugly than using the <code>$()</code> shortcut. It also protects my code from any scoping issues and lets the code function normally when <a href=\"http://docs.jquery.com/Core/jQuery.noConflict\">jQuery is put into no conflict mode</a>.</p>\r\n<p>\r\n\tMy opinion, if you&#39;re doing work in jQuery on sites that you don&#39;t control 100%, you should be using this method to protect your code and your clients.</p>\r\n<p>\r\n\t<strong>Updated: changed link for jquery to use 1.4.1 at the google CDN (tsk, tsk, tsk I was using the googlecode.com link)</strong></p>\r\n", "controller"=>"posts", "summary"=>"Ever been working on a customer's site, writing some really awesome jQuery, you deploy it, and everything is awesome. And then you get an email one day..."}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.6ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`id` = 187) [0m


  [4;36;1mSQL (0.0ms)[0m   [0;1mBEGIN[0m
  [4;35;1mPost Update (0.5ms)[0m   [0mUPDATE `posts` SET `updated_at` = '2011-05-04 19:45:20', `summary` = 'Ever been working on a customer\'s site, writing some really awesome jQuery, you deploy it, and everything is awesome. And then you get an email one day...', `body` = '<p>\r\n	Has this ever happened to you: you&#39;ve been working on a customer&#39;s site, writing some really awesome jQuery flashy, fadey, scrolly, interactivey thing, you deploy it, and everything is awesome. The customer rejoices and the customer&#39;s customers rejoice. Rejoicing is had by everyone. And then you get an email one day:</p>\r\n<blockquote>\r\n	&quot;Everything is broken. We&#39;ve kidnapped your dog. Fix our site or you&#39;ll never see Spartacus again.&quot;</blockquote>\r\n<p>\r\n	And before you have time to wonder why you ever named your dog &quot;Spartacus&quot; to begin with (i mean <strong>come. on.</strong>), you&#39;re off in debug hell. You load the site and see all sorts of weird errors: <code>&ldquo;$().ready is not a function&rdquo;</code> <code>&ldquo;$(document) doesn&rsquo;t support this property or method&rdquo;</code> Or my personal favorite: <code>&ldquo;null is null or not an object&rdquo;</code></p>\r\n<p>\r\n	You open up FireFox, activate FireBug, load the console, and type &ldquo;alert($)&rdquo;, press run, and instead of seeing the expected jQuery function:</p>\r\n<pre class=\"prettyprint\">\r\n<code>function (E, F) {\r\n return new (o.fn.init)(E, F);\r\n}\r\n</code></pre>\r\n<p>\r\n	You instead get:</p>\r\n<pre class=\"prettyprint\">\r\n<code>function $(element) {\r\n if (arguments.length &gt; 1) {\r\n for (var i = 0, elements = [], length = arguments.length; i &lt; length; i++) {\r\n elements.push($(arguments[i]));\r\n }\r\n return elements;\r\n }\r\n if (Object.isString(element)) {\r\n element = document.getElementById(element);\r\n }\r\n return Element.extend(element);\r\n}\r\n</code></pre>\r\n<p>\r\n	Or even:</p>\r\n<pre class=\"prettyprint\">\r\n<code>function $(id) {\r\n return document.getElementById(id);\r\n}\r\n</code></pre>\r\n<p>\r\n	<strong>DOH!</strong> Looks like another javascript library has been loaded and has overwritten the <code>$()</code> shortcut for jQuery. Woe is I. Why can&rsquo;t we all just get along?!? Well, we can&rsquo;t stop people from including their favorite javascript libraries, but what we can do is prevent our code from suffering as a result. We&rsquo;ll need a nice, big beefy, bodyguard to make sure our code isn&rsquo;t messed with while it&rsquo;s out clubbing with Prototype, Scriptaculous or even MooTools (who invited <em>him</em>??!?). Here&rsquo;s what our bodyguard function will look like</p>\r\n<pre class=\"prettyprint\">\r\n<code>\r\n( function($) {\r\n\r\n} ) ( jQuery );\r\n</code></pre>\r\n<p>\r\n	So what this does is call our anonymous function and pass the <code>jQuery</code> object. This will scope &lsquo;$&rsquo; to within our little function so we won&rsquo;t step on anyone else&rsquo;s toes (and they won&rsquo;t bump into us while we&rsquo;re on the dance floor and spill our drink everywhere). Okay, I think I&#39;ve taken the clubbing metaphor far enough.</p>\r\n<p>\r\n	Basically this will allow our code to run and use the <code>$</code> shortcut for JQuery as if it were loaded without any of these other libraries on the page. Here is what the completed code would look like:</p>\r\n<pre class=\"prettyprint\">\r\n<code>\r\n&lt;script src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.4.1/jquery.min.js&quot; type=&quot;text/javascript&quot;&gt;\r\n&lt;/script&gt;\r\n\r\n&lt;script src=&quot;http://ajax.googleapis.com/ajax/libs/prototype/1.6.1.0/prototype.js&quot; type=&quot;text/javascript&quot;&gt;\r\n&lt;/script&gt;\r\n&lt;script src=&quot;http://ajax.googleapis.com/ajax/libs/scriptaculous/1.8.3/scriptaculous.js&quot; type=&quot;text/javascript&quot;&gt;\r\n&lt;/script&gt;\r\n\r\n&lt;script type=&quot;text/javascript&quot;&gt;\r\n( function($) {\r\n // we can now rely on $ within the safety of our &ldquo;bodyguard&rdquo; function\r\n $(document).ready( function() { alert(&quot;nyah nyah! I&rsquo;m able to use &#39;$&#39;!!!!&quot;); } );\r\n} ) ( jQuery );\r\n\r\n//this will fail\r\n$(document).ready( function() { alert(&#39;fail?&#39;); } );\r\n&lt;/script&gt;\r\n</code></pre>\r\n<p>\r\n	I love using this simple self-calling anonymous function style when working with jQuery because it saves me from typing <code>jQuery()</code>, which really does look a lot more ugly than using the <code>$()</code> shortcut. It also protects my code from any scoping issues and lets the code function normally when <a href=\"http://docs.jquery.com/Core/jQuery.noConflict\">jQuery is put into no conflict mode</a>.</p>\r\n<p>\r\n	My opinion, if you&#39;re doing work in jQuery on sites that you don&#39;t control 100%, you should be using this method to protect your code and your clients.</p>\r\n<p>\r\n	<strong>Updated: changed link for jquery to use 1.4.1 at the google CDN (tsk, tsk, tsk I was using the googlecode.com link)</strong></p>\r\n' WHERE `id` = 187[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCOMMIT[0m
Redirected to http://blog.codeimpossible.com/2010/1/13/Solving-document-ready-is-not-a-function-and-other-problems
Completed in 5ms (DB: 2) | 302 Found [http://blog.codeimpossible.com/posts/187]


Processing PostsController#show (for 131.239.15.70 at 2011-05-04 14:45:20) [GET]
  Parameters: {"slug"=>"Solving-document-ready-is-not-a-function-and-other-problems", "month"=>"1", "action"=>"show", "day"=>"13", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (1.9ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Solving-document-ready-is-not-a-function-and-other-problems') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 6ms (View: 2, DB: 2) | 200 OK [http://blog.codeimpossible.com/2010/1/13/Solving-document-ready-is-not-a-function-and-other-problems]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#show (for 131.239.15.70 at 2011-05-04 15:08:20) [GET]
  Parameters: {"slug"=>"MvcTurbine-stopping-StackOverflowException-on-w3wp-recycle", "month"=>"11", "action"=>"show", "day"=>"22", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mUser Columns (1.7ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Columns (1.0ms)[0m   [0;1mSHOW FIELDS FROM `posts`[0m
  [4;35;1mPost Load (1.2ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'MvcTurbine-stopping-StackOverflowException-on-w3wp-recycle') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (1.4ms)
Completed in 19ms (View: 6, DB: 4) | 200 OK [http://blog.codeimpossible.com/2010/11/22/MvcTurbine-stopping-StackOverflowException-on-w3wp-recycle]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.1ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#show (for 131.239.15.70 at 2011-05-04 15:10:41) [GET]
  Parameters: {"slug"=>"MvcTurbine-stopping-StackOverflowException-on-w3wp-recycle", "month"=>"11", "action"=>"show", "day"=>"22", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'MvcTurbine-stopping-StackOverflowException-on-w3wp-recycle') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 2, DB: 0) | 200 OK [http://blog.codeimpossible.com/2010/11/22/MvcTurbine-stopping-StackOverflowException-on-w3wp-recycle]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#show (for 131.239.15.70 at 2011-05-04 15:14:14) [GET]
  Parameters: {"slug"=>"MvcTurbine-stopping-StackOverflowException-on-w3wp-recycle", "month"=>"11", "action"=>"show", "day"=>"22", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.0ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'MvcTurbine-stopping-StackOverflowException-on-w3wp-recycle') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 0) | 200 OK [http://blog.codeimpossible.com/2010/11/22/MvcTurbine-stopping-StackOverflowException-on-w3wp-recycle]


Processing PostsController#index (for 131.239.15.70 at 2011-05-04 15:14:21) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.7ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 51ms (View: 48, DB: 1) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#page (for 131.239.15.70 at 2011-05-04 15:14:23) [GET]
  Parameters: {"action"=>"page", "page"=>"2", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (1.5ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 5, 5[0m
  [4;35;1mSQL (0.3ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 15ms (View: 12, DB: 2) | 200 OK [http://blog.codeimpossible.com/page/2]


Processing PostsController#page (for 131.239.15.70 at 2011-05-04 15:14:25) [GET]
  Parameters: {"action"=>"page", "page"=>"3", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.7ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 10, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 14ms (View: 12, DB: 1) | 200 OK [http://blog.codeimpossible.com/page/3]


Processing PostsController#page (for 131.239.15.70 at 2011-05-04 15:14:27) [GET]
  Parameters: {"action"=>"page", "page"=>"4", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.7ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 15, 5[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 14ms (View: 12, DB: 1) | 200 OK [http://blog.codeimpossible.com/page/4]


Processing PostsController#page (for 131.239.15.70 at 2011-05-04 15:14:29) [GET]
  Parameters: {"action"=>"page", "page"=>"5", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.7ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 20, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 14ms (View: 12, DB: 1) | 200 OK [http://blog.codeimpossible.com/page/5]


Processing PostsController#page (for 131.239.15.70 at 2011-05-04 15:14:31) [GET]
  Parameters: {"action"=>"page", "page"=>"6", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.8ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 25, 5[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 14ms (View: 11, DB: 1) | 200 OK [http://blog.codeimpossible.com/page/6]


Processing PostsController#show (for 131.239.15.70 at 2011-05-04 15:14:34) [GET]
  Parameters: {"slug"=>"Solving-document-ready-is-not-a-function-and-other-problems", "month"=>"1", "action"=>"show", "day"=>"13", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.0ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Solving-document-ready-is-not-a-function-and-other-problems') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 0) | 200 OK [http://blog.codeimpossible.com/2010/1/13/Solving-document-ready-is-not-a-function-and-other-problems]


Processing PostsController#show (for 131.239.15.70 at 2011-05-04 15:14:49) [GET]
  Parameters: {"slug"=>"Solving-document-ready-is-not-a-function-and-other-problems", "month"=>"1", "action"=>"show", "day"=>"13", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Solving-document-ready-is-not-a-function-and-other-problems') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 0) | 200 OK [http://blog.codeimpossible.com/2010/1/13/Solving-document-ready-is-not-a-function-and-other-problems]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#show (for 131.239.15.70 at 2011-05-04 15:15:10) [GET]
  Parameters: {"slug"=>"Solving-document-ready-is-not-a-function-and-other-problems", "month"=>"1", "action"=>"show", "day"=>"13", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mUser Columns (1.7ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Columns (1.0ms)[0m   [0;1mSHOW FIELDS FROM `posts`[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Solving-document-ready-is-not-a-function-and-other-problems') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (1.3ms)
Completed in 17ms (View: 6, DB: 3) | 200 OK [http://blog.codeimpossible.com/2010/1/13/Solving-document-ready-is-not-a-function-and-other-problems]


Processing PostsController#show (for 174.36.36.48 at 2011-05-04 15:15:11) [GET]
  Parameters: {"slug"=>"Solving-document-ready-is-not-a-function-and-other-problems", "month"=>"1", "action"=>"show", "day"=>"13", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mPost Load (0.6ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Solving-document-ready-is-not-a-function-and-other-problems') AND (published = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 17ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/1/13/Solving-document-ready-is-not-a-function-and-other-problems]


Processing PostsController#show (for 131.239.15.70 at 2011-05-04 15:15:16) [GET]
  Parameters: {"slug"=>"Solving-document-ready-is-not-a-function-and-other-problems", "month"=>"1", "action"=>"show", "day"=>"13", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Solving-document-ready-is-not-a-function-and-other-problems') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 0) | 200 OK [http://blog.codeimpossible.com/2010/1/13/Solving-document-ready-is-not-a-function-and-other-problems]
  [4;35;1mSQL (0.0ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing Admin::DashboardController#index (for 131.239.15.70 at 2011-05-04 15:16:03) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/dashboard"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 0) [0m
  [4;35;1mSQL (0.1ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering admin/dashboard/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 5ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/admin]


Processing Admin::ConfigController#index (for 131.239.15.70 at 2011-05-04 15:16:06) [GET]
  Parameters: {"action"=>"index", "controller"=>"admin/config"}
Rendering template within layouts/main
Rendering admin/config/index
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
Rendered admin/shared/_userbar (0.1ms)
Completed in 4ms (View: 3, DB: 0) | 200 OK [http://blog.codeimpossible.com/admin/config]
  [4;35;1mSQL (0.1ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 131.239.15.70 at 2011-05-04 15:18:05) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 40ms (View: 38, DB: 0) | 200 OK [http://blog.codeimpossible.com/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#show (for 131.239.15.70 at 2011-05-04 15:23:47) [GET]
  Parameters: {"slug"=>"Solving-document-ready-is-not-a-function-and-other-problems", "month"=>"1", "action"=>"show", "day"=>"13", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mUser Columns (1.7ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Columns (1.4ms)[0m   [0;1mSHOW FIELDS FROM `posts`[0m
  [4;35;1mPost Load (0.8ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Solving-document-ready-is-not-a-function-and-other-problems') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (1.3ms)
Completed in 19ms (View: 6, DB: 4) | 200 OK [http://blog.codeimpossible.com/2010/1/13/Solving-document-ready-is-not-a-function-and-other-problems]


Processing PostsController#index (for 131.239.15.70 at 2011-05-04 15:23:50) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 39ms (View: 37, DB: 0) | 200 OK [http://blog.codeimpossible.com/]
  [4;35;1mSQL (0.1ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 131.239.15.70 at 2011-05-04 15:25:13) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 14ms (View: 12, DB: 0) | 200 OK [http://blog.codeimpossible.com/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 131.239.15.70 at 2011-05-04 15:26:38) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 14ms (View: 12, DB: 0) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#show (for 131.239.15.70 at 2011-05-04 15:26:45) [GET]
  Parameters: {"slug"=>"Quick-Protip-explore-current-directory-from-command-line", "month"=>"4", "action"=>"show", "day"=>"18", "year"=>"2011", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.5ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Quick-Protip-explore-current-directory-from-command-line') LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Rendered admin/shared/_userbar (0.1ms)
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2011/4/18/Quick-Protip-explore-current-directory-from-command-line]


Processing PostsController#show (for 174.36.113.197 at 2011-05-04 15:26:46) [GET]
  Parameters: {"slug"=>"Quick-Protip-explore-current-directory-from-command-line", "month"=>"4", "action"=>"show", "day"=>"18", "year"=>"2011", "controller"=>"posts"}
  [4;35;1mPost Load (0.6ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Quick-Protip-explore-current-directory-from-command-line') AND (published = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 4ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2011/4/18/Quick-Protip-explore-current-directory-from-command-line]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 131.239.15.70 at 2011-05-04 15:27:25) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 14ms (View: 12, DB: 0) | 200 OK [http://blog.codeimpossible.com/]
  [4;35;1mSQL (0.1ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 131.239.15.70 at 2011-05-04 15:28:39) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 14ms (View: 12, DB: 0) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#index (for 131.239.15.70 at 2011-05-04 15:28:41) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mUser Load (0.1ms)[0m   [0;1mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 13ms (View: 12, DB: 0) | 200 OK [http://blog.codeimpossible.com/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 131.239.15.70 at 2011-05-04 15:28:58) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mUser Columns (1.7ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mPost Columns (1.0ms)[0m   [0mSHOW FIELDS FROM `posts`[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (1.3ms)
Completed in 52ms (View: 40, DB: 3) | 200 OK [http://blog.codeimpossible.com/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 131.239.15.70 at 2011-05-04 15:31:44) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mUser Columns (1.7ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mPost Columns (1.0ms)[0m   [0mSHOW FIELDS FROM `posts`[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (1.3ms)
Completed in 53ms (View: 41, DB: 3) | 200 OK [http://blog.codeimpossible.com/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 131.239.15.70 at 2011-05-04 15:32:13) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mUser Columns (1.7ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mPost Columns (1.0ms)[0m   [0mSHOW FIELDS FROM `posts`[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (1.3ms)
Completed in 54ms (View: 42, DB: 3) | 200 OK [http://blog.codeimpossible.com/]
  [4;35;1mSQL (0.1ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 131.239.15.70 at 2011-05-04 15:34:21) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (0.1ms)
Completed in 14ms (View: 12, DB: 0) | 200 OK [http://blog.codeimpossible.com/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 131.239.15.70 at 2011-05-04 15:34:29) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mUser Columns (1.9ms)[0m   [0;1mSHOW FIELDS FROM `users`[0m
  [4;35;1mUser Load (0.1ms)[0m   [0mSELECT * FROM `users` WHERE (`users`.`id` = 1) LIMIT 1[0m
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mPost Columns (1.0ms)[0m   [0mSHOW FIELDS FROM `posts`[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` [0m
Rendering template within layouts/main
Rendering posts/index
Rendered admin/shared/_userbar (1.3ms)
Completed in 53ms (View: 41, DB: 3) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#index (for 131.239.15.70 at 2011-05-04 15:34:39) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;35;1mPost Load (0.7ms)[0m   [0mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 8ms (View: 4, DB: 1) | 200 OK [http://blog.codeimpossible.com/]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#index (for 131.239.15.70 at 2011-05-04 15:35:44) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (0.2ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mPost Columns (1.6ms)[0m   [0mSHOW FIELDS FROM `posts`[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 40ms (View: 30, DB: 2) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#page (for 131.239.15.70 at 2011-05-04 15:35:53) [GET]
  Parameters: {"action"=>"page", "page"=>"2", "controller"=>"posts"}
  [4;35;1mPost Load (0.8ms)[0m   [0mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 5, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 6ms (View: 3, DB: 1) | 200 OK [http://blog.codeimpossible.com/page/2]


Processing PostsController#page (for 131.239.15.70 at 2011-05-04 15:35:55) [GET]
  Parameters: {"action"=>"page", "page"=>"3", "controller"=>"posts"}
  [4;35;1mPost Load (0.7ms)[0m   [0mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 10, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 5ms (View: 3, DB: 1) | 200 OK [http://blog.codeimpossible.com/page/3]


Processing PostsController#page (for 131.239.15.70 at 2011-05-04 15:36:01) [GET]
  Parameters: {"action"=>"page", "page"=>"4", "controller"=>"posts"}
  [4;35;1mPost Load (0.8ms)[0m   [0mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 15, 5[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 5ms (View: 3, DB: 1) | 200 OK [http://blog.codeimpossible.com/page/4]
  [4;35;1mSQL (0.1ms)[0m   [0mSET NAMES 'utf8'[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#page (for 131.239.15.70 at 2011-05-04 15:37:54) [GET]
  Parameters: {"action"=>"page", "page"=>"4", "controller"=>"posts"}
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 15, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 5ms (View: 3, DB: 0) | 200 OK [http://blog.codeimpossible.com/page/4]
  [4;36;1mSQL (0.1ms)[0m   [0;1mSET NAMES 'utf8'[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSET SQL_AUTO_IS_NULL=0[0m


Processing PostsController#page (for 131.239.15.70 at 2011-05-04 15:38:03) [GET]
  Parameters: {"action"=>"page", "page"=>"4", "controller"=>"posts"}
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 15, 5[0m
  [4;35;1mPost Columns (1.6ms)[0m   [0mSHOW FIELDS FROM `posts`[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 41ms (View: 31, DB: 2) | 200 OK [http://blog.codeimpossible.com/page/4]


Processing PostsController#page (for 131.239.15.70 at 2011-05-04 15:38:08) [GET]
  Parameters: {"action"=>"page", "page"=>"3", "controller"=>"posts"}
  [4;35;1mPost Load (0.1ms)[0m   [0mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 10, 5[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 5ms (View: 3, DB: 0) | 200 OK [http://blog.codeimpossible.com/page/3]


Processing PostsController#show (for 131.239.15.70 at 2011-05-04 15:38:16) [GET]
  Parameters: {"slug"=>"Spot-the-bug-TDD-Edition", "month"=>"10", "action"=>"show", "day"=>"12", "year"=>"2010", "controller"=>"posts"}
  [4;35;1mPost Load (0.9ms)[0m   [0mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Spot-the-bug-TDD-Edition') AND (published = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 4ms (View: 2, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/10/12/Spot-the-bug-TDD-Edition]


Processing PostsController#show (for 74.86.244.165 at 2011-05-04 15:38:17) [GET]
  Parameters: {"slug"=>"Spot-the-bug-TDD-Edition", "month"=>"10", "action"=>"show", "day"=>"12", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Spot-the-bug-TDD-Edition') AND (published = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 4ms (View: 1, DB: 0) | 200 OK [http://blog.codeimpossible.com/2010/10/12/Spot-the-bug-TDD-Edition]


Processing PostsController#edit (for 131.239.15.70 at 2011-05-04 15:38:33) [GET]
  Parameters: {"action"=>"edit", "id"=>"206", "controller"=>"posts"}
Redirected to http://blog.codeimpossible.com/session/new
Filter chain halted as [:login_required] rendered_or_redirected.
Completed in 1ms (DB: 0) | 302 Found [http://blog.codeimpossible.com/posts/206/edit]


Processing SessionsController#new (for 131.239.15.70 at 2011-05-04 15:38:33) [GET]
  Parameters: {"action"=>"new", "controller"=>"sessions"}
  [4;35;1mUser Load (33.0ms)[0m   [0mSELECT * FROM `users` [0m
Rendering template within layouts/main
Rendering sessions/new
Completed in 37ms (View: 3, DB: 33) | 200 OK [http://blog.codeimpossible.com/session/new]


Processing PostsController#index (for 131.239.15.70 at 2011-05-04 15:38:36) [GET]
  Parameters: {"action"=>"index", "controller"=>"posts"}
  [4;36;1mPost Load (0.1ms)[0m   [0;1mSELECT * FROM `posts` WHERE (published = 1) ORDER BY created_at DESC LIMIT 0, 5[0m
  [4;35;1mSQL (0.0ms)[0m   [0mSELECT count(*) AS count_all FROM `posts` WHERE (published = 1) [0m
Rendering template within layouts/main
Rendering posts/index
Completed in 5ms (View: 3, DB: 0) | 200 OK [http://blog.codeimpossible.com/]


Processing PostsController#show (for 131.239.15.70 at 2011-05-04 15:38:45) [GET]
  Parameters: {"slug"=>"Make-Implement-Interface-use-auto-properties", "month"=>"11", "action"=>"show", "day"=>"29", "year"=>"2010", "controller"=>"posts"}
  [4;36;1mPost Load (0.6ms)[0m   [0;1mSELECT * FROM `posts` WHERE (`posts`.`permalink` = 'Make-Implement-Interface-use-auto-properties') AND (published = 1) LIMIT 1[0m
Rendering template within layouts/main
Rendering posts/show
Completed in 3ms (View: 1, DB: 1) | 200 OK [http://blog.codeimpossible.com/2010/11/29/Make-Implement-Interface-use-auto-properties]
